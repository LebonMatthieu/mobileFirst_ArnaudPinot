@charset "UTF-8";
/*!
Theme Name: mobileFirst_PinotArnaud
Theme URI: http://arnaudpinot.fr
Author: Arnaud Pinot
Author URI: 
Version: 1.0
Text Domain: ap
*/
/* # Import des partiels */
/****************/
/* # Préfixes des classes générées */
/****************/
/*
Ces classes sont ajoutées devant les sélecteurs.

 - `xx` correspond à votre projet (et doit être configuré).
 
*/
/*
(Il est possible de sortir de cette encapsulation avec `@at-root{}`.)
*/
/*

Prefix : ap 

 */
/****************/
/* # Grille */
/****************/
/*
 - `gutter` : largeur des gouttières ;
*/
/****************/
/* # Logo Height */
/****************/
/*
 - `gutter` : largeur des gouttières ;
*/
/****************/
/* # Media Queries with _Sass-mq_ */
/****************/
/* https://github.com/sass-mq/sass-mq */
/****************/
/* # Variables */
/****************/
/* # Imports des librairies tierces */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/*
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/*
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 8/9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

th,
td {
  padding: 0;
}

body:before {
  background-color: #FCF8E3;
  border-bottom: 1px solid #FBEED5;
  border-left: 1px solid #FBEED5;
  color: #C09853;
  font: small-caption;
  padding: 3px 6px;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 100;
}

@media all and (min-width: 20em) {
  body:before {
    content: "mobile ≥ 320px (20em)";
  }
}

@media all and (min-width: 37.5em) {
  body:before {
    content: "tablet ≥ 600px (37.5em)";
  }
}

@media all and (min-width: 64em) {
  body:before {
    content: "desktop ≥ 1024px (64em)";
  }
}

@media all and (min-width: 87.5em) {
  body:before {
    content: "wide ≥ 1400px (87.5em)";
  }
}

/* # Imports des utilitaires */
/* # Rétablissement du flux */
/*
http://nicolasgallagher.com/micro-clearfix-hack/
*/
/* # _Reset_ (et sa version surchargée) */
/* # Contenu masqué visuellement (et sa version surchargée) */
/**** Keyframes Animation ****/
/*
https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html
*/
/* # Survol des liens */
/* Pas de soulignement par défaut, puis soulignement au survol ou au focus. */
/* Ou soulignement par défaut, puis pas de soulignement au survol ou au focus. */
/* # Étirement des blocs */
/* # Utilitaire pour la fonction calc() */
/* # Imports des _plugins_ */
/* # JS Clickbox */
.no-touchevents .js-clickbox.is-hover {
  cursor: pointer;
}

/* # Imports des utilitaires (préfixés) */
/*
Il est possible de sortir de cette encapsulation avec `@at-root{}`.
*/
/* # Imports des styles de base */
.ap {
  /* Déclaration des éléments de bases pour les éléments HTML5, les classes utiles, les titres et les styles de textes*/
  /*****************/
  /******HTML5 Elements*****/
  /*****************/
}

* {
  box-sizing: border-box;
}

html {
  font-size: 62.5%;
  position: relative;
  color: #000;
  background-color: #fff;
  height: 100%;
  -webkit-font-smoothing: antialiased;
}

body {
  height: 100%;
}

*, *::before, *::after {
  background-repeat: no-repeat;
}

h1, h2, h3, h4 {
  margin: 0;
}

p {
  margin: 0;
}

svg, img {
  width: 100%;
  max-width: 100%;
}

ul {
  margin: 0;
  padding: 0;
}

li {
  list-style: none;
}

a {
  text-decoration: none;
  color: inherit;
}

blockquote {
  padding: 0;
  margin: 0;
}

.overflow {
  overflow: hidden;
}

.uppercase {
  text-transform: uppercase;
}

.hide-for-viewer {
  position: absolute;
  height: 1px;
  width: 1px;
  padding: 0;
  border: 0;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px);
  clip: rect(1px, 1px, 1px, 1px);
}

/* # Imports des styles pour l’agencement général (préfixés) */
.ap {
  /* # Layout */
}

.ap-footer {
  padding: 2rem 0 2rem;
  text-align: left;
}

@media all and (min-width: 37.5em) {
  .ap-footer {
    padding: 6rem 0 2rem 0;
    text-align: center;
  }
}

@media all and (min-width: 64em) {
  .ap-footer {
    padding: 6rem 0;
  }
}

.ap-footer__list {
  display: inline-block;
  width: 100%;
}

.ap-footer__list__item {
  display: inline-block;
  padding-right: 3rem;
  padding-bottom: 1rem;
}

.ap-footer__list__item:nth-child(odd) {
  width: 50%;
  margin-right: -0.25em;
}

.ap-footer__list__item:nth-child(even) {
  width: 50%;
  margin-right: -0.25em;
}

@media all and (min-width: 37.5em) {
  .ap-footer__list__item {
    width: auto;
    margin-right: 5rem;
    padding-right: 0;
  }
  .ap-footer__list__item:nth-child(odd) {
    width: auto;
    margin-right: 5rem;
  }
  .ap-footer__list__item:nth-child(even) {
    width: auto;
    margin-right: 5rem;
  }
  .ap-footer__list__item:last-child {
    margin-right: 0;
  }
}

.ap-footer__link {
  display: inline-block;
  position: relative;
  color: #000;
}

.ap-footer__link:hover {
  color: #3142FF;
}

.ap-header {
  padding-top: 2rem;
  padding-bottom: 4rem;
}

.ap-header__logo {
  display: block;
  width: 8rem;
  height: 8rem;
}

@media all and (min-width: 37.5em) {
  .ap-header__logo {
    width: 10rem;
    height: 10rem;
  }
}

.ap-header__logo svg path {
  fill: #3142FF;
}

.ap-header__logo svg rect {
  fill: #3142FF;
}

.ap-centered, .ap-main-layout {
  margin: auto;
  padding: 0 2rem;
  max-width: 136rem;
}

@media all and (min-width: 37.5em) {
  .ap-centered, .ap-main-layout {
    padding: 0 4rem;
  }
}

@media all and (min-width: 64em) {
  .ap-main-layout {
    position: relative;
    width: 100%;
    min-height: 52rem;
  }
}

@media all and (min-width: 64em) {
  .ap-main-layout__col--wide {
    width: 66.66%;
    padding-left: 4rem;
  }
}

.ap-main-layout__col--small {
  width: 100%;
  padding-left: 0;
}

@media all and (min-width: 64em) {
  .ap-main-layout__col--small {
    width: 100%;
    padding-left: calc(66.66% + 4rem);
  }
}

.ap-navigation {
  /*****************/
  /****** Navigation *****/
  /*****************/
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1;
  width: 100%;
  height: 100%;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  resize: vertical;
  overflow-y: scroll;
  color: #fff;
  background-color: #000;
  /*****************/
  /****** List (ul) *****/
  /*****************/
  /*****************/
  /****** Icon *****/
  /*****************/
}

.ap-navigation:before {
  content: '';
  position: fixed;
  left: 0;
  top: 0;
  display: block;
  width: 100%;
  height: 8rem;
  background-color: #000;
}

@media all and (min-width: 64em) {
  .ap-navigation {
    display: block;
    position: absolute;
    left: 50%;
    right: 0;
    top: 6.5rem;
    height: auto;
    max-width: 136rem;
    padding: 0 4rem;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: inherit;
            flex-direction: inherit;
    -webkit-box-pack: inheritr;
        -ms-flex-pack: inheritr;
            justify-content: inheritr;
    resize: inherit;
    overflow-y: inherit;
    text-align: right;
    color: #000;
    background-color: transparent;
    -webkit-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
            transform: translateX(-50%);
  }
  .ap-navigation:before {
    content: '';
    display: none;
  }
}

.ap-navigation__list {
  padding: 8rem 2rem 8rem 0;
  text-align: right;
  /*****************/
  /****** Items (li) *****/
  /*****************/
}

@media all and (min-width: 64em) {
  .ap-navigation__list {
    padding: 0;
    text-align: center;
    display: inline-block;
  }
}

.ap-navigation__list__item {
  display: inline-block;
  width: 100%;
  font-size: 0;
  line-height: 0;
  /*****************/
  /****** Link *****/
  /*****************/
}

@media all and (min-width: 64em) {
  .ap-navigation__list__item {
    display: inline-block;
    width: auto;
  }
  .ap-navigation__list__item:after {
    content: '';
    display: inline-block;
    vertical-align: middle;
    width: 3rem;
    height: 0.1rem;
    margin: 0 1rem;
    background-color: #000;
  }
  .ap-navigation__list__item:last-child:after {
    content: '';
    display: none;
  }
}

.ap-navigation__list__item__link {
  display: inline-block;
  position: relative;
  color: #fff;
  margin: 1rem 0;
}

.ap-navigation__list__item__link:hover {
  color: #3142FF;
}

.ap-navigation__list__item__link:hover {
  color: #3142FF;
}

.ap-navigation__list__item__link:hover:after {
  content: '';
  position: absolute;
  left: 0;
  bottom: -1rem;
  width: 100%;
  height: 0.2rem;
  background-color: #3142FF;
}

@media all and (min-width: 37.5em) {
  .ap-navigation__list__item__link {
    margin: 2rem 0;
  }
}

@media all and (min-width: 64em) {
  .ap-navigation__list__item__link {
    display: inline-block;
    position: relative;
    color: #000;
    font-family: "Work Sans", sans-serif;
    font-style: normal;
    font-size: 17px;
    font-size: 1.7rem;
    font-weight: 500;
    line-height: 1.58824;
    vertical-align: middle;
    margin: 0;
  }
  .ap-navigation__list__item__link:hover {
    color: #3142FF;
  }
  .ap-navigation__list__item__link:hover {
    color: #3142FF;
  }
  .ap-navigation__list__item__link:hover:after {
    content: '';
    position: absolute;
    left: 0;
    bottom: -1rem;
    width: 100%;
    height: 0.2rem;
    background-color: #3142FF;
  }
  .ap-navigation__list__item__link.is-active {
    display: inline-block;
    position: relative;
    color: #3142FF;
  }
  .ap-navigation__list__item__link.is-active:after {
    content: '';
    position: absolute;
    left: 0;
    bottom: -1rem;
    width: 100%;
    height: 0.2rem;
    background-color: #3142FF;
  }
}

.ap-navigation__icon__wrapper {
  position: absolute;
  top: calc( (8rem / 2) + 2rem - 2.2rem);
  right: 2rem;
  padding: 2rem;
  width: 2.2rem;
  z-index: 3;
}

@media all and (min-width: 37.5em) {
  .ap-navigation__icon__wrapper {
    right: 4rem;
    top: 4rem;
  }
}

.ap-navigation__icon__wrapper:hover {
  cursor: pointer;
}

.ap-navigation__icon__wrapper.is-open {
  position: fixed;
}

.ap-navigation__icon {
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 2.2rem;
  height: 0.2rem;
  -webkit-transform: translateX(-50%) translateY(-50%);
      -ms-transform: translateX(-50%) translateY(-50%);
          transform: translateX(-50%) translateY(-50%);
  background-color: #000;
  -webkit-transition: background-color 0.3s ease 0s;
  transition: background-color 0.3s ease 0s;
  cursor: pointer;
  /*****************/
  /****** When menu is open *****/
}

.ap-navigation__icon:before, .ap-navigation__icon:after {
  content: '';
  display: inline-block;
  position: absolute;
  right: 0;
  width: 100%;
  height: 100%;
  -webkit-transition: top 0.3s ease 0.3s, background-color 0s ease 0.4s, -webkit-transform 0.3s ease 0s;
  transition: top 0.3s ease 0.3s, background-color 0s ease 0.4s, -webkit-transform 0.3s ease 0s;
  transition: transform 0.3s ease 0s, top 0.3s ease 0.3s, background-color 0s ease 0.4s;
  transition: transform 0.3s ease 0s, top 0.3s ease 0.3s, background-color 0s ease 0.4s, -webkit-transform 0.3s ease 0s;
  background-color: #000;
}

.ap-navigation__icon:before {
  top: -0.8rem;
}

.ap-navigation__icon:after {
  top: 0.8rem;
}

.ap-navigation__icon__wrapper.is-open .ap-navigation__icon {
  background-color: transparent;
}

.ap-navigation__icon__wrapper.is-open .ap-navigation__icon:before, .ap-navigation__icon__wrapper.is-open .ap-navigation__icon:after {
  top: 0;
  -webkit-transition: top 0.3s ease 0s, background-color 0.2s ease 0s, -webkit-transform 0.3s ease 0.3s;
  transition: top 0.3s ease 0s, background-color 0.2s ease 0s, -webkit-transform 0.3s ease 0.3s;
  transition: transform 0.3s ease 0.3s, top 0.3s ease 0s, background-color 0.2s ease 0s;
  transition: transform 0.3s ease 0.3s, top 0.3s ease 0s, background-color 0.2s ease 0s, -webkit-transform 0.3s ease 0.3s;
  background-color: #fff;
}

.ap-navigation__icon__wrapper.is-open .ap-navigation__icon:before {
  -webkit-transform: rotate(135deg);
      -ms-transform: rotate(135deg);
          transform: rotate(135deg);
}

.ap-navigation__icon__wrapper.is-open .ap-navigation__icon:after {
  -webkit-transform: rotate(225deg);
      -ms-transform: rotate(225deg);
          transform: rotate(225deg);
}

@media all and (min-width: 64em) {
  .ap-navigation__icon {
    display: none;
  }
}

/* # Imports des composants (préfixés) */
.ap {
  /* # Boutons */
  /* # Links */
  /*****************/
  /****** Titles *****/
  /*****************/
  /*****************/
  /****** Text *****/
  /*****************/
}

.ap-link {
  display: inline-block;
  position: relative;
  color: #3142FF;
}

.ap-link:hover {
  color: #000;
}

.ap-link--alt {
  display: inline-block;
  position: relative;
  color: #000;
  display: inline;
}

.ap-link--alt:hover {
  color: #3142FF;
}

.ap-header__word-animation {
  position: relative;
  width: 100vw;
  height: 6rem;
  margin-top: 3rem;
  overflow: hidden;
}

@media all and (min-width: 37.5em) {
  .ap-header__word-animation {
    height: 10rem;
  }
}

.ap-header__word-animation__wrapper {
  position: absolute;
  left: 0;
  top: 0;
  width: 5000px;
  height: 100%;
}

.ap-header__word-animation__group {
  display: block;
  position: relative;
  float: left;
  margin: 0;
  white-space: nowrap;
  font-size: 0;
  -webkit-animation: translate-keywords linear 8s infinite;
  animation: translate-keywords linear 8s infinite;
}

.ap-header__word-animation__group span,
.ap-header__word-animation__group h2 {
  padding-right: 10rem;
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 60px;
  font-size: 6rem;
  font-weight: 700;
  line-height: 1;
  color: #3142FF;
}

@media all and (min-width: 37.5em) {
  .ap-header__word-animation__group span,
  .ap-header__word-animation__group h2 {
    font-size: 100px;
    font-size: 10rem;
  }
}

@-webkit-keyframes translate-keywords {
  0% {
    -ms-transform: translateX(0);
    /* IE 9 */
    -webkit-transform: translateX(0);
    /* Chrome, Safari, Opera */
    transform: translateX(0);
  }
  100% {
    -ms-transform: translateX(-100%);
    /* IE 9 */
    -webkit-transform: translateX(-100%);
    /* Chrome, Safari, Opera */
    transform: translateX(-100%);
  }
}

@keyframes translate-keywords {
  0% {
    -ms-transform: translateX(0);
    /* IE 9 */
    -webkit-transform: translateX(0);
    /* Chrome, Safari, Opera */
    transform: translateX(0);
  }
  100% {
    -ms-transform: translateX(-100%);
    /* IE 9 */
    -webkit-transform: translateX(-100%);
    /* Chrome, Safari, Opera */
    transform: translateX(-100%);
  }
}

.title-alpha {
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 17px;
  font-size: 1.7rem;
  font-weight: 700;
  line-height: 1;
}

.title-beta {
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 45px;
  font-size: 4.5rem;
  font-weight: 800;
  line-height: 1.16667;
}

@media all and (min-width: 37.5em) {
  .title-beta {
    font-size: 60px;
    font-size: 6rem;
  }
}

.title-gamma {
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 60px;
  font-size: 6rem;
  font-weight: 700;
  line-height: 1;
}

@media all and (min-width: 37.5em) {
  .title-gamma {
    font-size: 100px;
    font-size: 10rem;
  }
}

.text-alpha {
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 16px;
  font-size: 1.6rem;
  font-weight: 500;
  line-height: 1;
}

.text-beta {
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 17px;
  font-size: 1.7rem;
  font-weight: 500;
  line-height: 1.58824;
}

.text-gamma {
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 18px;
  font-size: 1.8rem;
  font-weight: 500;
  line-height: 1.4;
}

@media all and (min-width: 64em) {
  .text-gamma {
    font-size: 20px;
    font-size: 2rem;
  }
}

.text-delta {
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 20px;
  font-size: 2.0rem;
  font-weight: 500;
  line-height: 1.45455;
}

@media all and (min-width: 64em) {
  .text-delta {
    font-size: 22px;
    font-size: 2.2rem;
  }
}

.ap-works {
  position: relative;
  color: #000;
}

.ap-works:before {
  content: '';
  display: block;
  position: absolute;
  right: -2rem;
  bottom: calc(100% - 10rem);
  z-index: -1;
  width: 9999px;
  height: 9999px;
  background-color: #C7EAFF;
}

@media all and (min-width: 37.5em) {
  .ap-works {
    color: #fff;
  }
  .ap-works:before {
    right: 8rem;
    bottom: calc(100% - 45rem / 2);
  }
}

@media all and (min-width: 64em) {
  .ap-works {
    position: absolute;
    top: 0;
    left: 0;
  }
  .ap-works:before {
    bottom: calc(52rem / 2);
  }
}

.ap-works__list {
  position: relative;
  height: 100%;
}

@media all and (min-width: 64em) {
  .ap-works__list {
    height: 52rem;
  }
}

.ap-works__list__items {
  position: relative;
  width: 100%;
  margin-bottom: 6rem;
}

.ap-works__list__items:last-child {
  margin-bottom: 0;
}

@media all and (min-width: 37.5em) {
  .ap-works__list__items {
    height: 45rem;
    margin-bottom: 4rem;
  }
}

@media all and (min-width: 64em) {
  .ap-works__list__items {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    right: 0;
    height: 100%;
    margin: 0;
  }
}

.ap-works__item {
  width: 100%;
  height: 100%;
}

.ap-works__item__image {
  width: 100%;
  height: 20rem;
  background-size: cover;
  background-position: top;
}

@media all and (min-width: 37.5em) {
  .ap-works__item__image {
    height: 100%;
  }
}

.ap-works__item__content {
  position: relative;
}

@media all and (min-width: 37.5em) {
  .ap-works__item__content {
    position: absolute;
    left: 4rem;
    right: 4rem;
    bottom: 4rem;
    max-width: 66.66%;
  }
}

.ap-works__item__role {
  display: none;
}

@media all and (min-width: 37.5em) {
  .ap-works__item__role {
    display: inline-block;
    position: absolute;
    top: 3rem;
    right: 4rem;
    -webkit-transform-origin: right bottom;
        -ms-transform-origin: right bottom;
            transform-origin: right bottom;
    -webkit-transform: rotate(-90deg) translateY(50%);
        -ms-transform: rotate(-90deg) translateY(50%);
            transform: rotate(-90deg) translateY(50%);
  }
}

.ap-works__item__title {
  overflow: hidden;
  position: relative;
  margin-top: 2rem;
  margin-bottom: 1rem;
}

.ap-works__item__title__content {
  display: table;
  -webkit-transform: translateX(-1.8rem);
      -ms-transform: translateX(-1.8rem);
          transform: translateX(-1.8rem);
}

@media all and (min-width: 37.5em) {
  .ap-works__item__title__content {
    -webkit-transform: translateX(-3rem);
        -ms-transform: translateX(-3rem);
            transform: translateX(-3rem);
  }
}

.ap-works__item__title__content--number {
  display: table-cell;
  vertical-align: bottom;
  padding-right: 1rem;
}

.ap-works__item__title__content--name {
  display: table-cell;
  vertical-align: bottom;
}

.ap-works__item__presentation {
  padding: 1rem 0;
}

.ap-works__item__link {
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 17px;
  font-size: 1.7rem;
  font-weight: 500;
  line-height: 1.58824;
  display: inline-block;
  position: relative;
  color: #3142FF;
}

.ap-works__item__link:hover {
  color: #000;
}

.ap-works__item__link:after {
  content: '';
  position: absolute;
  left: 0;
  bottom: -1rem;
  width: 100%;
  height: 0.2rem;
  background-color: #3142FF;
}

.ap-works__item__link:hover {
  color: #000;
}

.ap-works__item__link:hover:after {
  background-color: #000;
}

@media all and (min-width: 37.5em) {
  .ap-works__item__link {
    display: inline-block;
    position: relative;
    color: #fff;
  }
  .ap-works__item__link:hover {
    color: #3142FF;
  }
  .ap-works__item__link:after {
    content: '';
    position: absolute;
    left: 0;
    bottom: -1rem;
    width: 100%;
    height: 0.2rem;
    background-color: #fff;
  }
  .ap-works__item__link:hover {
    color: #3142FF;
  }
  .ap-works__item__link:hover:after {
    background-color: #3142FF;
  }
}

/* # Imports des pages (préfixés) */
.ap-introduction {
  padding-bottom: 4rem;
}

@media all and (min-width: 64em) {
  .ap-introduction {
    padding-bottom: 0;
  }
}

.ap-references {
  position: relative;
  margin: 10rem 0 6rem;
}

.ap-references:before {
  content: '';
  display: block;
  position: absolute;
  left: -2rem;
  right: -2rem;
  top: -4rem;
  bottom: -4rem;
  background-color: #C7EAFF;
}

@media all and (min-width: 37.5em) {
  .ap-references {
    margin: 8rem 0 2rem;
  }
  .ap-references:before {
    left: -4rem;
    right: 8rem;
    background-color: #C7EAFF;
  }
}

@media all and (min-width: 64em) {
  .ap-references {
    margin: 0;
  }
  .ap-references:before {
    content: '';
    display: none;
  }
}

.ap-references__title {
  display: inline-block;
  position: relative;
  margin-bottom: 2rem;
}

.ap-references__title:after {
  content: '';
  display: block;
  position: absolute;
  bottom: -1rem;
  left: 0;
  width: 40%;
  height: 0.2rem;
  background-color: #000;
}

.ap-references__list {
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 20px;
  font-size: 2.0rem;
  font-weight: 500;
  line-height: 1.45455;
}

@media all and (min-width: 64em) {
  .ap-references__list {
    font-size: 22px;
    font-size: 2.2rem;
  }
}

@media all and (min-width: 64em) {
  .ap-references__list {
    font-family: "Work Sans", sans-serif;
    font-style: normal;
    font-size: 17px;
    font-size: 1.7rem;
    font-weight: 500;
    line-height: 1.58824;
  }
}

.ap-references__list__item {
  display: block;
}

@media all and (min-width: 37.5em) {
  .ap-references__list__item {
    display: inline;
  }
}

.ap-references__list__item:after {
  content: ".";
  position: relative;
  color: #000;
}

.ap-references__list__item:last-child:after {
  content: '';
}

@media all and (min-width: 64em) {
  .ap-introduction, .ap-references {
    padding-top: 6rem;
  }
}

@media all and (min-width: 37.5em) {
  .ap-introduction__content, .ap-references__content {
    max-width: 66.66%;
  }
}

@media all and (min-width: 64em) {
  .ap-introduction__content, .ap-references__content {
    max-width: 345px;
    margin-right: 0;
    margin-left: auto;
    display: block;
  }
}

/* # Imports de l’espace temporaire de travail */
/* # Espace temporaire de travail (honteux) */
/* http://csswizardry.com/2013/04/shame-css/ */

/*# sourceMappingURL=data:application/json;base64, */
