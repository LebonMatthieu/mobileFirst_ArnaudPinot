@charset "UTF-8";
/*!
Theme Name: mobileFirst_PinotArnaud
Theme URI: http://arnaudpinot.fr
Author: Arnaud Pinot
Author URI: 
Version: 1.0
Text Domain: ap
*/
/* # Import des partiels */
/****************/
/* # Préfixes des classes générées */
/****************/
/*
Ces classes sont ajoutées devant les sélecteurs.

 - `xx` correspond à votre projet (et doit être configuré).
 
*/
/*
(Il est possible de sortir de cette encapsulation avec `@at-root{}`.)
*/
/*

Prefix : ap 

 */
/****************/
/* # Grille */
/****************/
/*
 - `gutter` : largeur des gouttières ;
*/
/****************/
/* # Logo Height */
/****************/
/*
 - `gutter` : largeur des gouttières ;
*/
/****************/
/* # Media Queries with _Sass-mq_ */
/****************/
/* https://github.com/sass-mq/sass-mq */
/****************/
/* # Variables */
/****************/
/* # Imports des librairies tierces */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/*
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/*
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 8/9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

th,
td {
  padding: 0;
}

/* # Imports des utilitaires */
/* # Rétablissement du flux */
/*
http://nicolasgallagher.com/micro-clearfix-hack/
*/
/* # _Reset_ (et sa version surchargée) */
/* # Contenu masqué visuellement (et sa version surchargée) */
/**** Keyframes Animation ****/
/*
https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html
*/
/* # Survol des liens */
/* Pas de soulignement par défaut, puis soulignement au survol ou au focus. */
/* Ou soulignement par défaut, puis pas de soulignement au survol ou au focus. */
/* # Étirement des blocs */
/* # Utilitaire pour la fonction calc() */
/* # Imports des _plugins_ */
/* # JS Clickbox */
.no-touchevents .js-clickbox.is-hover {
  cursor: pointer;
}

/* # Imports des utilitaires (préfixés) */
/*
Il est possible de sortir de cette encapsulation avec `@at-root{}`.
*/
/* # Imports des styles de base */
.ap {
  /* Déclaration des éléments de bases pour les éléments HTML5, les classes utiles, les titres et les styles de textes*/
  /*****************/
  /******HTML5 Elements*****/
  /*****************/
  /*****************/
  /****** Classes utiles *****/
  /*****************/
}

* {
  box-sizing: border-box;
}

html {
  font-size: 62.5%;
  position: relative;
  color: #000;
  background-color: #fff;
  height: 100%;
  -webkit-font-smoothing: antialiased;
}

body {
  height: 100%;
}

*, *::before, *::after {
  background-repeat: no-repeat;
}

h1, h2, h3, h4 {
  margin: 0;
}

p {
  margin: 0;
}

svg, img {
  width: 100%;
  max-width: 100%;
}

ul {
  margin: 0;
  padding: 0;
}

li {
  list-style: none;
}

a {
  text-decoration: none;
  color: inherit;
}

blockquote {
  padding: 0;
  margin: 0;
}

.overflow {
  overflow: hidden;
}

.uppercase {
  text-transform: uppercase;
}

.hide-for-viewer {
  position: absolute;
  height: 1px;
  width: 1px;
  padding: 0;
  border: 0;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px);
  clip: rect(1px, 1px, 1px, 1px);
}

/* # Imports des styles pour l’agencement général (préfixés) */
.ap {
  /*****************/
  /****** Footer *****/
  /*****************/
  /*****************/
  /****** Centered grid *****/
  /*****************/
  /*****************/
  /****** Main layout for desktop *****/
  /*****************/
}

.ap-footer {
  padding: 2rem 0 2rem;
  text-align: left;
  /*****************/
  /****** Footer Ext Links (ul) *****/
  /*****************/
}

.ap-footer__list {
  display: inline-block;
  width: 100%;
  /*****************/
  /****** Project list items (li) *****/
  /*****************/
}

.ap-footer__list__item {
  display: inline-block;
  padding-right: 3rem;
  padding-bottom: 1rem;
}

.ap-footer__list__item:nth-child(odd) {
  width: 50%;
  margin-right: -0.25em;
}

.ap-footer__list__item:nth-child(even) {
  width: 50%;
  margin-right: -0.25em;
}

.ap-footer__link {
  display: inline-block;
  position: relative;
  color: #000;
  -webkit-transition: color 0.3s ease-in;
  transition: color 0.3s ease-in;
}

.ap-footer__link:hover {
  color: #3142FF;
  -webkit-transition: color 0.3s ease-in;
  transition: color 0.3s ease-in;
}

.ap-header {
  padding-top: 2rem;
  padding-bottom: 4rem;
}

.ap-header__logo {
  display: block;
  width: 8rem;
  height: 8rem;
}

.ap-header__logo svg path {
  fill: #3142FF;
}

.ap-header__logo svg rect {
  fill: #3142FF;
}

.ap-centered, .ap-main-layout {
  margin: auto;
  padding: 0 2rem;
  max-width: 136rem;
}

.ap-main-layout {
  /*****************/
  /****** Types of cols *****/
  /*****************/
}

.ap-main-layout__col--small {
  width: 100%;
  padding-left: 0;
}

.ap-navigation {
  /*****************/
  /****** Navigation *****/
  /*****************/
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1;
  width: 100%;
  height: 100%;
  overflow-y: scroll;
  background-color: #C7EAFF;
  /*****************/
  /****** When wrapper is open *****/
  /*****************/
  /*****************/
  /****** Navigatio List (ul) *****/
  /*****************/
  /*****************/
  /****** Icon Wrapper *****/
  /*****************/
  /*****************/
  /****** Icon style *****/
  /*****************/
}

.ap-navigation:before {
  content: '';
  position: fixed;
  left: 0;
  top: 0;
  display: block;
  width: 100%;
  height: 8rem;
  background-color: #C7EAFF;
}

.ap-navigation.is-open {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  resize: vertical;
}

.ap-navigation__list {
  padding: 8rem 2rem 8rem 0;
  text-align: right;
  /*****************/
  /****** Navigation Items (li) *****/
  /*****************/
}

.ap-navigation__list__item {
  display: inline-block;
  width: 100%;
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 45px;
  font-size: 4.5rem;
  font-weight: 800;
  line-height: 1.16667;
  /*****************/
  /****** Navigation Links *****/
  /*****************/
}

.ap-navigation__list__item__link {
  display: inline-block;
  position: relative;
  color: #fff;
  -webkit-transition: color 0.3s ease-in;
  transition: color 0.3s ease-in;
  margin: 1rem 0;
}

.ap-navigation__list__item__link:hover {
  color: #3142FF;
  -webkit-transition: color 0.3s ease-in;
  transition: color 0.3s ease-in;
}

.ap-navigation__list__item__link:after {
  content: '';
  position: absolute;
  left: 0;
  bottom: -1rem;
  width: 100%;
  height: 0.2rem;
  background-color: transparent;
  -webkit-transition: background-color 0.3s ease-in;
  transition: background-color 0.3s ease-in;
}

.ap-navigation__list__item__link:hover {
  color: #3142FF;
}

.ap-navigation__list__item__link:hover:after {
  background-color: #3142FF;
  -webkit-transition: background-color 0.3s ease-in;
  transition: background-color 0.3s ease-in;
}

.ap-navigation__icon__wrapper {
  position: absolute;
  top: calc( (8rem / 2) + 2rem - 2.2rem);
  right: 2rem;
  padding: 2rem;
  width: 2.2rem;
  z-index: 3;
}

.ap-navigation__icon__wrapper:hover {
  cursor: pointer;
}

.ap-navigation__icon__wrapper.is-open {
  position: fixed;
}

.ap-navigation__icon {
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 2.2rem;
  height: 0.2rem;
  -webkit-transform: translateX(-50%) translateY(-50%);
      -ms-transform: translateX(-50%) translateY(-50%);
          transform: translateX(-50%) translateY(-50%);
  background-color: #000;
  -webkit-transition: background-color 0.3s ease 0s;
  transition: background-color 0.3s ease 0s;
  cursor: pointer;
  /*****************/
  /****** When nav is open & icon is active *****/
  /*****************/
}

.ap-navigation__icon:before, .ap-navigation__icon:after {
  content: '';
  display: inline-block;
  position: absolute;
  right: 0;
  width: 100%;
  height: 100%;
  -webkit-transition: top 0.3s ease 0.3s, background-color 0s ease 0.4s, -webkit-transform 0.3s ease 0s;
  transition: top 0.3s ease 0.3s, background-color 0s ease 0.4s, -webkit-transform 0.3s ease 0s;
  transition: transform 0.3s ease 0s, top 0.3s ease 0.3s, background-color 0s ease 0.4s;
  transition: transform 0.3s ease 0s, top 0.3s ease 0.3s, background-color 0s ease 0.4s, -webkit-transform 0.3s ease 0s;
  background-color: #000;
}

.ap-navigation__icon:before {
  top: -0.8rem;
}

.ap-navigation__icon:after {
  top: 0.8rem;
}

.ap-navigation__icon__wrapper.is-open .ap-navigation__icon {
  background-color: transparent;
}

.ap-navigation__icon__wrapper.is-open .ap-navigation__icon:before, .ap-navigation__icon__wrapper.is-open .ap-navigation__icon:after {
  top: 0;
  -webkit-transition: top 0.3s ease 0s, background-color 0.2s ease 0s, -webkit-transform 0.3s ease 0.3s;
  transition: top 0.3s ease 0s, background-color 0.2s ease 0s, -webkit-transform 0.3s ease 0.3s;
  transition: transform 0.3s ease 0.3s, top 0.3s ease 0s, background-color 0.2s ease 0s;
  transition: transform 0.3s ease 0.3s, top 0.3s ease 0s, background-color 0.2s ease 0s, -webkit-transform 0.3s ease 0.3s;
  background-color: #fff;
}

.ap-navigation__icon__wrapper.is-open .ap-navigation__icon:before {
  -webkit-transform: rotate(135deg);
      -ms-transform: rotate(135deg);
          transform: rotate(135deg);
}

.ap-navigation__icon__wrapper.is-open .ap-navigation__icon:after {
  -webkit-transform: rotate(225deg);
      -ms-transform: rotate(225deg);
          transform: rotate(225deg);
}

/* # Imports des composants (préfixés) */
.ap {
  /*****************/
  /****** Links classes *****/
  /*****************/
  /*****************/
  /****** Word slider *****/
  /*****************/
  /*****************/
  /****** Titles *****/
  /*****************/
  /*****************/
  /****** Text *****/
  /*****************/
  /*****************/
  /****** Wrapper Projects *****/
  /*****************/
}

/*****************/
/****** Slider Button *****/
/*****************/
.next-slide-button {
  display: none;
}

.ap-link {
  display: inline-block;
  position: relative;
  color: #3142FF;
  -webkit-transition: color 0.3s ease-in;
  transition: color 0.3s ease-in;
}

.ap-link:hover {
  color: #000;
  -webkit-transition: color 0.3s ease-in;
  transition: color 0.3s ease-in;
}

.ap-link--alt {
  display: inline-block;
  position: relative;
  color: #000;
  -webkit-transition: color 0.3s ease-in;
  transition: color 0.3s ease-in;
  display: inline;
}

.ap-link--alt:hover {
  color: #3142FF;
  -webkit-transition: color 0.3s ease-in;
  transition: color 0.3s ease-in;
}

.ap-header__word-animation {
  position: relative;
  width: 100vw;
  height: 6rem;
  margin-top: 3rem;
  overflow: hidden;
}

.ap-header__word-animation__wrapper {
  position: absolute;
  left: 0;
  top: 0;
  width: 5000px;
  height: 100%;
}

.ap-header__word-animation__group {
  display: block;
  position: relative;
  float: left;
  margin: 0;
  white-space: nowrap;
  font-size: 0;
  -webkit-animation: translate-keywords linear 8s infinite;
  animation: translate-keywords linear 8s infinite;
}

.ap-header__word-animation__group span,
.ap-header__word-animation__group h2 {
  padding-right: 10rem;
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 60px;
  font-size: 6rem;
  font-weight: 700;
  line-height: 1;
  color: #3142FF;
}

@-webkit-keyframes translate-keywords {
  0% {
    -ms-transform: translateX(0);
    /* IE 9 */
    -webkit-transform: translateX(0);
    /* Chrome, Safari, Opera */
    transform: translateX(0);
  }
  100% {
    -ms-transform: translateX(-100%);
    /* IE 9 */
    -webkit-transform: translateX(-100%);
    /* Chrome, Safari, Opera */
    transform: translateX(-100%);
  }
}

@keyframes translate-keywords {
  0% {
    -ms-transform: translateX(0);
    /* IE 9 */
    -webkit-transform: translateX(0);
    /* Chrome, Safari, Opera */
    transform: translateX(0);
  }
  100% {
    -ms-transform: translateX(-100%);
    /* IE 9 */
    -webkit-transform: translateX(-100%);
    /* Chrome, Safari, Opera */
    transform: translateX(-100%);
  }
}

.title-alpha {
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 17px;
  font-size: 1.7rem;
  font-weight: 700;
  line-height: 1;
}

.title-beta {
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 45px;
  font-size: 4.5rem;
  font-weight: 800;
  line-height: 1.16667;
}

.title-gamma {
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 60px;
  font-size: 6rem;
  font-weight: 700;
  line-height: 1;
}

.text-alpha {
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 16px;
  font-size: 1.6rem;
  font-weight: 500;
  line-height: 1;
}

.text-beta {
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 17px;
  font-size: 1.7rem;
  font-weight: 500;
  line-height: 1.58824;
}

.text-gamma {
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 18px;
  font-size: 1.8rem;
  font-weight: 500;
  line-height: 1.4;
}

.text-delta {
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 20px;
  font-size: 2.0rem;
  font-weight: 500;
  line-height: 1.45455;
}

.ap-works {
  position: relative;
  color: #000;
  /*****************/
  /****** Project list (ul) *****/
  /*****************/
  /*****************/
  /****** Projects (Article) *****/
  /*****************/
}

.ap-works:before {
  content: '';
  display: block;
  position: absolute;
  right: -2rem;
  bottom: calc(100% - 10rem);
  z-index: -1;
  width: 9999px;
  height: 9999px;
  background-color: #C7EAFF;
}

.ap-works__list {
  position: relative;
  height: 100%;
  /*****************/
  /****** Project list items (li) *****/
  /*****************/
}

.ap-works__list__items {
  position: relative;
  width: 100%;
  margin-bottom: 6rem;
}

.ap-works__list__items:last-child {
  margin-bottom: 0;
}

.ap-works__item {
  width: 100%;
  height: 100%;
}

.ap-works__item__image {
  width: 100%;
  height: 20rem;
  background-size: cover;
  background-position: top;
}

.ap-works__item__content {
  position: relative;
}

.ap-works__item__role {
  display: none;
}

.ap-works__item__title {
  overflow: hidden;
  position: relative;
  margin-top: 2rem;
  margin-bottom: 1rem;
}

.ap-works__item__title__content {
  display: table;
  -webkit-transform: translateX(-1.8rem);
      -ms-transform: translateX(-1.8rem);
          transform: translateX(-1.8rem);
}

.ap-works__item__title__content--number {
  display: table-cell;
  vertical-align: bottom;
  padding-right: 1rem;
}

.ap-works__item__title__content--name {
  display: table-cell;
  vertical-align: bottom;
}

.ap-works__item__presentation {
  padding: 1rem 0;
}

.ap-works__item__link {
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 17px;
  font-size: 1.7rem;
  font-weight: 500;
  line-height: 1.58824;
  display: inline-block;
  position: relative;
  color: #3142FF;
  -webkit-transition: color 0.3s ease-in;
  transition: color 0.3s ease-in;
}

.ap-works__item__link:hover {
  color: #000;
  -webkit-transition: color 0.3s ease-in;
  transition: color 0.3s ease-in;
}

.ap-works__item__link:after {
  content: '';
  position: absolute;
  left: 0;
  bottom: -1rem;
  width: 100%;
  height: 0.2rem;
  background-color: #3142FF;
  -webkit-transition: background-color 0.3s ease-in;
  transition: background-color 0.3s ease-in;
}

.ap-works__item__link:hover {
  color: #000;
}

.ap-works__item__link:hover:after {
  background-color: #000;
  -webkit-transition: background-color 0.3s ease-in;
  transition: background-color 0.3s ease-in;
}

/* # Imports des pages (préfixés) */
.ap {
  /*****************/
  /****** Introduction section *****/
  /*****************/
  /*****************/
  /****** References section *****/
  /*****************/
  /*****************/
  /****** Introduction & Reference layout for desktop *****/
  /*****************/
}

.ap-introduction {
  padding-bottom: 4rem;
}

.ap-references {
  position: relative;
  margin: 10rem 0 6rem;
}

.ap-references:before {
  content: '';
  display: block;
  position: absolute;
  left: -2rem;
  right: -2rem;
  top: -4rem;
  bottom: -4rem;
  background-color: #C7EAFF;
}

.ap-references__title {
  display: inline-block;
  position: relative;
  margin-bottom: 2rem;
}

.ap-references__title:after {
  content: '';
  display: block;
  position: absolute;
  bottom: -1rem;
  left: 0;
  width: 40%;
  height: 0.2rem;
  background-color: #000;
}

.ap-references__list {
  font-family: "Work Sans", sans-serif;
  font-style: normal;
  font-size: 20px;
  font-size: 2.0rem;
  font-weight: 500;
  line-height: 1.45455;
}

.ap-references__list__item {
  display: block;
}

.ap-references__list__item:after {
  content: ".";
  position: relative;
  color: #000;
}

.ap-references__list__item:last-child:after {
  content: '';
}

/* # Imports de l’espace temporaire de travail */
/* # Espace temporaire de travail (honteux) */
/* http://csswizardry.com/2013/04/shame-css/ */
@media all and (min-width: 37.5em){
  .ap-footer{
    padding: 6rem 0 2rem 0;
    text-align: center;
  }
  .ap-footer__list__item{
    width: auto;
    margin-right: 5rem;
    padding-right: 0;
  }
  .ap-footer__list__item:nth-child(odd){
    width: auto;
    margin-right: 5rem;
  }
  .ap-footer__list__item:nth-child(even){
    width: auto;
    margin-right: 5rem;
  }
  .ap-footer__list__item:last-child{
    margin-right: 0;
  }
  .ap-header__logo{
    width: 10rem;
    height: 10rem;
  }
  .ap-centered, .ap-main-layout{
    padding: 0 4rem;
  }
  .ap-navigation__list__item{
    font-size: 60px;
    font-size: 6rem;
  }
  .ap-navigation__list__item__link{
    margin: 2rem 0;
  }
  .ap-navigation__icon__wrapper{
    right: 4rem;
    top: 4rem;
  }
  .ap-header__word-animation{
    height: 10rem;
  }
  .ap-header__word-animation__group span,
  .ap-header__word-animation__group h2{
    font-size: 100px;
    font-size: 10rem;
  }
  .title-beta{
    font-size: 60px;
    font-size: 6rem;
  }
  .title-gamma{
    font-size: 100px;
    font-size: 10rem;
  }
  .ap-works{
    color: #fff;
  }
  .ap-works:before{
    right: 8rem;
    bottom: calc(100% - 45rem / 2);
  }
  .ap-works__list__items{
    height: 45rem;
    margin-bottom: 4rem;
  }
  .ap-works__item__image{
    height: 100%;
  }
  .ap-works__item__content{
    position: absolute;
    left: 4rem;
    right: 4rem;
    bottom: 4rem;
    max-width: 66.66%;
  }
  .ap-works__item__role{
    display: inline-block;
    position: absolute;
    top: 3rem;
    right: 4rem;
    -webkit-transform-origin: right bottom;
    -ms-transform-origin: right bottom;
    transform-origin: right bottom;
    -webkit-transform: rotate(-90deg) translateY(50%);
    -ms-transform: rotate(-90deg) translateY(50%);
    transform: rotate(-90deg) translateY(50%);
  }
  .ap-works__item__title__content{
    -webkit-transform: translateX(-3rem);
    -ms-transform: translateX(-3rem);
    transform: translateX(-3rem);
  }
  .ap-works__item__link{
    display: inline-block;
    position: relative;
    color: #fff;
    -webkit-transition: color 0.3s ease-in;
    transition: color 0.3s ease-in;
  }
  .ap-works__item__link:hover{
    color: #3142FF;
    -webkit-transition: color 0.3s ease-in;
    transition: color 0.3s ease-in;
  }
  .ap-works__item__link:after{
    content: '';
    position: absolute;
    left: 0;
    bottom: -1rem;
    width: 100%;
    height: 0.2rem;
    background-color: #fff;
    -webkit-transition: background-color 0.3s ease-in;
    transition: background-color 0.3s ease-in;
  }
  .ap-works__item__link:hover{
    color: #3142FF;
  }
  .ap-works__item__link:hover:after{
    background-color: #3142FF;
    -webkit-transition: background-color 0.3s ease-in;
    transition: background-color 0.3s ease-in;
  }
  .ap-references{
    margin: 8rem 0 2rem;
  }
  .ap-references:before{
    left: -4rem;
    right: 8rem;
    background-color: #C7EAFF;
  }
  .ap-references__list__item{
    display: inline;
  }
  .ap-introduction__content, .ap-references__content{
    max-width: 66.66%;
  }
}
@media all and (min-width: 64em){
  .ap-footer{
    padding: 6rem 0;
  }
  .ap-main-layout{
    position: relative;
    width: 100%;
    min-height: 52rem;
  }
  .ap-main-layout__col--wide{
    width: 66.66%;
    padding-left: 4rem;
  }
  .ap-main-layout__col--small{
    width: 100%;
    padding-left: calc(66.66% + 4rem);
  }
  .ap-navigation{
    display: block;
    position: absolute;
    left: 50%;
    right: 0;
    top: 6rem;
    height: auto;
    max-width: 136rem;
    padding: 0 4rem;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: inherit;
    flex-direction: inherit;
    -webkit-box-pack: inheritr;
    -ms-flex-pack: inheritr;
    justify-content: inheritr;
    resize: inherit;
    overflow-y: inherit;
    text-align: right;
    color: #000;
    background-color: transparent;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translateX(-50%);
  }
  .ap-navigation:before{
    content: '';
    display: none;
  }
  .ap-navigation__list{
    padding: 0;
    text-align: center;
    display: inline-block;
  }
  .ap-navigation__list__item{
    display: inline-block;
    width: auto;
  }
  .ap-navigation__list__item:after{
    content: '';
    display: inline-block;
    vertical-align: middle;
    width: 3rem;
    height: 0.1rem;
    margin: 0 1rem;
    background-color: #000;
  }
  .ap-navigation__list__item:last-child:after{
    content: '';
    display: none;
  }
  .ap-navigation__list__item__link{
    display: inline-block;
    position: relative;
    color: #000;
    -webkit-transition: color 0.3s ease-in;
    transition: color 0.3s ease-in;
    font-family: "Work Sans", sans-serif;
    font-style: normal;
    font-size: 17px;
    font-size: 1.7rem;
    font-weight: 500;
    line-height: 1.58824;
    vertical-align: middle;
    margin: 0;
  }
  .ap-navigation__list__item__link:hover{
    color: #3142FF;
    -webkit-transition: color 0.3s ease-in;
    transition: color 0.3s ease-in;
  }
  .ap-navigation__list__item__link:after{
    content: '';
    position: absolute;
    left: 0;
    bottom: -1rem;
    width: 100%;
    height: 0.2rem;
    background-color: transparent;
    -webkit-transition: background-color 0.3s ease-in;
    transition: background-color 0.3s ease-in;
  }
  .ap-navigation__list__item__link:hover{
    color: #3142FF;
  }
  .ap-navigation__list__item__link:hover:after{
    background-color: #3142FF;
    -webkit-transition: background-color 0.3s ease-in;
    transition: background-color 0.3s ease-in;
  }
  .ap-navigation__list__item__link.is-active{
    display: inline-block;
    position: relative;
    color: #3142FF;
  }
  .ap-navigation__list__item__link.is-active:after{
    content: '';
    position: absolute;
    left: 0;
    bottom: -1rem;
    width: 100%;
    height: 0.2rem;
    background-color: #3142FF;
    -webkit-transition: background-color 0.3s ease-in;
    transition: background-color 0.3s ease-in;
  }
  .ap-navigation__icon{
    display: none;
  }
  .next-slide-button{
    display: block;
    position: absolute;
    right: 4rem;
    bottom: 3rem;
    padding: 1rem 2rem;
    border: 2px solid #fff;
    font-family: "Work Sans", sans-serif;
    font-style: normal;
    font-size: 16px;
    font-size: 1.6rem;
    font-weight: 500;
    line-height: 1;
    background: transparent;
    -webkit-transition: color 0.3s ease-in, background-color 0.3s ease-in;
    transition: color 0.3s ease-in, background-color 0.3s ease-in;
  }
  .next-slide-button:hover{
    color: #3142FF;
    background-color: #fff;
    -webkit-transition: color 0.3s ease-in, background-color 0.3s ease-in;
    transition: color 0.3s ease-in, background-color 0.3s ease-in;
  }
  .text-gamma{
    font-size: 20px;
    font-size: 2rem;
  }
  .text-delta{
    font-size: 22px;
    font-size: 2.2rem;
  }
  .ap-works{
    position: absolute;
    top: 0;
    left: 0;
  }
  .ap-works:before{
    bottom: calc(52rem / 2);
  }
  .ap-works__list{
    height: 52rem;
  }
  .ap-works__list__items{
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    right: 0;
    height: 100%;
    margin: 0;
  }
  .ap-introduction{
    padding-bottom: 0;
  }
  .ap-references{
    margin: 0;
  }
  .ap-references:before{
    content: '';
    display: none;
  }
  .ap-references__list{
    font-size: 22px;
    font-size: 2.2rem;
  }
  .ap-references__list{
    font-family: "Work Sans", sans-serif;
    font-style: normal;
    font-size: 17px;
    font-size: 1.7rem;
    font-weight: 500;
    line-height: 1.58824;
  }
  .ap-introduction, .ap-references{
    padding-top: 6rem;
  }
  .ap-introduction__content, .ap-references__content{
    max-width: 345px;
    margin-right: 0;
    margin-left: auto;
    display: block;
  }
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmNzcyIsInN0eWxlLnNjc3MiLCJfY29uZmlnL19jb25maWcuc2NzcyIsIl9jb25maWcvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvX25vcm1hbGl6ZS5zY3NzIiwiX2NvbmZpZy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9iYXNlL19odG1sLnNjc3MiLCJfY29uZmlnL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL2Jhc2UvX2JvZHkuc2NzcyIsIl9jb25maWcvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvaHRtbDUvX2Jsb2Nrcy5zY3NzIiwiX2NvbmZpZy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9odG1sNS9faW5saW5lLWJsb2Nrcy5zY3NzIiwiX2NvbmZpZy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9odG1sNS9fYXVkaW8uc2NzcyIsIl9jb25maWcvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvaHRtbDUvX2hpZGRlbi5zY3NzIiwiX2NvbmZpZy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9saW5rcy9fZml4LWJhY2tncm91bmQuc2NzcyIsIl9jb25maWcvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvbGlua3MvX2ZpeC1vdXRsaW5lLnNjc3MiLCJfY29uZmlnL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL3RleHQtbGV2ZWwvX2FiYnIuc2NzcyIsIl9jb25maWcvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvdGV4dC1sZXZlbC9fZml4LWJvbGRlci5zY3NzIiwiX2NvbmZpZy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy90ZXh0LWxldmVsL19kZm4uc2NzcyIsIl9jb25maWcvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvdGV4dC1sZXZlbC9faGVhZGluZ3Muc2NzcyIsIl9jb25maWcvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvdGV4dC1sZXZlbC9fbWFyay5zY3NzIiwiX2NvbmZpZy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy90ZXh0LWxldmVsL19zbWFsbC5zY3NzIiwiX2NvbmZpZy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy90ZXh0LWxldmVsL19zdWItYW5kLXN1cC5zY3NzIiwiX2NvbmZpZy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9lbWJlZC9faW1nLnNjc3MiLCJfY29uZmlnL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL2VtYmVkL19zdmcuc2NzcyIsIl9jb25maWcvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvZ3JvdXBpbmcvX2ZpZ3VyZS5zY3NzIiwiX2NvbmZpZy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9ncm91cGluZy9faHIuc2NzcyIsIl9jb25maWcvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvZ3JvdXBpbmcvX3ByZS5zY3NzIiwiX2NvbmZpZy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9ncm91cGluZy9fZml4LW1vbm9zcGFjZS5zY3NzIiwiX2NvbmZpZy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9mb3Jtcy9fZml4LWZvbnQuc2NzcyIsIl9jb25maWcvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvZm9ybXMvX2ZpeC1vdmVyZmxvdy5zY3NzIiwiX2NvbmZpZy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9mb3Jtcy9fZml4LXRleHQtdHJhbnNmb3JtLnNjc3MiLCJfY29uZmlnL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL2Zvcm1zL19idXR0b25zLnNjc3MiLCJfY29uZmlnL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL2Zvcm1zL19kaXNhYmxlZC5zY3NzIiwiX2NvbmZpZy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9mb3Jtcy9fZml4LWZvY3VzLWlubmVyLnNjc3MiLCJfY29uZmlnL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL2Zvcm1zL19maXgtbGluZS1oZWlnaHQuc2NzcyIsIl9jb25maWcvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvZm9ybXMvX2NoZWNrYm94LWFuZC1yYWRpby5zY3NzIiwiX2NvbmZpZy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9mb3Jtcy9fbnVtYmVyLnNjc3MiLCJfY29uZmlnL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL2Zvcm1zL19zZWFyY2guc2NzcyIsIl9jb25maWcvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvZm9ybXMvX2ZpZWxkc2V0LnNjc3MiLCJfY29uZmlnL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL2Zvcm1zL19sZWdlbmQuc2NzcyIsIl9jb25maWcvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvZm9ybXMvX3RleHRhcmVhLnNjc3MiLCJfY29uZmlnL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL2Zvcm1zL19vcHRncm91cC5zY3NzIiwiX2NvbmZpZy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy90YWJsZXMvX2ZpeC1jZWxsLXNwYWNpbmcuc2NzcyIsIl9jb25maWcvX21peGlucy5zY3NzIiwiX3Byb2plY3QvcGx1Z2lucy9fY2xpY2tib3guc2NzcyIsIl9wcm9qZWN0L2Jhc2UvX2Jhc2Uuc2NzcyIsIl9wcm9qZWN0L2xheW91dC9fZm9vdGVyLnNjc3MiLCJfcHJvamVjdC9sYXlvdXQvX2xheW91dC5zY3NzIiwiX3Byb2plY3QvbGF5b3V0L19oZWFkZXIuc2NzcyIsIl9wcm9qZWN0L2xheW91dC9fbmF2LnNjc3MiLCJfY29uZmlnL190eXBvZ3JhcGh5LnNjc3MiLCJfcHJvamVjdC9jb21wb25lbnRzL19saW5rcy5zY3NzIiwiX3Byb2plY3QvY29tcG9uZW50cy9fc2VudGVuY2Utc2xpZGVyLnNjc3MiLCJfcHJvamVjdC9jb21wb25lbnRzL190eXBvZ3JhcGh5LXN0eWxlcy5zY3NzIiwiX3Byb2plY3QvY29tcG9uZW50cy9fd29ya3Muc2NzcyIsIl9wcm9qZWN0L2NvbXBvbmVudHMvX2J1dHRvbnMuc2NzcyIsIl9wcm9qZWN0L3BhZ2VzL19ob21lLnNjc3MiLCJfcHJvamVjdC9zaGFtZS9fc2hhbWUuc2NzcyIsIl9jb25maWcvc2Fzcy1tcS9fbXEuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUI7QUNBakI7Ozs7Ozs7RUFPRTtBQUdGLDJCQUEyQjtBQ1QzQixrQkFBa0I7QUFDbEIscUNBQUE7QUFDQSxrQkFBa0I7QUFFbEI7Ozs7O0VBS0U7QUFFRjs7RUFFRTtBQUVGOzs7O0dBSUc7QUFPSCxrQkFBa0I7QUFDbEIsY0FBYztBQUNkLGtCQUFrQjtBQUVsQjs7RUFFRTtBQU1GLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkIsa0JBQWtCO0FBRWxCOztFQUVFO0FBUUYsa0JBQWtCO0FBQ2xCLG9DQUFvQztBQUNwQyxrQkFBa0I7QUFFbEIsd0NBQXdDO0FBY3hDLGtCQUFrQjtBQUNsQixpQkFBaUI7QUFDakIsa0JBQWtCO0FEM0RsQixzQ0FBc0M7QUVkdEMsNEVBQTRFO0FDQTVFOzs7O0dBSUc7QUFFSDtFQUNFLHdCQUF3QjtFQUFFLE9BQU87RUFDakMsMkJBQTJCO0VBQUUsT0FBTztFQUNwQywrQkFBK0I7RUFBRSxPQUFPO0NBQ3pDOztBQ1ZEOztHQUVHO0FBRUg7RUFDRSxVQUFVO0NBQ1g7O0FGQUQ7Z0ZBQ2dGO0FHUGhGOzs7OztHQUtHO0FBRUg7Ozs7Ozs7Ozs7Ozs7RUFhRSxlQUFlO0NBQ2hCOztBQ3JCRDs7O0dBR0c7QUFFSDs7OztFQUlFLHNCQUFzQjtFQUFFLE9BQU87RUFDL0IseUJBQXlCO0VBQUUsT0FBTztDQUNuQzs7QUNYRDs7O0dBR0c7QUFFSDtFQUNFLGNBQWM7RUFDZCxVQUFVO0NBQ1g7O0FDUkQ7OztHQUdHO0FUcUhIOztFU2pIRSxjQUFjO0NBQ2Y7O0FOT0Q7Z0ZBQ2dGO0FPaEJoRjs7R0FFRztBQUVIO0VBQ0UsOEJBQThCO0NBQy9COztBQ05EOzs7R0FHRztBQUVIOztFQUVFLFdBQVc7Q0FDWjs7QVJjRDtnRkFDZ0Y7QVN2QmhGOztHQUVHO0FBRUg7RUFDRSwwQkFBMEI7Q0FD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c3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG4vKiFcblRoZW1lIE5hbWU6IG1vYmlsZUZpcnN0X1Bpbm90QXJuYXVkXG5UaGVtZSBVUkk6IGh0dHA6Ly9hcm5hdWRwaW5vdC5mclxuQXV0aG9yOiBBcm5hdWQgUGlub3RcbkF1dGhvciBVUkk6IFxuVmVyc2lvbjogMS4wXG5UZXh0IERvbWFpbjogYXBcbiovXG4vKiAjIEltcG9ydCBkZXMgcGFydGllbHMgKi9cbi8qKioqKioqKioqKioqKioqL1xuLyogIyBQcsOpZml4ZXMgZGVzIGNsYXNzZXMgZ8OpbsOpcsOpZXMgKi9cbi8qKioqKioqKioqKioqKioqL1xuLypcbkNlcyBjbGFzc2VzIHNvbnQgYWpvdXTDqWVzIGRldmFudCBsZXMgc8OpbGVjdGV1cnMuXG5cbiAtIGB4eGAgY29ycmVzcG9uZCDDoCB2b3RyZSBwcm9qZXQgKGV0IGRvaXQgw6p0cmUgY29uZmlndXLDqSkuXG4gXG4qL1xuLypcbihJbCBlc3QgcG9zc2libGUgZGUgc29ydGlyIGRlIGNldHRlIGVuY2Fwc3VsYXRpb24gYXZlYyBgQGF0LXJvb3R7fWAuKVxuKi9cbi8qXG5cblByZWZpeCA6IGFwIFxuXG4gKi9cbi8qKioqKioqKioqKioqKioqL1xuLyogIyBHcmlsbGUgKi9cbi8qKioqKioqKioqKioqKioqL1xuLypcbiAtIGBndXR0ZXJgIDogbGFyZ2V1ciBkZXMgZ291dHRpw6hyZXPCoDtcbiovXG4vKioqKioqKioqKioqKioqKi9cbi8qICMgTG9nbyBIZWlnaHQgKi9cbi8qKioqKioqKioqKioqKioqL1xuLypcbiAtIGBndXR0ZXJgIDogbGFyZ2V1ciBkZXMgZ291dHRpw6hyZXPCoDtcbiovXG4vKioqKioqKioqKioqKioqKi9cbi8qICMgTWVkaWEgUXVlcmllcyB3aXRoIF9TYXNzLW1xXyAqL1xuLyoqKioqKioqKioqKioqKiovXG4vKiBodHRwczovL2dpdGh1Yi5jb20vc2Fzcy1tcS9zYXNzLW1xICovXG4vKioqKioqKioqKioqKioqKi9cbi8qICMgVmFyaWFibGVzICovXG4vKioqKioqKioqKioqKioqKi9cbi8qICMgSW1wb3J0cyBkZXMgbGlicmFpcmllcyB0aWVyY2VzICovXG4vKiEgbm9ybWFsaXplLmNzcyB2My4wLjMgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyBhbmQgSUUgdGV4dCBzaXplIGFkanVzdCBhZnRlciBkZXZpY2Ugb3JpZW50YXRpb24gY2hhbmdlLFxuICogICAgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tLlxuICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcbiAqIGFuZCBGaXJlZm94LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cbiAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbiAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgLyogMiAqL1xufVxuXG4vKlxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLypcbiAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAqIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbiAqL1xuW2hpZGRlbl0sXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIEltcHJvdmUgcmVhZGFiaWxpdHkgb2YgZm9jdXNlZCBlbGVtZW50cyB3aGVuIHRoZXkgYXJlIGFsc28gaW4gYW5cbiAqIGFjdGl2ZS9ob3ZlciBzdGF0ZS5cbiAqL1xuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGUgc2V0IHRvIGBib2xkZXJgIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyOiAwO1xufVxuXG4vKipcbiAqIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgOC85IGFuZCBTYWZhcmkuXG4gKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogQWRkcmVzcyBkaWZmZXJlbmNlcyBiZXR3ZWVuIEZpcmVmb3ggYW5kIG90aGVyIGJyb3dzZXJzLlxuICovXG5ociB7XG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgb2RkIGBlbWAtdW5pdCBmb250IHNpemUgcmVuZGVyaW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcbiAqIHN0eWxpbmcgb2YgYHNlbGVjdGAsIHVubGVzcyBhIGBib3JkZXJgIHByb3BlcnR5IGlzIHNldC5cbiAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAgICBLbm93biBpc3N1ZTogYWZmZWN0cyBjb2xvciBvZiBkaXNhYmxlZCBlbGVtZW50cy5cbiAqIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDMgKi9cbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxuICogQWxsIG90aGVyIGZvcm0gY29udHJvbCBlbGVtZW50cyBkbyBub3QgaW5oZXJpdCBgdGV4dC10cmFuc2Zvcm1gIHZhbHVlcy5cbiAqIENvcnJlY3QgYGJ1dHRvbmAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveCwgSUUgOC85LzEwLzExLCBhbmQgT3BlcmEuXG4gKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4gKiAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbiAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4gKiAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4gKi9cbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC8qIDMgKi9cbn1cblxuLyoqXG4gKiBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxuICovXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrLlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIEZpcmVmb3ggNCsgc2V0dGluZyBgbGluZS1oZWlnaHRgIG9uIGBpbnB1dGAgdXNpbmcgYCFpbXBvcnRhbnRgIGluXG4gKiB0aGUgVUEgc3R5bGVzaGVldC5cbiAqL1xuaW5wdXQge1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xufVxuXG4vKipcbiAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXG4gKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKi9cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIEZpeCB0aGUgY3Vyc29yIHN0eWxlIGZvciBDaHJvbWUncyBpbmNyZW1lbnQvZGVjcmVtZW50IGJ1dHRvbnMuIEZvciBjZXJ0YWluXG4gKiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZVxuICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxuICovXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICovXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXG4gKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGNvbG9yYCBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDgvOS8xMC8xMS5cbiAqIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbiAqL1xubGVnZW5kIHtcbiAgYm9yZGVyOiAwO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cbiAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKiBUYWJsZXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbiAqL1xudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxudGgsXG50ZCB7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qICMgSW1wb3J0cyBkZXMgdXRpbGl0YWlyZXMgKi9cbi8qICMgUsOpdGFibGlzc2VtZW50IGR1IGZsdXggKi9cbi8qXG5odHRwOi8vbmljb2xhc2dhbGxhZ2hlci5jb20vbWljcm8tY2xlYXJmaXgtaGFjay9cbiovXG4vKiAjIF9SZXNldF8gKGV0IHNhIHZlcnNpb24gc3VyY2hhcmfDqWUpICovXG4vKiAjIENvbnRlbnUgbWFzcXXDqSB2aXN1ZWxsZW1lbnQgKGV0IHNhIHZlcnNpb24gc3VyY2hhcmfDqWUpICovXG4vKioqKiBLZXlmcmFtZXMgQW5pbWF0aW9uICoqKiovXG4vKlxuaHR0cHM6Ly9kZXZlbG9wZXIueWFob28uY29tL2Jsb2dzL3lkbi9jbGlwLWhpZGRlbi1jb250ZW50LWJldHRlci1hY2Nlc3NpYmlsaXR5LTUzNDU2Lmh0bWxcbiovXG4vKiAjIFN1cnZvbCBkZXMgbGllbnMgKi9cbi8qIFBhcyBkZSBzb3VsaWduZW1lbnQgcGFyIGTDqWZhdXQsIHB1aXMgc291bGlnbmVtZW50IGF1IHN1cnZvbCBvdSBhdSBmb2N1cy4gKi9cbi8qIE91IHNvdWxpZ25lbWVudCBwYXIgZMOpZmF1dCwgcHVpcyBwYXMgZGUgc291bGlnbmVtZW50IGF1IHN1cnZvbCBvdSBhdSBmb2N1cy4gKi9cbi8qICMgw4l0aXJlbWVudCBkZXMgYmxvY3MgKi9cbi8qICMgVXRpbGl0YWlyZSBwb3VyIGxhIGZvbmN0aW9uIGNhbGMoKSAqL1xuLyogIyBJbXBvcnRzIGRlcyBfcGx1Z2luc18gKi9cbi8qICMgSlMgQ2xpY2tib3ggKi9cbi5uby10b3VjaGV2ZW50cyAuanMtY2xpY2tib3guaXMtaG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi8qICMgSW1wb3J0cyBkZXMgdXRpbGl0YWlyZXMgKHByw6lmaXjDqXMpICovXG4vKlxuSWwgZXN0IHBvc3NpYmxlIGRlIHNvcnRpciBkZSBjZXR0ZSBlbmNhcHN1bGF0aW9uIGF2ZWMgYEBhdC1yb290e31gLlxuKi9cbi8qICMgSW1wb3J0cyBkZXMgc3R5bGVzIGRlIGJhc2UgKi9cbi5hcCB7XG4gIC8qIETDqWNsYXJhdGlvbiBkZXMgw6lsw6ltZW50cyBkZSBiYXNlcyBwb3VyIGxlcyDDqWzDqW1lbnRzIEhUTUw1LCBsZXMgY2xhc3NlcyB1dGlsZXMsIGxlcyB0aXRyZXMgZXQgbGVzIHN0eWxlcyBkZSB0ZXh0ZXMqL1xuICAvKioqKioqKioqKioqKioqKiovXG4gIC8qKioqKipIVE1MNSBFbGVtZW50cyoqKioqL1xuICAvKioqKioqKioqKioqKioqKiovXG4gIC8qKioqKioqKioqKioqKioqKi9cbiAgLyoqKioqKiBDbGFzc2VzIHV0aWxlcyAqKioqKi9cbiAgLyoqKioqKioqKioqKioqKioqL1xufVxuXG4qIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDYyLjUlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGNvbG9yOiAjMDAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBoZWlnaHQ6IDEwMCU7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xufVxuXG5ib2R5IHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4qLCAqOjpiZWZvcmUsICo6OmFmdGVyIHtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cblxuaDEsIGgyLCBoMywgaDQge1xuICBtYXJnaW46IDA7XG59XG5cbnAge1xuICBtYXJnaW46IDA7XG59XG5cbnN2ZywgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cblxudWwge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmxpIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6IGluaGVyaXQ7XG59XG5cbmJsb2NrcXVvdGUge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG59XG5cbi5vdmVyZmxvdyB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi51cHBlcmNhc2Uge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4uaGlkZS1mb3Itdmlld2VyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDFweDtcbiAgd2lkdGg6IDFweDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDFweCAxcHggMXB4IDFweCk7XG4gIGNsaXA6IHJlY3QoMXB4LCAxcHgsIDFweCwgMXB4KTtcbn1cblxuLyogIyBJbXBvcnRzIGRlcyBzdHlsZXMgcG91ciBs4oCZYWdlbmNlbWVudCBnw6luw6lyYWwgKHByw6lmaXjDqXMpICovXG4uYXAge1xuICAvKioqKioqKioqKioqKioqKiovXG4gIC8qKioqKiogRm9vdGVyICoqKioqL1xuICAvKioqKioqKioqKioqKioqKiovXG4gIC8qKioqKioqKioqKioqKioqKi9cbiAgLyoqKioqKiBDZW50ZXJlZCBncmlkICoqKioqL1xuICAvKioqKioqKioqKioqKioqKiovXG4gIC8qKioqKioqKioqKioqKioqKi9cbiAgLyoqKioqKiBNYWluIGxheW91dCBmb3IgZGVza3RvcCAqKioqKi9cbiAgLyoqKioqKioqKioqKioqKioqL1xufVxuXG4uYXAtZm9vdGVyIHtcbiAgcGFkZGluZzogMnJlbSAwIDJyZW07XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIC8qKioqKioqKioqKioqKioqKi9cbiAgLyoqKioqKiBGb290ZXIgRXh0IExpbmtzICh1bCkgKioqKiovXG4gIC8qKioqKioqKioqKioqKioqKi9cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMzcuNWVtKSB7XG4gIC5hcC1mb290ZXIge1xuICAgIHBhZGRpbmc6IDZyZW0gMCAycmVtIDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY0ZW0pIHtcbiAgLmFwLWZvb3RlciB7XG4gICAgcGFkZGluZzogNnJlbSAwO1xuICB9XG59XG5cbi5hcC1mb290ZXJfX2xpc3Qge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICAvKioqKioqKioqKioqKioqKiovXG4gIC8qKioqKiogUHJvamVjdCBsaXN0IGl0ZW1zIChsaSkgKioqKiovXG4gIC8qKioqKioqKioqKioqKioqKi9cbn1cblxuLmFwLWZvb3Rlcl9fbGlzdF9faXRlbSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZy1yaWdodDogM3JlbTtcbiAgcGFkZGluZy1ib3R0b206IDFyZW07XG59XG5cbi5hcC1mb290ZXJfX2xpc3RfX2l0ZW06bnRoLWNoaWxkKG9kZCkge1xuICB3aWR0aDogNTAlO1xuICBtYXJnaW4tcmlnaHQ6IC0wLjI1ZW07XG59XG5cbi5hcC1mb290ZXJfX2xpc3RfX2l0ZW06bnRoLWNoaWxkKGV2ZW4pIHtcbiAgd2lkdGg6IDUwJTtcbiAgbWFyZ2luLXJpZ2h0OiAtMC4yNWVtO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAzNy41ZW0pIHtcbiAgLmFwLWZvb3Rlcl9fbGlzdF9faXRlbSB7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiA1cmVtO1xuICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gIH1cbiAgLmFwLWZvb3Rlcl9fbGlzdF9faXRlbTpudGgtY2hpbGQob2RkKSB7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiA1cmVtO1xuICB9XG4gIC5hcC1mb290ZXJfX2xpc3RfX2l0ZW06bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICB3aWR0aDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IDVyZW07XG4gIH1cbiAgLmFwLWZvb3Rlcl9fbGlzdF9faXRlbTpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gIH1cbn1cblxuLmFwLWZvb3Rlcl9fbGluayB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBjb2xvcjogIzAwMDtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlLWluO1xufVxuXG4uYXAtZm9vdGVyX19saW5rOmhvdmVyIHtcbiAgY29sb3I6ICMzMTQyRkY7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZS1pbjtcbn1cblxuLmFwLWhlYWRlciB7XG4gIHBhZGRpbmctdG9wOiAycmVtO1xuICBwYWRkaW5nLWJvdHRvbTogNHJlbTtcbn1cblxuLmFwLWhlYWRlcl9fbG9nbyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogOHJlbTtcbiAgaGVpZ2h0OiA4cmVtO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAzNy41ZW0pIHtcbiAgLmFwLWhlYWRlcl9fbG9nbyB7XG4gICAgd2lkdGg6IDEwcmVtO1xuICAgIGhlaWdodDogMTByZW07XG4gIH1cbn1cblxuLmFwLWhlYWRlcl9fbG9nbyBzdmcgcGF0aCB7XG4gIGZpbGw6ICMzMTQyRkY7XG59XG5cbi5hcC1oZWFkZXJfX2xvZ28gc3ZnIHJlY3Qge1xuICBmaWxsOiAjMzE0MkZGO1xufVxuXG4uYXAtY2VudGVyZWQsIC5hcC1tYWluLWxheW91dCB7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMCAycmVtO1xuICBtYXgtd2lkdGg6IDEzNnJlbTtcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMzcuNWVtKSB7XG4gIC5hcC1jZW50ZXJlZCwgLmFwLW1haW4tbGF5b3V0IHtcbiAgICBwYWRkaW5nOiAwIDRyZW07XG4gIH1cbn1cblxuLmFwLW1haW4tbGF5b3V0IHtcbiAgLyoqKioqKioqKioqKioqKioqL1xuICAvKioqKioqIFR5cGVzIG9mIGNvbHMgKioqKiovXG4gIC8qKioqKioqKioqKioqKioqKi9cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNjRlbSkge1xuICAuYXAtbWFpbi1sYXlvdXQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtaW4taGVpZ2h0OiA1MnJlbTtcbiAgfVxufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA2NGVtKSB7XG4gIC5hcC1tYWluLWxheW91dF9fY29sLS13aWRlIHtcbiAgICB3aWR0aDogNjYuNjYlO1xuICAgIHBhZGRpbmctbGVmdDogNHJlbTtcbiAgfVxufVxuXG4uYXAtbWFpbi1sYXlvdXRfX2NvbC0tc21hbGwge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy1sZWZ0OiAwO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA2NGVtKSB7XG4gIC5hcC1tYWluLWxheW91dF9fY29sLS1zbWFsbCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZy1sZWZ0OiBjYWxjKDY2LjY2JSArIDRyZW0pO1xuICB9XG59XG5cbi5hcC1uYXZpZ2F0aW9uIHtcbiAgLyoqKioqKioqKioqKioqKioqL1xuICAvKioqKioqIE5hdmlnYXRpb24gKioqKiovXG4gIC8qKioqKioqKioqKioqKioqKi9cbiAgZGlzcGxheTogbm9uZTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDE7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0M3RUFGRjtcbiAgLyoqKioqKioqKioqKioqKioqL1xuICAvKioqKioqIFdoZW4gd3JhcHBlciBpcyBvcGVuICoqKioqL1xuICAvKioqKioqKioqKioqKioqKiovXG4gIC8qKioqKioqKioqKioqKioqKi9cbiAgLyoqKioqKiBOYXZpZ2F0aW8gTGlzdCAodWwpICoqKioqL1xuICAvKioqKioqKioqKioqKioqKiovXG4gIC8qKioqKioqKioqKioqKioqKi9cbiAgLyoqKioqKiBJY29uIFdyYXBwZXIgKioqKiovXG4gIC8qKioqKioqKioqKioqKioqKi9cbiAgLyoqKioqKioqKioqKioqKioqL1xuICAvKioqKioqIEljb24gc3R5bGUgKioqKiovXG4gIC8qKioqKioqKioqKioqKioqKi9cbn1cblxuLmFwLW5hdmlnYXRpb246YmVmb3JlIHtcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogOHJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0M3RUFGRjtcbn1cblxuLmFwLW5hdmlnYXRpb24uaXMtb3BlbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICByZXNpemU6IHZlcnRpY2FsO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA2NGVtKSB7XG4gIC5hcC1uYXZpZ2F0aW9uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogNTAlO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogNnJlbTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgbWF4LXdpZHRoOiAxMzZyZW07XG4gICAgcGFkZGluZzogMCA0cmVtO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBpbmhlcml0O1xuICAgIGp1c3RpZnktY29udGVudDogaW5oZXJpdHI7XG4gICAgcmVzaXplOiBpbmhlcml0O1xuICAgIG92ZXJmbG93LXk6IGluaGVyaXQ7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgY29sb3I6ICMwMDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICB9XG4gIC5hcC1uYXZpZ2F0aW9uOmJlZm9yZSB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4uYXAtbmF2aWdhdGlvbl9fbGlzdCB7XG4gIHBhZGRpbmc6IDhyZW0gMnJlbSA4cmVtIDA7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICAvKioqKioqKioqKioqKioqKiovXG4gIC8qKioqKiogTmF2aWdhdGlvbiBJdGVtcyAobGkpICoqKioqL1xuICAvKioqKioqKioqKioqKioqKiovXG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY0ZW0pIHtcbiAgLmFwLW5hdmlnYXRpb25fX2xpc3Qge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxufVxuXG4uYXAtbmF2aWdhdGlvbl9fbGlzdF9faXRlbSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIGZvbnQtZmFtaWx5OiBcIldvcmsgU2Fuc1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogNDVweDtcbiAgZm9udC1zaXplOiA0LjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA4MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjE2NjY3O1xuICAvKioqKioqKioqKioqKioqKiovXG4gIC8qKioqKiogTmF2aWdhdGlvbiBMaW5rcyAqKioqKi9cbiAgLyoqKioqKioqKioqKioqKioqL1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAzNy41ZW0pIHtcbiAgLmFwLW5hdmlnYXRpb25fX2xpc3RfX2l0ZW0ge1xuICAgIGZvbnQtc2l6ZTogNjBweDtcbiAgICBmb250LXNpemU6IDZyZW07XG4gIH1cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNjRlbSkge1xuICAuYXAtbmF2aWdhdGlvbl9fbGlzdF9faXRlbSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiBhdXRvO1xuICB9XG4gIC5hcC1uYXZpZ2F0aW9uX19saXN0X19pdGVtOmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICB3aWR0aDogM3JlbTtcbiAgICBoZWlnaHQ6IDAuMXJlbTtcbiAgICBtYXJnaW46IDAgMXJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICB9XG4gIC5hcC1uYXZpZ2F0aW9uX19saXN0X19pdGVtOmxhc3QtY2hpbGQ6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuLmFwLW5hdmlnYXRpb25fX2xpc3RfX2l0ZW1fX2xpbmsge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY29sb3I6ICNmZmY7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZS1pbjtcbiAgbWFyZ2luOiAxcmVtIDA7XG59XG5cbi5hcC1uYXZpZ2F0aW9uX19saXN0X19pdGVtX19saW5rOmhvdmVyIHtcbiAgY29sb3I6ICMzMTQyRkY7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZS1pbjtcbn1cblxuLmFwLW5hdmlnYXRpb25fX2xpc3RfX2l0ZW1fX2xpbms6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICBib3R0b206IC0xcmVtO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAwLjJyZW07XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZS1pbjtcbn1cblxuLmFwLW5hdmlnYXRpb25fX2xpc3RfX2l0ZW1fX2xpbms6aG92ZXIge1xuICBjb2xvcjogIzMxNDJGRjtcbn1cblxuLmFwLW5hdmlnYXRpb25fX2xpc3RfX2l0ZW1fX2xpbms6aG92ZXI6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzE0MkZGO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZS1pbjtcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMzcuNWVtKSB7XG4gIC5hcC1uYXZpZ2F0aW9uX19saXN0X19pdGVtX19saW5rIHtcbiAgICBtYXJnaW46IDJyZW0gMDtcbiAgfVxufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA2NGVtKSB7XG4gIC5hcC1uYXZpZ2F0aW9uX19saXN0X19pdGVtX19saW5rIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGNvbG9yOiAjMDAwO1xuICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZS1pbjtcbiAgICBmb250LWZhbWlseTogXCJXb3JrIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC1zaXplOiAxN3B4O1xuICAgIGZvbnQtc2l6ZTogMS43cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTg4MjQ7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICBtYXJnaW46IDA7XG4gIH1cbiAgLmFwLW5hdmlnYXRpb25fX2xpc3RfX2l0ZW1fX2xpbms6aG92ZXIge1xuICAgIGNvbG9yOiAjMzE0MkZGO1xuICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZS1pbjtcbiAgfVxuICAuYXAtbmF2aWdhdGlvbl9fbGlzdF9faXRlbV9fbGluazphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgYm90dG9tOiAtMXJlbTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDAuMnJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZS1pbjtcbiAgfVxuICAuYXAtbmF2aWdhdGlvbl9fbGlzdF9faXRlbV9fbGluazpob3ZlciB7XG4gICAgY29sb3I6ICMzMTQyRkY7XG4gIH1cbiAgLmFwLW5hdmlnYXRpb25fX2xpc3RfX2l0ZW1fX2xpbms6aG92ZXI6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMTQyRkY7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2UtaW47XG4gIH1cbiAgLmFwLW5hdmlnYXRpb25fX2xpc3RfX2l0ZW1fX2xpbmsuaXMtYWN0aXZlIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGNvbG9yOiAjMzE0MkZGO1xuICB9XG4gIC5hcC1uYXZpZ2F0aW9uX19saXN0X19pdGVtX19saW5rLmlzLWFjdGl2ZTphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgYm90dG9tOiAtMXJlbTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDAuMnJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzE0MkZGO1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlLWluO1xuICB9XG59XG5cbi5hcC1uYXZpZ2F0aW9uX19pY29uX193cmFwcGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IGNhbGMoICg4cmVtIC8gMikgKyAycmVtIC0gMi4ycmVtKTtcbiAgcmlnaHQ6IDJyZW07XG4gIHBhZGRpbmc6IDJyZW07XG4gIHdpZHRoOiAyLjJyZW07XG4gIHotaW5kZXg6IDM7XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDM3LjVlbSkge1xuICAuYXAtbmF2aWdhdGlvbl9faWNvbl9fd3JhcHBlciB7XG4gICAgcmlnaHQ6IDRyZW07XG4gICAgdG9wOiA0cmVtO1xuICB9XG59XG5cbi5hcC1uYXZpZ2F0aW9uX19pY29uX193cmFwcGVyOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uYXAtbmF2aWdhdGlvbl9faWNvbl9fd3JhcHBlci5pcy1vcGVuIHtcbiAgcG9zaXRpb246IGZpeGVkO1xufVxuXG4uYXAtbmF2aWdhdGlvbl9faWNvbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB3aWR0aDogMi4ycmVtO1xuICBoZWlnaHQ6IDAuMnJlbTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSk7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlIDBzO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC8qKioqKioqKioqKioqKioqKi9cbiAgLyoqKioqKiBXaGVuIG5hdiBpcyBvcGVuICYgaWNvbiBpcyBhY3RpdmUgKioqKiovXG4gIC8qKioqKioqKioqKioqKioqKi9cbn1cblxuLmFwLW5hdmlnYXRpb25fX2ljb246YmVmb3JlLCAuYXAtbmF2aWdhdGlvbl9faWNvbjphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2UgMHMsIHRvcCAwLjNzIGVhc2UgMC4zcywgYmFja2dyb3VuZC1jb2xvciAwcyBlYXNlIDAuNHM7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG59XG5cbi5hcC1uYXZpZ2F0aW9uX19pY29uOmJlZm9yZSB7XG4gIHRvcDogLTAuOHJlbTtcbn1cblxuLmFwLW5hdmlnYXRpb25fX2ljb246YWZ0ZXIge1xuICB0b3A6IDAuOHJlbTtcbn1cblxuLmFwLW5hdmlnYXRpb25fX2ljb25fX3dyYXBwZXIuaXMtb3BlbiAuYXAtbmF2aWdhdGlvbl9faWNvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4uYXAtbmF2aWdhdGlvbl9faWNvbl9fd3JhcHBlci5pcy1vcGVuIC5hcC1uYXZpZ2F0aW9uX19pY29uOmJlZm9yZSwgLmFwLW5hdmlnYXRpb25fX2ljb25fX3dyYXBwZXIuaXMtb3BlbiAuYXAtbmF2aWdhdGlvbl9faWNvbjphZnRlciB7XG4gIHRvcDogMDtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZSAwLjNzLCB0b3AgMC4zcyBlYXNlIDBzLCBiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZSAwcztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cblxuLmFwLW5hdmlnYXRpb25fX2ljb25fX3dyYXBwZXIuaXMtb3BlbiAuYXAtbmF2aWdhdGlvbl9faWNvbjpiZWZvcmUge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxMzVkZWcpO1xufVxuXG4uYXAtbmF2aWdhdGlvbl9faWNvbl9fd3JhcHBlci5pcy1vcGVuIC5hcC1uYXZpZ2F0aW9uX19pY29uOmFmdGVyIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMjI1ZGVnKTtcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNjRlbSkge1xuICAuYXAtbmF2aWdhdGlvbl9faWNvbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4vKiAjIEltcG9ydHMgZGVzIGNvbXBvc2FudHMgKHByw6lmaXjDqXMpICovXG4uYXAge1xuICAvKioqKioqKioqKioqKioqKiovXG4gIC8qKioqKiogTGlua3MgY2xhc3NlcyAqKioqKi9cbiAgLyoqKioqKioqKioqKioqKioqL1xuICAvKioqKioqKioqKioqKioqKiovXG4gIC8qKioqKiogV29yZCBzbGlkZXIgKioqKiovXG4gIC8qKioqKioqKioqKioqKioqKi9cbiAgLyoqKioqKioqKioqKioqKioqL1xuICAvKioqKioqIFRpdGxlcyAqKioqKi9cbiAgLyoqKioqKioqKioqKioqKioqL1xuICAvKioqKioqKioqKioqKioqKiovXG4gIC8qKioqKiogVGV4dCAqKioqKi9cbiAgLyoqKioqKioqKioqKioqKioqL1xuICAvKioqKioqKioqKioqKioqKiovXG4gIC8qKioqKiogV3JhcHBlciBQcm9qZWN0cyAqKioqKi9cbiAgLyoqKioqKioqKioqKioqKioqL1xufVxuXG4vKioqKioqKioqKioqKioqKiovXG4vKioqKioqIFNsaWRlciBCdXR0b24gKioqKiovXG4vKioqKioqKioqKioqKioqKiovXG4ubmV4dC1zbGlkZS1idXR0b24ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA2NGVtKSB7XG4gIC5uZXh0LXNsaWRlLWJ1dHRvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiA0cmVtO1xuICAgIGJvdHRvbTogM3JlbTtcbiAgICBwYWRkaW5nOiAxcmVtIDJyZW07XG4gICAgYm9yZGVyOiAycHggc29saWQgI2ZmZjtcbiAgICBmb250LWZhbWlseTogXCJXb3JrIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlLWluLCBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZS1pbjtcbiAgfVxuICAubmV4dC1zbGlkZS1idXR0b246aG92ZXIge1xuICAgIGNvbG9yOiAjMzE0MkZGO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlLWluLCBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZS1pbjtcbiAgfVxufVxuXG4uYXAtbGluayB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBjb2xvcjogIzMxNDJGRjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlLWluO1xufVxuXG4uYXAtbGluazpob3ZlciB7XG4gIGNvbG9yOiAjMDAwO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGVhc2UtaW47XG59XG5cbi5hcC1saW5rLS1hbHQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY29sb3I6ICMwMDA7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZS1pbjtcbiAgZGlzcGxheTogaW5saW5lO1xufVxuXG4uYXAtbGluay0tYWx0OmhvdmVyIHtcbiAgY29sb3I6ICMzMTQyRkY7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZS1pbjtcbn1cblxuLmFwLWhlYWRlcl9fd29yZC1hbmltYXRpb24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiA2cmVtO1xuICBtYXJnaW4tdG9wOiAzcmVtO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAzNy41ZW0pIHtcbiAgLmFwLWhlYWRlcl9fd29yZC1hbmltYXRpb24ge1xuICAgIGhlaWdodDogMTByZW07XG4gIH1cbn1cblxuLmFwLWhlYWRlcl9fd29yZC1hbmltYXRpb25fX3dyYXBwZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDUwMDBweDtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uYXAtaGVhZGVyX193b3JkLWFuaW1hdGlvbl9fZ3JvdXAge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luOiAwO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBmb250LXNpemU6IDA7XG4gIC13ZWJraXQtYW5pbWF0aW9uOiB0cmFuc2xhdGUta2V5d29yZHMgbGluZWFyIDhzIGluZmluaXRlO1xuICAtbW96LWFuaW1hdGlvbjogdHJhbnNsYXRlLWtleXdvcmRzIGxpbmVhciA4cyBpbmZpbml0ZTtcbiAgYW5pbWF0aW9uOiB0cmFuc2xhdGUta2V5d29yZHMgbGluZWFyIDhzIGluZmluaXRlO1xufVxuXG4uYXAtaGVhZGVyX193b3JkLWFuaW1hdGlvbl9fZ3JvdXAgc3Bhbixcbi5hcC1oZWFkZXJfX3dvcmQtYW5pbWF0aW9uX19ncm91cCBoMiB7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcmVtO1xuICBmb250LWZhbWlseTogXCJXb3JrIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXNpemU6IDYwcHg7XG4gIGZvbnQtc2l6ZTogNnJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIGNvbG9yOiAjMzE0MkZGO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAzNy41ZW0pIHtcbiAgLmFwLWhlYWRlcl9fd29yZC1hbmltYXRpb25fX2dyb3VwIHNwYW4sXG4gIC5hcC1oZWFkZXJfX3dvcmQtYW5pbWF0aW9uX19ncm91cCBoMiB7XG4gICAgZm9udC1zaXplOiAxMDBweDtcbiAgICBmb250LXNpemU6IDEwcmVtO1xuICB9XG59XG5cbkAtd2Via2l0LWtleWZyYW1lcyB0cmFuc2xhdGUta2V5d29yZHMge1xuICAwJSB7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAvKiBJRSA5ICovXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLyogQ2hyb21lLCBTYWZhcmksIE9wZXJhICovXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICB9XG4gIDEwMCUge1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICAgIC8qIElFIDkgKi9cbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XG4gICAgLyogQ2hyb21lLCBTYWZhcmksIE9wZXJhICovXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbiAgfVxufVxuXG5ALW1vei1rZXlmcmFtZXMgdHJhbnNsYXRlLWtleXdvcmRzIHtcbiAgMCUge1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgLyogSUUgOSAqL1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC8qIENocm9tZSwgU2FmYXJpLCBPcGVyYSAqL1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxuICAxMDAlIHtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbiAgICAvKiBJRSA5ICovXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICAgIC8qIENocm9tZSwgU2FmYXJpLCBPcGVyYSAqL1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XG4gIH1cbn1cblxuQC1tcy1rZXlmcmFtZXMgdHJhbnNsYXRlLWtleXdvcmRzIHtcbiAgLmFwIDAlIHtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC8qIElFIDkgKi9cbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAvKiBDaHJvbWUsIFNhZmFyaSwgT3BlcmEgKi9cbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gIH1cbiAgLmFwIDEwMCUge1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICAgIC8qIElFIDkgKi9cbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XG4gICAgLyogQ2hyb21lLCBTYWZhcmksIE9wZXJhICovXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIHRyYW5zbGF0ZS1rZXl3b3JkcyB7XG4gIDAlIHtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC8qIElFIDkgKi9cbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAvKiBDaHJvbWUsIFNhZmFyaSwgT3BlcmEgKi9cbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gIH1cbiAgMTAwJSB7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XG4gICAgLyogSUUgOSAqL1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbiAgICAvKiBDaHJvbWUsIFNhZmFyaSwgT3BlcmEgKi9cbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICB9XG59XG5cbi50aXRsZS1hbHBoYSB7XG4gIGZvbnQtZmFtaWx5OiBcIldvcmsgU2Fuc1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMTdweDtcbiAgZm9udC1zaXplOiAxLjdyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAxO1xufVxuXG4udGl0bGUtYmV0YSB7XG4gIGZvbnQtZmFtaWx5OiBcIldvcmsgU2Fuc1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogNDVweDtcbiAgZm9udC1zaXplOiA0LjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA4MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjE2NjY3O1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAzNy41ZW0pIHtcbiAgLnRpdGxlLWJldGEge1xuICAgIGZvbnQtc2l6ZTogNjBweDtcbiAgICBmb250LXNpemU6IDZyZW07XG4gIH1cbn1cblxuLnRpdGxlLWdhbW1hIHtcbiAgZm9udC1mYW1pbHk6IFwiV29yayBTYW5zXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1zaXplOiA2MHB4O1xuICBmb250LXNpemU6IDZyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAxO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAzNy41ZW0pIHtcbiAgLnRpdGxlLWdhbW1hIHtcbiAgICBmb250LXNpemU6IDEwMHB4O1xuICAgIGZvbnQtc2l6ZTogMTByZW07XG4gIH1cbn1cblxuLnRleHQtYWxwaGEge1xuICBmb250LWZhbWlseTogXCJXb3JrIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xuICBmb250LXdlaWdodDogNTAwO1xuICBsaW5lLWhlaWdodDogMTtcbn1cblxuLnRleHQtYmV0YSB7XG4gIGZvbnQtZmFtaWx5OiBcIldvcmsgU2Fuc1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMTdweDtcbiAgZm9udC1zaXplOiAxLjdyZW07XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjU4ODI0O1xufVxuXG4udGV4dC1nYW1tYSB7XG4gIGZvbnQtZmFtaWx5OiBcIldvcmsgU2Fuc1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgZm9udC1zaXplOiAxLjhyZW07XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY0ZW0pIHtcbiAgLnRleHQtZ2FtbWEge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBmb250LXNpemU6IDJyZW07XG4gIH1cbn1cblxuLnRleHQtZGVsdGEge1xuICBmb250LWZhbWlseTogXCJXb3JrIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXNpemU6IDIwcHg7XG4gIGZvbnQtc2l6ZTogMi4wcmVtO1xuICBmb250LXdlaWdodDogNTAwO1xuICBsaW5lLWhlaWdodDogMS40NTQ1NTtcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNjRlbSkge1xuICAudGV4dC1kZWx0YSB7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICAgIGZvbnQtc2l6ZTogMi4ycmVtO1xuICB9XG59XG5cbi5hcC13b3JrcyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY29sb3I6ICMwMDA7XG4gIC8qKioqKioqKioqKioqKioqKi9cbiAgLyoqKioqKiBQcm9qZWN0IGxpc3QgKHVsKSAqKioqKi9cbiAgLyoqKioqKioqKioqKioqKioqL1xuICAvKioqKioqKioqKioqKioqKiovXG4gIC8qKioqKiogUHJvamVjdHMgKEFydGljbGUpICoqKioqL1xuICAvKioqKioqKioqKioqKioqKiovXG59XG5cbi5hcC13b3JrczpiZWZvcmUge1xuICBjb250ZW50OiAnJztcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IC0ycmVtO1xuICBib3R0b206IGNhbGMoMTAwJSAtIDEwcmVtKTtcbiAgei1pbmRleDogLTE7XG4gIHdpZHRoOiA5OTk5cHg7XG4gIGhlaWdodDogOTk5OXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzdFQUZGO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAzNy41ZW0pIHtcbiAgLmFwLXdvcmtzIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgfVxuICAuYXAtd29ya3M6YmVmb3JlIHtcbiAgICByaWdodDogOHJlbTtcbiAgICBib3R0b206IGNhbGMoMTAwJSAtIDQ1cmVtIC8gMik7XG4gIH1cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNjRlbSkge1xuICAuYXAtd29ya3Mge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgfVxuICAuYXAtd29ya3M6YmVmb3JlIHtcbiAgICBib3R0b206IGNhbGMoNTJyZW0gLyAyKTtcbiAgfVxufVxuXG4uYXAtd29ya3NfX2xpc3Qge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogMTAwJTtcbiAgLyoqKioqKioqKioqKioqKioqL1xuICAvKioqKioqIFByb2plY3QgbGlzdCBpdGVtcyAobGkpICoqKioqL1xuICAvKioqKioqKioqKioqKioqKiovXG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY0ZW0pIHtcbiAgLmFwLXdvcmtzX19saXN0IHtcbiAgICBoZWlnaHQ6IDUycmVtO1xuICB9XG59XG5cbi5hcC13b3Jrc19fbGlzdF9faXRlbXMge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiA2cmVtO1xufVxuXG4uYXAtd29ya3NfX2xpc3RfX2l0ZW1zOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAzNy41ZW0pIHtcbiAgLmFwLXdvcmtzX19saXN0X19pdGVtcyB7XG4gICAgaGVpZ2h0OiA0NXJlbTtcbiAgICBtYXJnaW4tYm90dG9tOiA0cmVtO1xuICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY0ZW0pIHtcbiAgLmFwLXdvcmtzX19saXN0X19pdGVtcyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICByaWdodDogMDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWFyZ2luOiAwO1xuICB9XG59XG5cbi5hcC13b3Jrc19faXRlbSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5hcC13b3Jrc19faXRlbV9faW1hZ2Uge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAyMHJlbTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAzNy41ZW0pIHtcbiAgLmFwLXdvcmtzX19pdGVtX19pbWFnZSB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG59XG5cbi5hcC13b3Jrc19faXRlbV9fY29udGVudCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMzcuNWVtKSB7XG4gIC5hcC13b3Jrc19faXRlbV9fY29udGVudCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDRyZW07XG4gICAgcmlnaHQ6IDRyZW07XG4gICAgYm90dG9tOiA0cmVtO1xuICAgIG1heC13aWR0aDogNjYuNjYlO1xuICB9XG59XG5cbi5hcC13b3Jrc19faXRlbV9fcm9sZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDM3LjVlbSkge1xuICAuYXAtd29ya3NfX2l0ZW1fX3JvbGUge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAzcmVtO1xuICAgIHJpZ2h0OiA0cmVtO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0IGJvdHRvbTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpIHRyYW5zbGF0ZVkoNTAlKTtcbiAgfVxufVxuXG4uYXAtd29ya3NfX2l0ZW1fX3RpdGxlIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tdG9wOiAycmVtO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG4uYXAtd29ya3NfX2l0ZW1fX3RpdGxlX19jb250ZW50IHtcbiAgZGlzcGxheTogdGFibGU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMS44cmVtKTtcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMzcuNWVtKSB7XG4gIC5hcC13b3Jrc19faXRlbV9fdGl0bGVfX2NvbnRlbnQge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtM3JlbSk7XG4gIH1cbn1cblxuLmFwLXdvcmtzX19pdGVtX190aXRsZV9fY29udGVudC0tbnVtYmVyIHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgcGFkZGluZy1yaWdodDogMXJlbTtcbn1cblxuLmFwLXdvcmtzX19pdGVtX190aXRsZV9fY29udGVudC0tbmFtZSB7XG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG59XG5cbi5hcC13b3Jrc19faXRlbV9fcHJlc2VudGF0aW9uIHtcbiAgcGFkZGluZzogMXJlbSAwO1xufVxuXG4uYXAtd29ya3NfX2l0ZW1fX2xpbmsge1xuICBmb250LWZhbWlseTogXCJXb3JrIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXNpemU6IDE3cHg7XG4gIGZvbnQtc2l6ZTogMS43cmVtO1xuICBmb250LXdlaWdodDogNTAwO1xuICBsaW5lLWhlaWdodDogMS41ODgyNDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGNvbG9yOiAjMzE0MkZGO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGVhc2UtaW47XG59XG5cbi5hcC13b3Jrc19faXRlbV9fbGluazpob3ZlciB7XG4gIGNvbG9yOiAjMDAwO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGVhc2UtaW47XG59XG5cbi5hcC13b3Jrc19faXRlbV9fbGluazphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogLTFyZW07XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDAuMnJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMxNDJGRjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2UtaW47XG59XG5cbi5hcC13b3Jrc19faXRlbV9fbGluazpob3ZlciB7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4uYXAtd29ya3NfX2l0ZW1fX2xpbms6aG92ZXI6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZS1pbjtcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMzcuNWVtKSB7XG4gIC5hcC13b3Jrc19faXRlbV9fbGluayB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGVhc2UtaW47XG4gIH1cbiAgLmFwLXdvcmtzX19pdGVtX19saW5rOmhvdmVyIHtcbiAgICBjb2xvcjogIzMxNDJGRjtcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGVhc2UtaW47XG4gIH1cbiAgLmFwLXdvcmtzX19pdGVtX19saW5rOmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICBib3R0b206IC0xcmVtO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMC4ycmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2UtaW47XG4gIH1cbiAgLmFwLXdvcmtzX19pdGVtX19saW5rOmhvdmVyIHtcbiAgICBjb2xvcjogIzMxNDJGRjtcbiAgfVxuICAuYXAtd29ya3NfX2l0ZW1fX2xpbms6aG92ZXI6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMTQyRkY7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2UtaW47XG4gIH1cbn1cblxuLyogIyBJbXBvcnRzIGRlcyBwYWdlcyAocHLDqWZpeMOpcykgKi9cbi5hcCB7XG4gIC8qKioqKioqKioqKioqKioqKi9cbiAgLyoqKioqKiBJbnRyb2R1Y3Rpb24gc2VjdGlvbiAqKioqKi9cbiAgLyoqKioqKioqKioqKioqKioqL1xuICAvKioqKioqKioqKioqKioqKiovXG4gIC8qKioqKiogUmVmZXJlbmNlcyBzZWN0aW9uICoqKioqL1xuICAvKioqKioqKioqKioqKioqKiovXG4gIC8qKioqKioqKioqKioqKioqKi9cbiAgLyoqKioqKiBJbnRyb2R1Y3Rpb24gJiBSZWZlcmVuY2UgbGF5b3V0IGZvciBkZXNrdG9wICoqKioqL1xuICAvKioqKioqKioqKioqKioqKiovXG59XG5cbi5hcC1pbnRyb2R1Y3Rpb24ge1xuICBwYWRkaW5nLWJvdHRvbTogNHJlbTtcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNjRlbSkge1xuICAuYXAtaW50cm9kdWN0aW9uIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgfVxufVxuXG4uYXAtcmVmZXJlbmNlcyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAxMHJlbSAwIDZyZW07XG59XG5cbi5hcC1yZWZlcmVuY2VzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAtMnJlbTtcbiAgcmlnaHQ6IC0ycmVtO1xuICB0b3A6IC00cmVtO1xuICBib3R0b206IC00cmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzdFQUZGO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAzNy41ZW0pIHtcbiAgLmFwLXJlZmVyZW5jZXMge1xuICAgIG1hcmdpbjogOHJlbSAwIDJyZW07XG4gIH1cbiAgLmFwLXJlZmVyZW5jZXM6YmVmb3JlIHtcbiAgICBsZWZ0OiAtNHJlbTtcbiAgICByaWdodDogOHJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzdFQUZGO1xuICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY0ZW0pIHtcbiAgLmFwLXJlZmVyZW5jZXMge1xuICAgIG1hcmdpbjogMDtcbiAgfVxuICAuYXAtcmVmZXJlbmNlczpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuLmFwLXJlZmVyZW5jZXNfX3RpdGxlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07XG59XG5cbi5hcC1yZWZlcmVuY2VzX190aXRsZTphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IC0xcmVtO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogNDAlO1xuICBoZWlnaHQ6IDAuMnJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbn1cblxuLmFwLXJlZmVyZW5jZXNfX2xpc3Qge1xuICBmb250LWZhbWlseTogXCJXb3JrIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXNpemU6IDIwcHg7XG4gIGZvbnQtc2l6ZTogMi4wcmVtO1xuICBmb250LXdlaWdodDogNTAwO1xuICBsaW5lLWhlaWdodDogMS40NTQ1NTtcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNjRlbSkge1xuICAuYXAtcmVmZXJlbmNlc19fbGlzdCB7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICAgIGZvbnQtc2l6ZTogMi4ycmVtO1xuICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY0ZW0pIHtcbiAgLmFwLXJlZmVyZW5jZXNfX2xpc3Qge1xuICAgIGZvbnQtZmFtaWx5OiBcIldvcmsgU2Fuc1wiLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXNpemU6IDE3cHg7XG4gICAgZm9udC1zaXplOiAxLjdyZW07XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBsaW5lLWhlaWdodDogMS41ODgyNDtcbiAgfVxufVxuXG4uYXAtcmVmZXJlbmNlc19fbGlzdF9faXRlbSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAzNy41ZW0pIHtcbiAgLmFwLXJlZmVyZW5jZXNfX2xpc3RfX2l0ZW0ge1xuICAgIGRpc3BsYXk6IGlubGluZTtcbiAgfVxufVxuXG4uYXAtcmVmZXJlbmNlc19fbGlzdF9faXRlbTphZnRlciB7XG4gIGNvbnRlbnQ6IFwiLlwiO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4uYXAtcmVmZXJlbmNlc19fbGlzdF9faXRlbTpsYXN0LWNoaWxkOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY0ZW0pIHtcbiAgLmFwLWludHJvZHVjdGlvbiwgLmFwLXJlZmVyZW5jZXMge1xuICAgIHBhZGRpbmctdG9wOiA2cmVtO1xuICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDM3LjVlbSkge1xuICAuYXAtaW50cm9kdWN0aW9uX19jb250ZW50LCAuYXAtcmVmZXJlbmNlc19fY29udGVudCB7XG4gICAgbWF4LXdpZHRoOiA2Ni42NiU7XG4gIH1cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNjRlbSkge1xuICAuYXAtaW50cm9kdWN0aW9uX19jb250ZW50LCAuYXAtcmVmZXJlbmNlc19fY29udGVudCB7XG4gICAgbWF4LXdpZHRoOiAzNDVweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cblxuLyogIyBJbXBvcnRzIGRlIGzigJllc3BhY2UgdGVtcG9yYWlyZSBkZSB0cmF2YWlsICovXG4vKiAjIEVzcGFjZSB0ZW1wb3JhaXJlIGRlIHRyYXZhaWwgKGhvbnRldXgpICovXG4vKiBodHRwOi8vY3Nzd2l6YXJkcnkuY29tLzIwMTMvMDQvc2hhbWUtY3NzLyAqL1xuIiwiLyohXG5UaGVtZSBOYW1lOiBtb2JpbGVGaXJzdF9QaW5vdEFybmF1ZFxuVGhlbWUgVVJJOiBodHRwOi8vYXJuYXVkcGlub3QuZnJcbkF1dGhvcjogQXJuYXVkIFBpbm90XG5BdXRob3IgVVJJOiBcblZlcnNpb246IDEuMFxuVGV4dCBEb21haW46IGFwXG4qL1xuXG5cbi8qICMgSW1wb3J0IGRlcyBwYXJ0aWVscyAqL1xuXG5AaW1wb3J0ICdfY29uZmlnL2NvbmZpZyc7XG5cbi8qICMgSW1wb3J0cyBkZXMgbGlicmFpcmllcyB0aWVyY2VzICovXG5cbkBpbXBvcnQgJ19jb25maWcvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3Mvbm9ybWFsaXplLnNjc3MnO1xuQGltcG9ydCAnX2NvbmZpZy9zYXNzLW1xL19tcS5zY3NzJztcbi8qICMgSW1wb3J0cyBkZXMgdXRpbGl0YWlyZXMgKi9cblxuQGltcG9ydCAnX2NvbmZpZy9mdW5jdGlvbnMnO1xuQGltcG9ydCAnX2NvbmZpZy9taXhpbnMnO1xuQGltcG9ydCAnX2NvbmZpZy90eXBvZ3JhcGh5JztcblxuLyogIyBJbXBvcnRzIGRlcyBfcGx1Z2luc18gKi9cbkBpbXBvcnQgXCJfcHJvamVjdC9wbHVnaW5zL19jbGlja2JveC5zY3NzXCI7XG5cbi8qICMgSW1wb3J0cyBkZXMgdXRpbGl0YWlyZXMgKHByw6lmaXjDqXMpICovXG5cbi8qXG5JbCBlc3QgcG9zc2libGUgZGUgc29ydGlyIGRlIGNldHRlIGVuY2Fwc3VsYXRpb24gYXZlYyBgQGF0LXJvb3R7fWAuXG4qL1xuXG4vKiAjIEltcG9ydHMgZGVzIHN0eWxlcyBkZSBiYXNlICovXG4uI3skcHJlZml4LXByb2plY3R9XG57XG5AaW1wb3J0IFwiX3Byb2plY3QvYmFzZS9fYmFzZS5zY3NzXCI7XG59XG5cbi8qICMgSW1wb3J0cyBkZXMgc3R5bGVzIHBvdXIgbOKAmWFnZW5jZW1lbnQgZ8OpbsOpcmFsIChwcsOpZml4w6lzKSAqL1xuXG4uI3skcHJlZml4LXByb2plY3R9XG57XG5AaW1wb3J0IFwiX3Byb2plY3QvbGF5b3V0L19mb290ZXIuc2Nzc1wiO1xuQGltcG9ydCBcIl9wcm9qZWN0L2xheW91dC9faGVhZGVyLnNjc3NcIjtcbkBpbXBvcnQgXCJfcHJvamVjdC9sYXlvdXQvX2xheW91dC5zY3NzXCI7XG5AaW1wb3J0IFwiX3Byb2plY3QvbGF5b3V0L19uYXYuc2Nzc1wiO1xufVxuXG4vKiAjIEltcG9ydHMgZGVzIGNvbXBvc2FudHMgKHByw6lmaXjDqXMpICovXG5cbi4jeyRwcmVmaXgtcHJvamVjdH1cbntcbkBpbXBvcnQgXCJfcHJvamVjdC9jb21wb25lbnRzL19idXR0b25zLnNjc3NcIjtcbkBpbXBvcnQgXCJfcHJvamVjdC9jb21wb25lbnRzL19saW5rcy5zY3NzXCI7XG5AaW1wb3J0IFwiX3Byb2plY3QvY29tcG9uZW50cy9fc2VudGVuY2Utc2xpZGVyLnNjc3NcIjtcbkBpbXBvcnQgXCJfcHJvamVjdC9jb21wb25lbnRzL190eXBvZ3JhcGh5LXN0eWxlcy5zY3NzXCI7XG5AaW1wb3J0IFwiX3Byb2plY3QvY29tcG9uZW50cy9fd29ya3Muc2Nzc1wiO1xufVxuIFxuLyogIyBJbXBvcnRzIGRlcyBwYWdlcyAocHLDqWZpeMOpcykgKi9cblxuLiN7JHByZWZpeC1wcm9qZWN0fVxueyAgXG5AaW1wb3J0IFwiX3Byb2plY3QvcGFnZXMvX2hvbWUuc2Nzc1wiO1xufVxuXG4vKiAjIEltcG9ydHMgZGUgbOKAmWVzcGFjZSB0ZW1wb3JhaXJlIGRlIHRyYXZhaWwgKi9cbkBpbXBvcnQgXCJfcHJvamVjdC9zaGFtZS9fc2hhbWUuc2Nzc1wiOyIsIlxuLyoqKioqKioqKioqKioqKiovXG4vKiAjIFByw6lmaXhlcyBkZXMgY2xhc3NlcyBnw6luw6lyw6llcyAqL1xuLyoqKioqKioqKioqKioqKiovXG5cbi8qXG5DZXMgY2xhc3NlcyBzb250IGFqb3V0w6llcyBkZXZhbnQgbGVzIHPDqWxlY3RldXJzLlxuXG4gLSBgeHhgIGNvcnJlc3BvbmQgw6Agdm90cmUgcHJvamV0IChldCBkb2l0IMOqdHJlIGNvbmZpZ3Vyw6kpLlxuIFxuKi9cblxuLypcbihJbCBlc3QgcG9zc2libGUgZGUgc29ydGlyIGRlIGNldHRlIGVuY2Fwc3VsYXRpb24gYXZlYyBgQGF0LXJvb3R7fWAuKVxuKi9cblxuLypcblxuUHJlZml4IDogYXAgXG5cbiAqL1xuXG4kcHJlZml4LXByb2plY3Q6ICdhcCcgIWRlZmF1bHQ7XG5cblxuXG5cbi8qKioqKioqKioqKioqKioqL1xuLyogIyBHcmlsbGUgKi9cbi8qKioqKioqKioqKioqKioqL1xuXG4vKlxuIC0gYGd1dHRlcmAgOiBsYXJnZXVyIGRlcyBnb3V0dGnDqHJlc8KgO1xuKi9cblxuJGd1dHRlcjogMnJlbSAhZGVmYXVsdDtcbiRkZXNrdG9wLWd1dHRlcjogNHJlbSAhZGVmYXVsdDtcblxuXG4vKioqKioqKioqKioqKioqKi9cbi8qICMgTG9nbyBIZWlnaHQgKi9cbi8qKioqKioqKioqKioqKioqL1xuXG4vKlxuIC0gYGd1dHRlcmAgOiBsYXJnZXVyIGRlcyBnb3V0dGnDqHJlc8KgO1xuKi9cblxuJGxvZ28taDogOHJlbSAhZGVmYXVsdDtcbiRkZXNrdG9wLWxvZ28taDogMTByZW0gIWRlZmF1bHQ7XG5cblxuXG5cbi8qKioqKioqKioqKioqKioqL1xuLyogIyBNZWRpYSBRdWVyaWVzIHdpdGggX1Nhc3MtbXFfICovXG4vKioqKioqKioqKioqKioqKi9cblxuLyogaHR0cHM6Ly9naXRodWIuY29tL3Nhc3MtbXEvc2Fzcy1tcSAqL1xuXG4kbXEtYnJlYWtwb2ludHM6IChcblx0bW9iaWxlOiAgICAgICAgICAgICAgIFx0MzIwcHgsXG5cdHRhYmxldDogICAgICAgICAgICAgICBcdDYwMHB4LFxuXHRkZXNrdG9wOiAgICAgICAgICAgICAgXHQxMDI0cHgsXG5cdHdpZGU6ICAgICAgICAgICAgICAgICBcdDE0MDBweCxcbik7XG5cbi8vJG1xLXNob3ctYnJlYWtwb2ludHM6IChtb2JpbGUsIHRhYmxldCwgZGVza3RvcCwgd2lkZSk7XG5cblxuXG5cbi8qKioqKioqKioqKioqKioqL1xuLyogIyBWYXJpYWJsZXMgKi9cbi8qKioqKioqKioqKioqKioqL1xuXG4vLyBGb250c1xuJGZvbnQtcmVndWxhcjogJ1dvcmsgU2FucycsIHNhbnMtc2VyaWYgIWRlZmF1bHQ7XG5cbi8vIENvbG9ycyBcbiRkYXJrOiAjMDAwICFkZWZhdWx0O1xuJGNsZWFyOiAjZmZmICFkZWZhdWx0O1xuJGRlZmF1bHQtYmdjOiAjZmZmICFkZWZhdWx0O1xuXG4vLyBUaGVtZSBjb2xvcnNcblxuJHRoZW1lLWNvbG9yOiAjMzE0MkZGICFkZWZhdWx0OyAvL0JsdWVcbiRhbHQtdGhlbWUtY29sb3I6ICNDN0VBRkYgIWRlZmF1bHQ7IC8vQ3lhblxuXG5cblxuXG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2My4wLjMgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbkBpbXBvcnQgJ2Jhc2UvaHRtbCc7XG5AaW1wb3J0ICdiYXNlL2JvZHknO1xuXG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbkBpbXBvcnQgJ2h0bWw1L2Jsb2Nrcyc7XG5AaW1wb3J0ICdodG1sNS9pbmxpbmUtYmxvY2tzJztcbkBpbXBvcnQgJ2h0bWw1L2F1ZGlvJztcbkBpbXBvcnQgJ2h0bWw1L2hpZGRlbic7XG5cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbkBpbXBvcnQgJ2xpbmtzL2ZpeC1iYWNrZ3JvdW5kJztcbkBpbXBvcnQgJ2xpbmtzL2ZpeC1vdXRsaW5lJztcblxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuQGltcG9ydCAndGV4dC1sZXZlbC9hYmJyJztcbkBpbXBvcnQgJ3RleHQtbGV2ZWwvZml4LWJvbGRlcic7XG5AaW1wb3J0ICd0ZXh0LWxldmVsL2Rmbic7XG5AaW1wb3J0ICd0ZXh0LWxldmVsL2hlYWRpbmdzJztcbkBpbXBvcnQgJ3RleHQtbGV2ZWwvbWFyayc7XG5AaW1wb3J0ICd0ZXh0LWxldmVsL3NtYWxsJztcbkBpbXBvcnQgJ3RleHQtbGV2ZWwvc3ViLWFuZC1zdXAnO1xuXG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbkBpbXBvcnQgJ2VtYmVkL2ltZyc7XG5AaW1wb3J0ICdlbWJlZC9zdmcnO1xuXG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbkBpbXBvcnQgJ2dyb3VwaW5nL2ZpZ3VyZSc7XG5AaW1wb3J0ICdncm91cGluZy9ocic7XG5AaW1wb3J0ICdncm91cGluZy9wcmUnO1xuQGltcG9ydCAnZ3JvdXBpbmcvZml4LW1vbm9zcGFjZSc7XG5cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcbiAqIHN0eWxpbmcgb2YgYHNlbGVjdGAsIHVubGVzcyBhIGBib3JkZXJgIHByb3BlcnR5IGlzIHNldC5cbiAqL1xuXG5AaW1wb3J0ICdmb3Jtcy9maXgtZm9udCc7XG5AaW1wb3J0ICdmb3Jtcy9maXgtb3ZlcmZsb3cnO1xuQGltcG9ydCAnZm9ybXMvZml4LXRleHQtdHJhbnNmb3JtJztcbkBpbXBvcnQgJ2Zvcm1zL2J1dHRvbnMnO1xuQGltcG9ydCAnZm9ybXMvZGlzYWJsZWQnO1xuQGltcG9ydCAnZm9ybXMvZml4LWZvY3VzLWlubmVyJztcbkBpbXBvcnQgJ2Zvcm1zL2ZpeC1saW5lLWhlaWdodCc7XG5AaW1wb3J0ICdmb3Jtcy9jaGVja2JveC1hbmQtcmFkaW8nO1xuQGltcG9ydCAnZm9ybXMvbnVtYmVyJztcbkBpbXBvcnQgJ2Zvcm1zL3NlYXJjaCc7XG5AaW1wb3J0ICdmb3Jtcy9maWVsZHNldCc7XG5AaW1wb3J0ICdmb3Jtcy9sZWdlbmQnO1xuQGltcG9ydCAnZm9ybXMvdGV4dGFyZWEnO1xuQGltcG9ydCAnZm9ybXMvb3B0Z3JvdXAnO1xuXG5cbi8qIFRhYmxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuQGltcG9ydCAndGFibGVzL2ZpeC1jZWxsLXNwYWNpbmcnO1xuIiwiLyoqXG4gKiAxLiBTZXQgZGVmYXVsdCBmb250IGZhbWlseSB0byBzYW5zLXNlcmlmLlxuICogMi4gUHJldmVudCBpT1MgYW5kIElFIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgZGV2aWNlIG9yaWVudGF0aW9uIGNoYW5nZSxcbiAqICAgIHdpdGhvdXQgZGlzYWJsaW5nIHVzZXIgem9vbS5cbiAqL1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG4iLCIvKipcbiAqIFJlbW92ZSBkZWZhdWx0IG1hcmdpbi5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuIiwiLyoqXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcbiAqIGFuZCBGaXJlZm94LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbiIsIi8qKlxuICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbiAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvKiAyICovXG59XG4iLCIvKlxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuIiwiLypcbiAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAqIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbiAqL1xuXG5baGlkZGVuXSxcbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbiIsIi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuIiwiLyoqXG4gKiBJbXByb3ZlIHJlYWRhYmlsaXR5IG9mIGZvY3VzZWQgZWxlbWVudHMgd2hlbiB0aGV5IGFyZSBhbHNvIGluIGFuXG4gKiBhY3RpdmUvaG92ZXIgc3RhdGUuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDtcbn1cbiIsIi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cbiIsIi8qKlxuICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbiIsIi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbiIsIi8qKlxuICogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuICogY29udGV4dHMgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG4iLCIvKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQ6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuIiwiLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuIiwiLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cbiIsIi8qKlxuICogUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyOiAwO1xufVxuIiwiLyoqXG4gKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOC85LzEwLzExLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbiIsIi8qKlxuICogQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgOC85IGFuZCBTYWZhcmkuXG4gKi9cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cbiIsIi8qKlxuICogQWRkcmVzcyBkaWZmZXJlbmNlcyBiZXR3ZWVuIEZpcmVmb3ggYW5kIG90aGVyIGJyb3dzZXJzLlxuICovXG5cbmhyIHtcbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDtcbn1cbiIsIi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG4iLCIvKipcbiAqIEFkZHJlc3Mgb2RkIGBlbWAtdW5pdCBmb250IHNpemUgcmVuZGVyaW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07XG59XG4iLCIvKipcbiAqIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxuICogMi4gQ29ycmVjdCBmb250IHByb3BlcnRpZXMgbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbiAgbWFyZ2luOiAwOyAvKiAzICovXG59XG4iLCIvKipcbiAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuIiwiLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cbiIsIi8qKlxuICogMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2BcbiAqICAgIGFuZCBgdmlkZW9gIGNvbnRyb2xzLlxuICogMi4gQ29ycmVjdCBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxuICogMy4gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcbiAqICAgIGBpbnB1dGAgYW5kIG90aGVycy5cbiAqL1xuXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7IC8qIDMgKi9cbn1cbiIsIi8qKlxuICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiAqL1xuXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG4iLCIvKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cbiIsIi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cblxuaW5wdXQge1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xufVxuIiwiLyoqXG4gKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXG4gKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxuICpcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICovXG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuIiwiLyoqXG4gKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cbiAqL1xuXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cbiIsIi8qKlxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuIiwiLyoqXG4gKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXG4gKi9cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG4iLCIvKipcbiAqIDEuIENvcnJlY3QgYGNvbG9yYCBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDgvOS8xMC8xMS5cbiAqIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3JkZXI6IDA7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuIiwiLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG4iLCIvKipcbiAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cbiAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4iLCIvKipcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbiAqL1xuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG50aCxcbnRkIHtcbiAgcGFkZGluZzogMDtcbn1cbiIsIi8qICMgUsOpdGFibGlzc2VtZW50IGR1IGZsdXggKi9cblxuLypcbmh0dHA6Ly9uaWNvbGFzZ2FsbGFnaGVyLmNvbS9taWNyby1jbGVhcmZpeC1oYWNrL1xuKi9cblxuQG1peGluIGNsZWFyZml4XG57XG5cdC8vem9vbTogMTtcblx0XG5cdCY6YmVmb3JlLFxuXHQmOmFmdGVyXG5cdHtcblx0XHRjb250ZW50OiAnJztcblx0XHRkaXNwbGF5OiB0YWJsZTtcblx0fVxuXHQmOmFmdGVyXG5cdHtcblx0XHRjbGVhcjogYm90aDtcblx0fVxufVxuXG4vKiAjIF9SZXNldF8gKGV0IHNhIHZlcnNpb24gc3VyY2hhcmfDqWUpICovXG5cbkBtaXhpbiByZXNldFxue1xuXHRtYXJnaW46ICAwO1xuXHRwYWRkaW5nOiAwO1xuXHRib3JkZXI6ICAwO1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgLy8gcG91ciBsZXMgYm91dG9uc1xuXHRsaXN0LXN0eWxlLXR5cGU6IG5vbmU7IC8vIHBvdXIgbGVzIGxpc3Rlc1xufVxuXG5cbi8qICMgQ29udGVudSBtYXNxdcOpIHZpc3VlbGxlbWVudCAoZXQgc2EgdmVyc2lvbiBzdXJjaGFyZ8OpZSkgKi9cblxuXG5cbi8qKioqIEtleWZyYW1lcyBBbmltYXRpb24gKioqKi9cbkBtaXhpbiBrZXlmcmFtZXMoJG5hbWUpIHtcbiAgQC13ZWJraXQta2V5ZnJhbWVzICN7JG5hbWV9IHtcbiAgICBAY29udGVudDsgXG4gIH1cbiAgQC1tb3ota2V5ZnJhbWVzICN7JG5hbWV9IHtcbiAgICBAY29udGVudDtcbiAgfVxuICBALW1zLWtleWZyYW1lcyAjeyRuYW1lfSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbiAgQGtleWZyYW1lcyAjeyRuYW1lfSB7XG4gICAgQGNvbnRlbnQ7XG4gIH0gXG59XG5cbi8qXG5odHRwczovL2RldmVsb3Blci55YWhvby5jb20vYmxvZ3MveWRuL2NsaXAtaGlkZGVuLWNvbnRlbnQtYmV0dGVyLWFjY2Vzc2liaWxpdHktNTM0NTYuaHRtbFxuKi9cblxuQG1peGluIGhpZGUtZm9yLXZpZXdlclxue1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdGhlaWdodDogIDFweDtcblx0d2lkdGg6ICAgMXB4O1xuXHRwYWRkaW5nOiAwO1xuXHRib3JkZXI6ICAwO1xuXHRvdmVyZmxvdzogaGlkZGVuO1xuXHRjbGlwOiByZWN0KDFweCAgMXB4ICAxcHggIDFweCk7XG5cdGNsaXA6IHJlY3QoMXB4LCAxcHgsIDFweCwgMXB4KTtcbn1cblxuXG4vKiAjIFN1cnZvbCBkZXMgbGllbnMgKi9cblxuLyogUGFzIGRlIHNvdWxpZ25lbWVudCBwYXIgZMOpZmF1dCwgcHVpcyBzb3VsaWduZW1lbnQgYXUgc3Vydm9sIG91IGF1IGZvY3VzLiAqL1xuXG5AbWl4aW4gZGVjby1yb2xsXG57XG5cdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblx0XG5cdCY6aG92ZXIsXG5cdCY6Zm9jdXNcblx0e1xuXHRcdHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuXHR9XG59XG5cbi8qIE91IHNvdWxpZ25lbWVudCBwYXIgZMOpZmF1dCwgcHVpcyBwYXMgZGUgc291bGlnbmVtZW50IGF1IHN1cnZvbCBvdSBhdSBmb2N1cy4gKi9cblxuQG1peGluIGRlY28tdW5yb2xsXG57XG5cdHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuXHRcblx0Jjpob3Zlcixcblx0Jjpmb2N1c1xuXHR7XG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHR9XG59XG5cbi8qICMgw4l0aXJlbWVudCBkZXMgYmxvY3MgKi9cblxuQG1peGluIHN0cmV0Y2goJGxlbmd0aDogMClcbntcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcblx0bGVmdDogICAkbGVuZ3RoO1xuXHR0b3A6ICAgICRsZW5ndGg7XG5cdGJvdHRvbTogJGxlbmd0aDtcblx0cmlnaHQ6ICAkbGVuZ3RoO1xuXHRcdFxufVxuXG5cblxuXG4vKiAjIFV0aWxpdGFpcmUgcG91ciBsYSBmb25jdGlvbiBjYWxjKCkgKi9cblxuQG1peGluIGNhbGMoJHByb3BlcnR5LCAkZXhwcmVzc2lvbilcbntcblx0I3skcHJvcGVydHl9OiAtd2Via2l0LWNhbGMoI3skZXhwcmVzc2lvbn0pOyBcblx0I3skcHJvcGVydHl9OiBjYWxjKCN7JGV4cHJlc3Npb259KTsgXG59IFxuXG5cblxuXG4vLyBJbmxpbmUtYmxvY2sgYnVnZml4XG4vLyBAbGluayBodHRwOi8vd3d3LmFsc2FjcmVhdGlvbnMuY29tL2FzdHVjZS9saXJlLzE0MzItZGlzcGxheS1pbmxpbmUtYmxvY2stZXNwYWNlcy1pbmRlc2lyYWJsZXMuaHRtbFxuQG1peGluIG5vLWlubGluZS1ibG9jay1tYXJnaW4oKVxue1xuXHRtYXJnaW4tcmlnaHQ6IC0wLjI1ZW07XG5cbn1cblxuXG5cblxuLy9CdXR0b25cblxuQG1peGluIGJ1dHRvbigkY29sb3IsJGhvdmVyLWNvbG9yLCRsaW5lKXtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdGNvbG9yOiAkY29sb3I7XG5cblx0dHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlLWluO1xuXG5cdCY6aG92ZXJ7XG5cdFx0Y29sb3I6ICRob3Zlci1jb2xvcjtcblx0XHR0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGVhc2UtaW47XG5cdH1cblxuXHRAaWYgJGxpbmUgPT0gdHJ1ZSB7XG5cdFx0XG5cdFx0JjphZnRlcntcblx0XHRcdGNvbnRlbnQ6Jyc7XG5cdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRsZWZ0OiAwO1xuXHRcdFx0Ym90dG9tOiAtMXJlbTtcblx0XHRcdHdpZHRoOiAxMDAlO1xuXHRcdFx0aGVpZ2h0OiAwLjJyZW07XG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I7XG5cblx0XHRcdHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlLWluO1xuXHRcdH1cblxuXHRcdCY6aG92ZXJ7XG5cblx0XHRcdGNvbG9yOiAkaG92ZXItY29sb3I7XG5cblx0XHRcdCY6YWZ0ZXJ7XG5cdFx0XHRcdGJhY2tncm91bmQtY29sb3I6ICRob3Zlci1jb2xvcjtcblx0XHRcdFx0dHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2UtaW47XG5cdFx0XHR9XG5cblx0XHR9XG5cblx0fVxuXG5cdEBpZiAkbGluZSA9PSBob3ZlciB7XG5cblx0XHQmOmFmdGVye1xuXHRcdFx0Y29udGVudDonJztcblx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdGxlZnQ6IDA7XG5cdFx0XHRib3R0b206IC0xcmVtO1xuXHRcdFx0d2lkdGg6IDEwMCU7XG5cdFx0XHRoZWlnaHQ6IDAuMnJlbTtcblx0XHRcdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuXG5cdFx0XHR0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZS1pbjtcblx0XHR9XG5cblxuXHRcdCY6aG92ZXJ7XG5cblx0XHRcdGNvbG9yOiAkaG92ZXItY29sb3I7XG5cblx0XHRcdCY6YWZ0ZXJ7XG5cdFx0XHRcdGJhY2tncm91bmQtY29sb3I6ICRob3Zlci1jb2xvcjtcblxuXHRcdFx0XHR0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZS1pbjtcblx0XHRcdH1cblxuXHRcdH1cblxuXHR9XG5cbn0iLCIvKiAjIEpTIENsaWNrYm94ICovXG5cbi8vIE5COiB0aGUgLm5vLXRvdWNoZXZlbnRzIGNsYXNzIGlzIGNyZWF0ZWQgYnkgTW9kZXJuaXpyLlxuLy8gVGh1cywgaXQncyByZWNvbW1lbmRlZCB5b3UgdXNlIE1vZGVybml6ciBpbiB5b3VyIHByb2plY3QsIFxuLy8gYnkgc2V0dGluZyB1cCB0aGUgVG91Y2ggRXZlbnRzIHRlc3QuXG5cbi5qcy1jbGlja2JveFxue1xuXHQubm8tdG91Y2hldmVudHMgJi5pcy1ob3ZlclxuXHR7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHR9XG59IiwiLyogRMOpY2xhcmF0aW9uIGRlcyDDqWzDqW1lbnRzIGRlIGJhc2VzIHBvdXIgbGVzIMOpbMOpbWVudHMgSFRNTDUsIGxlcyBjbGFzc2VzIHV0aWxlcywgbGVzIHRpdHJlcyBldCBsZXMgc3R5bGVzIGRlIHRleHRlcyovXG5cbi8qKioqKioqKioqKioqKioqKi9cbi8qKioqKipIVE1MNSBFbGVtZW50cyoqKioqL1xuLyoqKioqKioqKioqKioqKioqL1xuQGF0LXJvb3R7XG5cblx0KiB7XG5cdCAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHQgICAgIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcblx0ICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdH1cblxuXG5cdGh0bWxcblx0e1xuXHRcdGZvbnQtc2l6ZTogNjIuNSU7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdGNvbG9yOiRkYXJrO1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICRjbGVhcjtcblx0XHRoZWlnaHQ6IDEwMCU7XG5cdCAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcblx0fVxuXG5cblx0Ym9keVxuXHR7XG5cdFx0aGVpZ2h0OiAxMDAlOyBcblx0fVxuXG5cblx0KiwgKjo6YmVmb3JlLCAqOjphZnRlciBcblx0e1xuXHQgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcblx0fVxuXHQgXG5cblx0aDEsaDIsaDMsaDRcblx0e1xuXHRcdG1hcmdpbjogMDtcblx0fVxuXG5cblx0cFxuXHR7XG5cdFx0bWFyZ2luOjA7XG5cdH1cblxuXG5cdHN2ZyxpbWdcblx0e1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdG1heC13aWR0aDoxMDAlO1xuXHR9XG5cblxuXHR1bFxuXHR7XG5cdFx0bWFyZ2luOjA7XG5cdFx0cGFkZGluZzowO1xuXHR9XG5cblxuXHRsaVxuXHR7XG5cdFx0bGlzdC1zdHlsZTogbm9uZVxuXHR9XG5cblxuXHRhXG5cdHtcblx0XHR0ZXh0LWRlY29yYXRpb246bm9uZTtcblx0XHRjb2xvcjogaW5oZXJpdDsgXG5cdH1cblxuXG5cdGJsb2NrcXVvdGVcblx0e1xuXHRcdHBhZGRpbmc6MDtcblx0XHRtYXJnaW46MDtcblx0fVxuXG59XG5cblxuLyoqKioqKioqKioqKioqKioqL1xuLyoqKioqKiBDbGFzc2VzIHV0aWxlcyAqKioqKi9cbi8qKioqKioqKioqKioqKioqKi9cblxuQGF0LXJvb3R7XG5cdFxuXHQub3ZlcmZsb3dcblx0e1xuXHRcdG92ZXJmbG93OmhpZGRlbjtcblx0fVxuXG5cblx0LnVwcGVyY2FzZVxuXHR7XG5cdFx0dGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlO1xuXHR9XG5cblxuXHQuaGlkZS1mb3Itdmlld2VyXG5cdHtcblx0XHRAaW5jbHVkZSBoaWRlLWZvci12aWV3ZXI7XG5cdH1cblxufVxuIiwiLyoqKioqKioqKioqKioqKioqL1xuLyoqKioqKiBGb290ZXIgKioqKiovXG4vKioqKioqKioqKioqKioqKiovXG5cbiYtZm9vdGVyXG57XHRcblx0XG5cdHBhZGRpbmc6IDJyZW0gMCAycmVtO1xuXHR0ZXh0LWFsaWduOiBsZWZ0O1xuXG5cdEBpbmNsdWRlIG1xKCRmcm9tOnRhYmxldCl7XG5cdFx0cGFkZGluZzogNnJlbSAwIDJyZW0gMDtcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdH1cblx0XG5cblx0QGluY2x1ZGUgbXEoJGZyb206ZGVza3RvcCl7XG5cdFx0cGFkZGluZzogNnJlbSAwO1xuXHR9XG5cblxuXHQvKioqKioqKioqKioqKioqKiovXG5cdC8qKioqKiogRm9vdGVyIEV4dCBMaW5rcyAodWwpICoqKioqL1xuXHQvKioqKioqKioqKioqKioqKiovXG5cdFxuXHQmX19saXN0e1xuXG5cdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRcdHdpZHRoOiAxMDAlO1xuXG5cdFx0LyoqKioqKioqKioqKioqKioqL1xuXHRcdC8qKioqKiogUHJvamVjdCBsaXN0IGl0ZW1zIChsaSkgKioqKiovXG5cdFx0LyoqKioqKioqKioqKioqKioqL1xuXHRcdFxuXHRcdCZfX2l0ZW17XG5cdFx0XG5cdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0XHRwYWRkaW5nLXJpZ2h0OiAzcmVtO1xuXHRcdFx0cGFkZGluZy1ib3R0b206IDFyZW07XG5cdFx0XG5cdFx0XHQmOm50aC1jaGlsZChvZGQpe1xuXHRcdFx0XHR3aWR0aDogNTAlO1xuXHRcdFx0XHRAaW5jbHVkZSAgbm8taW5saW5lLWJsb2NrLW1hcmdpbigpO1xuXHRcdFx0fVxuXG5cdFx0XHQmOm50aC1jaGlsZChldmVuKXtcblx0XHRcdFx0d2lkdGg6IDUwJTtcblx0XHRcdFx0QGluY2x1ZGUgIG5vLWlubGluZS1ibG9jay1tYXJnaW4oKTtcblx0XHRcdH1cblx0XHRcdFxuXHRcdFx0QGluY2x1ZGUgbXEoJGZyb206dGFibGV0KXtcblx0XHRcdFx0d2lkdGg6IGF1dG87XG5cdFx0XHRcdG1hcmdpbi1yaWdodDogNXJlbTtcblx0XHRcdFx0cGFkZGluZy1yaWdodDogMDtcblxuXHRcdFx0XHQmOm50aC1jaGlsZChvZGQpe1xuXHRcdFx0XHRcdHdpZHRoOiBhdXRvO1xuXHRcdFx0XHRcdG1hcmdpbi1yaWdodDogNXJlbTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdCY6bnRoLWNoaWxkKGV2ZW4pe1xuXHRcdFx0XHRcdHdpZHRoOiBhdXRvO1xuXHRcdFx0XHRcdG1hcmdpbi1yaWdodDogNXJlbTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdCY6bGFzdC1jaGlsZHtcblx0XHRcdFx0XHRtYXJnaW4tcmlnaHQ6IDA7XG5cdFx0XHRcdH1cblxuXHRcdFx0fVxuXG5cdFx0fVxuXG5cdH1cblx0XG5cdCZfX2xpbmt7XG5cblx0XHRAaW5jbHVkZSBidXR0b24oJGRhcmssJHRoZW1lLWNvbG9yLGZhbHNlKTtcblxuXHR9XG5cbn0iLCIvKioqKioqKioqKioqKioqKiovXG4vKioqKioqIENlbnRlcmVkIGdyaWQgKioqKiovXG4vKioqKioqKioqKioqKioqKiovXG5cbiYtY2VudGVyZWR7XG5cdG1hcmdpbjogYXV0bztcblx0cGFkZGluZzogMCAkZ3V0dGVyO1xuXHRtYXgtd2lkdGg6IDEzNnJlbTtcblxuXHRAaW5jbHVkZSBtcSgkZnJvbTogdGFibGV0KSB7XG5cdFx0cGFkZGluZzogMCAkZGVza3RvcC1ndXR0ZXI7IFxuICAgIH1cblxufVxuXG5cbi8qKioqKioqKioqKioqKioqKi9cbi8qKioqKiogTWFpbiBsYXlvdXQgZm9yIGRlc2t0b3AgKioqKiovXG4vKioqKioqKioqKioqKioqKiovXG5cbiYtbWFpbi1sYXlvdXR7XG5cdFxuXHRAZXh0ZW5kIC5hcC1jZW50ZXJlZDtcblxuXHRAaW5jbHVkZSBtcSgkZnJvbTogZGVza3RvcCl7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdG1pbi1oZWlnaHQ6IDUycmVtOyAvL3NpemUgb2Ygc2xpZGVyXG5cdH1cblxuXG5cdFxuXHQvKioqKioqKioqKioqKioqKiovXG5cdC8qKioqKiogVHlwZXMgb2YgY29scyAqKioqKi9cblx0LyoqKioqKioqKioqKioqKioqL1xuXHRcblxuXHQmX19jb2x7XG5cdFx0XG5cdFx0Ji0td2lkZXtcblx0XHRcdEBpbmNsdWRlIG1xKCRmcm9tOiBkZXNrdG9wKXtcblx0XHRcdFx0d2lkdGg6IDY2LjY2JTtcblx0XHRcdFx0cGFkZGluZy1sZWZ0OiAkZGVza3RvcC1ndXR0ZXI7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ji0tc21hbGx7XG5cblx0XHRcdHdpZHRoOiAxMDAlO1xuXHRcdFx0cGFkZGluZy1sZWZ0OiAwO1xuXHRcdFx0XG5cdFx0XHRAaW5jbHVkZSBtcSgkZnJvbTogZGVza3RvcCl7XG5cdFx0XHRcdHdpZHRoOiAxMDAlO1xuXHRcdFx0XHRwYWRkaW5nLWxlZnQ6IGNhbGMoNjYuNjYlICsgI3skZGVza3RvcC1ndXR0ZXI7fSk7XG5cdFx0XHR9XG5cblx0XHR9XG5cblx0fVxuXG59IiwiJi1oZWFkZXJcbntcdFxuXHRwYWRkaW5nLXRvcDogMnJlbTtcblx0cGFkZGluZy1ib3R0b206IDRyZW07XG5cblx0Jl9fbG9nb3tcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHR3aWR0aDogJGxvZ28taDtcblx0XHRoZWlnaHQ6ICRsb2dvLWg7XG5cblx0XHRAaW5jbHVkZSBtcSgkZnJvbTp0YWJsZXQpe1xuXHRcdFx0d2lkdGg6ICRkZXNrdG9wLWxvZ28taDtcblx0XHRcdGhlaWdodDogJGRlc2t0b3AtbG9nby1oO1xuXHRcdH1cblx0XHRcblxuXHRcdHN2Z3tcblxuXHRcdFx0cGF0aHtcblx0XHRcdFx0ZmlsbDogJHRoZW1lLWNvbG9yO1xuXHRcdFx0fVxuXG5cdFx0XHRyZWN0e1xuXHRcdFx0XHRmaWxsOiAkdGhlbWUtY29sb3I7XG5cdFx0XHR9XG5cdFx0XHRcblx0XHR9XG5cblx0fVxuXG59IiwiJi1uYXZpZ2F0aW9ue1xuXG5cdC8qKioqKioqKioqKioqKioqKi9cblx0LyoqKioqKiBOYXZpZ2F0aW9uICoqKioqL1xuXHQvKioqKioqKioqKioqKioqKiovXG5cbiAgIGRpc3BsYXk6IG5vbmU7XG4gXG5cdHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB6LWluZGV4OiAxO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGFsdC10aGVtZS1jb2xvcjtcblxuICAgICY6YmVmb3Jle1xuXG5cdFx0Y29udGVudDonJztcblx0XHRwb3NpdGlvbjogZml4ZWQ7XG5cdFx0bGVmdDowO1xuXHRcdHRvcDogMDtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHR3aWR0aDogMTAwJTtcblx0XHRoZWlnaHQ6IDhyZW07XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogJGFsdC10aGVtZS1jb2xvcjtcblxuXHR9XG5cdFxuXHQvKioqKioqKioqKioqKioqKiovXG5cdC8qKioqKiogV2hlbiB3cmFwcGVyIGlzIG9wZW4gKioqKiovXG5cdC8qKioqKioqKioqKioqKioqKi9cblxuXHQmLmlzLW9wZW57XG4gIFx0XHRkaXNwbGF5OiBmbGV4O1xuICBcdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0ICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHQgICAgcmVzaXplOiB2ZXJ0aWNhbDtcblxuXHR9XG5cblxuICAgIEBpbmNsdWRlIG1xKCRmcm9tOiBkZXNrdG9wKXtcblxuICAgIFx0ZGlzcGxheTogYmxvY2s7XG4gICAgXHRwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgXHRsZWZ0OiA1MCU7XG5cdFx0cmlnaHQ6IDA7IFxuXHRcdCRjYWxjOiAoJGRlc2t0b3AtbG9nby1oIC8gMikgKyAoJGRlc2t0b3AtZ3V0dGVyIC8gMikgLSAxcmVtO1xuXHRcdHRvcDogJGNhbGM7XG4gICBcdFx0aGVpZ2h0OiBhdXRvO1xuICAgXHRcdG1heC13aWR0aDogMTM2cmVtO1xuICAgXHRcdHBhZGRpbmc6IDAgJGRlc2t0b3AtZ3V0dGVyO1xuXHRcdGZsZXgtZGlyZWN0aW9uOiBpbmhlcml0O1xuXHQgICAganVzdGlmeS1jb250ZW50OmluaGVyaXRyO1xuXHQgICAgcmVzaXplOiBpbmhlcml0O1xuXHQgICAgb3ZlcmZsb3cteTogaW5oZXJpdDtcblx0XHR0ZXh0LWFsaWduOiByaWdodDtcblx0XHRjb2xvcjogJGRhcms7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpOyBcblx0XHRcblx0XHQmOmJlZm9yZXtcblx0XHRcdGNvbnRlbnQ6Jyc7XG5cdFx0XHRkaXNwbGF5OiBub25lO1xuXHRcdH1cblxuICAgIH1cblx0XG5cblx0LyoqKioqKioqKioqKioqKioqL1xuXHQvKioqKioqIE5hdmlnYXRpbyBMaXN0ICh1bCkgKioqKiovXG5cdC8qKioqKioqKioqKioqKioqKi9cblxuXHQmX19saXN0e1x0XG5cblx0XHRwYWRkaW5nOiA4cmVtICRndXR0ZXIgOHJlbSAwO1xuXHRcdHRleHQtYWxpZ246IHJpZ2h0O1xuXG5cdFx0QGluY2x1ZGUgbXEoJGZyb206IGRlc2t0b3Ape1xuXHRcdFx0cGFkZGluZzogMDtcblx0XHRcdHRleHQtYWxpZ246IGNlbnRlcjtcblx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHR9XG4gXHRcblxuIFx0LyoqKioqKioqKioqKioqKioqL1xuXHQvKioqKioqIE5hdmlnYXRpb24gSXRlbXMgKGxpKSAqKioqKi9cblx0LyoqKioqKioqKioqKioqKioqL1xuXG5cdFx0Jl9faXRlbXtcblx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHRcdHdpZHRoOiAxMDAlO1xuXHRcdFx0QGluY2x1ZGUgZm9udC1zdHlsZS01O1xuXG5cdFx0XHRAaW5jbHVkZSBtcSgkZnJvbTogZGVza3RvcCl7XG5cblx0XHRcdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRcdFx0XHR3aWR0aDogYXV0bztcblxuXHRcdFx0XHQmOmFmdGVye1xuXHRcdFx0XHRcdGNvbnRlbnQ6Jyc7XG5cdFx0XHRcdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRcdFx0XHRcdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG5cdFx0XHRcdFx0d2lkdGg6IDNyZW07XG5cdFx0XHRcdFx0aGVpZ2h0OiAwLjFyZW07XG5cdFx0XHRcdFx0bWFyZ2luOiAwIDFyZW07XG5cdFx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJGRhcms7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQmOmxhc3QtY2hpbGR7XG5cblx0XHRcdFx0XHQmOmFmdGVye1xuXHRcdFx0XHRcdFx0Y29udGVudDonJztcblx0XHRcdFx0XHRcdGRpc3BsYXk6bm9uZTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0fVxuXG5cdFx0XHR9XG5cdFx0XHRcblx0LyoqKioqKioqKioqKioqKioqL1xuXHQvKioqKioqIE5hdmlnYXRpb24gTGlua3MgKioqKiovXG5cdC8qKioqKioqKioqKioqKioqKi9cblxuXHRcdFx0Jl9fbGlua3tcblx0XHRcdFx0XG5cdFx0XHRcdEBpbmNsdWRlIGJ1dHRvbigkY2xlYXIsJHRoZW1lLWNvbG9yLGhvdmVyKTtcblx0XHRcdFx0bWFyZ2luOiAxcmVtIDA7XG5cblx0XHRcdFx0XG5cdFx0XHRcdEBpbmNsdWRlIG1xKCRmcm9tOiB0YWJsZXQpe1xuXG5cdFx0XHQgICAgXHRtYXJnaW46IDJyZW0gMDtcblxuXHRcdFx0ICAgIH1cblxuXG5cdFx0XHQgICAgQGluY2x1ZGUgbXEoJGZyb206IGRlc2t0b3Ape1xuXHRcdFx0XHRcdFxuXHRcdFx0ICAgIFx0QGluY2x1ZGUgYnV0dG9uKCRkYXJrLCR0aGVtZS1jb2xvcixob3Zlcik7XG5cdFx0XHQgICAgXHRAaW5jbHVkZSBmb250LXN0eWxlLTI7XG5cdFx0XHQgICAgXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1x0XG5cdFx0XHQgICAgXHRtYXJnaW46IDA7XG5cblx0XHRcdFx0XHQmLmlzLWFjdGl2ZXtcblx0XHRcdFx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHRcdFx0XHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0XHRcdFx0XHRcdGNvbG9yOiAkdGhlbWUtY29sb3I7XG5cblx0XHRcdFx0XHRcdCY6YWZ0ZXJ7XG5cdFx0XHRcdFx0XHRcdGNvbnRlbnQ6Jyc7XG5cdFx0XHRcdFx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdFx0XHRcdFx0bGVmdDogMDtcblx0XHRcdFx0XHRcdFx0Ym90dG9tOiAtMXJlbTtcblx0XHRcdFx0XHRcdFx0d2lkdGg6IDEwMCU7XG5cdFx0XHRcdFx0XHRcdGhlaWdodDogMC4ycmVtO1xuXHRcdFx0XHRcdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkdGhlbWUtY29sb3I7XG5cblx0XHRcdFx0XHRcdFx0dHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2UtaW47XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHR9XG5cblx0XHRcdCAgICB9XG5cblx0XHRcdH1cblxuXG5cdFx0fVxuXHR9XG5cblx0XG5cblx0LyoqKioqKioqKioqKioqKioqL1xuXHQvKioqKioqIEljb24gV3JhcHBlciAqKioqKi9cblx0LyoqKioqKioqKioqKioqKioqL1xuXG5cdCZfX2ljb25fX3dyYXBwZXJcblx0e1xuXG5cblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0dG9wOiBjYWxjKCAoI3skbG9nby1ofSAvIDIpICsgI3skZ3V0dGVyfSAtIDIuMnJlbSk7XG5cdFx0cmlnaHQ6ICRndXR0ZXI7XG5cdFx0cGFkZGluZzogMnJlbTtcblx0XHR3aWR0aDogMi4ycmVtO1xuXHRcdHotaW5kZXg6IDM7XG5cblx0XHRAaW5jbHVkZSBtcSh0YWJsZXQpe1xuXHRcdFx0cmlnaHQ6ICRkZXNrdG9wLWd1dHRlcjtcblx0XHRcdHRvcDogJGRlc2t0b3AtZ3V0dGVyO1xuXHRcdH1cblxuXHRcdCY6aG92ZXJcblx0XHR7XHRcblx0XHRcdGN1cnNvcjogcG9pbnRlcjtcdFxuXHRcdH1cblxuXHRcdCYuaXMtb3Blbntcblx0XHRcdHBvc2l0aW9uOiBmaXhlZDtcblx0XHR9XG5cdFx0XG5cdH1cblx0XG5cblx0LyoqKioqKioqKioqKioqKioqL1xuXHQvKioqKioqIEljb24gc3R5bGUgKioqKiovXG5cdC8qKioqKioqKioqKioqKioqKi9cblxuXHQmX19pY29uXG5cdHtcdFxuXHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0dG9wOiA1MCU7XG5cdFx0bGVmdDogNTAlO1xuXHRcdHdpZHRoOiAyLjJyZW07XG5cdFx0aGVpZ2h0OiAwLjJyZW07XG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSk7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogJGRhcms7XG5cdFx0dHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2UgMHM7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXG5cdFx0JjpiZWZvcmUsXG5cdFx0JjphZnRlclxuXHRcdHtcblx0XHRcdGNvbnRlbnQ6Jyc7XG5cdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRyaWdodDogMDtcblx0XHRcdHdpZHRoOiAxMDAlO1xuXHRcdFx0aGVpZ2h0OiAxMDAlO1xuXHRcdFx0dHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZSAwcywgdG9wIDAuM3MgZWFzZSAwLjNzLCBiYWNrZ3JvdW5kLWNvbG9yIDBzIGVhc2UgMC40cztcblx0XHRcdGJhY2tncm91bmQtY29sb3I6ICRkYXJrO1xuXHRcdH1cblxuXHRcdCY6YmVmb3JlXG5cdFx0e1xuXHRcdFx0dG9wOiAtMC44cmVtO1xuXHRcdH1cblxuXHRcdCY6YWZ0ZXJcblx0XHR7XG5cdFx0XHR0b3A6IDAuOHJlbTtcblx0XHR9XG5cblxuXHRcdC8qKioqKioqKioqKioqKioqKi9cblx0XHQvKioqKioqIFdoZW4gbmF2IGlzIG9wZW4gJiBpY29uIGlzIGFjdGl2ZSAqKioqKi9cblx0XHQvKioqKioqKioqKioqKioqKiovXG5cblx0XHQuYXAtbmF2aWdhdGlvbl9faWNvbl9fd3JhcHBlci5pcy1vcGVuICZcblx0XHR7XHRcblx0XHRcdGJhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7XG5cblx0XHRcdCY6YmVmb3JlLCY6YWZ0ZXJcblx0XHRcdHtcdFxuXHRcdFx0XHR0b3A6MDtcblx0XHRcdFx0dHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZSAwLjNzLCB0b3AgMC4zcyBlYXNlIDBzLCBiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZSAwcztcblx0XHQgICAgXHRiYWNrZ3JvdW5kLWNvbG9yOiAkY2xlYXI7XG5cdFx0ICAgIH1cblxuXHRcdCAgICAmOmJlZm9yZVxuXHRcdCAgICB7XG5cdFx0ICAgIFx0dHJhbnNmb3JtOiByb3RhdGUoMTM1ZGVnKTtcblx0XHQgICAgfVxuXG5cdFx0ICAgICY6YWZ0ZXJcblx0XHQgICAge1xuXHRcdCAgICBcdCB0cmFuc2Zvcm06IHJvdGF0ZSgyMjVkZWcpO1xuXHRcdCAgICB9XG5cdFx0ICAgIFx0ICAgIFxuXHRcdH1cblxuXHRcdEBpbmNsdWRlIG1xKCRmcm9tOmRlc2t0b3Ape1xuXHRcdFx0ZGlzcGxheTogbm9uZTtcblx0XHR9XHRcblxuXHR9XG5cbn0iLCJAbWl4aW4gZm9udC1zdHlsZS0xICgkZm9udDogJGZvbnQtcmVndWxhciwgJHdlaWdodCA6IDUwMCwgJHN0eWxlOiBub3JtYWwsICRsaW5lLWhlaWdodCA6IDEpeyAgLy8gTWVkaXVtXG4gIGZvbnQ6e1xuICAgIGZhbWlseTogJGZvbnQ7XG4gICAgICBzdHlsZTogJHN0eWxlO1xuICAgIHNpemU6IDE2cHg7XG4gICAgc2l6ZTogMS42cmVtO1xuICAgIHdlaWdodDogJHdlaWdodDtcbiAgfVxuICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQ7XG59XG5cblxuQG1peGluIGZvbnQtc3R5bGUtMiAoJGZvbnQ6ICRmb250LXJlZ3VsYXIsICR3ZWlnaHQgOiA1MDAsICRzdHlsZTogbm9ybWFsLCAkbGluZS1oZWlnaHQgOiAyNyAvIDE3KXsgLy9TZW1pYm9sZFxuICBmb250OntcbiAgICBmYW1pbHk6ICRmb250O1xuICAgICAgc3R5bGU6ICRzdHlsZTtcbiAgICBzaXplOiAxN3B4O1xuICAgIHNpemU6IDEuN3JlbTtcbiAgICB3ZWlnaHQ6ICR3ZWlnaHQ7XG4gIH1cbiAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0O1xufVxuXG5cbkBtaXhpbiBmb250LXN0eWxlLTMgKCRmb250OiAkZm9udC1yZWd1bGFyLCAkd2VpZ2h0IDogNTAwLCAkc3R5bGU6IG5vcm1hbCwgJGxpbmUtaGVpZ2h0IDogMjgvMjApeyAvL01lZGl1bVxuICBmb250OntcbiAgICBmYW1pbHk6ICRmb250O1xuICAgICAgc3R5bGU6ICRzdHlsZTtcbiAgICBzaXplOiAxOHB4O1xuICAgIHNpemU6IDEuOHJlbTtcbiAgICB3ZWlnaHQ6ICR3ZWlnaHQ7XG4gIH1cbiAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0O1xuXG4gICBAaW5jbHVkZSBtcSgkZnJvbTogZGVza3RvcCl7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICBmb250LXNpemU6IDJyZW07XG4gICAgfVxuXG59XG5cblxuQG1peGluIGZvbnQtc3R5bGUtNCAoJGZvbnQ6ICRmb250LXJlZ3VsYXIsICR3ZWlnaHQgOiA1MDAsICRzdHlsZTogbm9ybWFsLCAkbGluZS1oZWlnaHQgOiAzMi8yMil7IC8vU2VtaWJvbGRcbiAgZm9udDp7XG4gICAgZmFtaWx5OiAkZm9udDtcbiAgICAgIHN0eWxlOiAkc3R5bGU7XG4gICAgc2l6ZTogMjBweDtcbiAgICBzaXplOiAyLjByZW07XG4gICAgd2VpZ2h0OiAkd2VpZ2h0O1xuICB9XG4gICAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodDtcblxuICAgIEBpbmNsdWRlIG1xKCRmcm9tOiBkZXNrdG9wKXtcbiAgICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICAgIGZvbnQtc2l6ZTogMi4ycmVtO1xuICAgIH1cblxufVxuXG4vL0BpbmNsdWRlIGZvbnQtc3R5bGUtNCAoJGZvbnQ6ICRmb250LXJlZ3VsYXIsICR3ZWlnaHQgOiA3MDAsICRzdHlsZTogbm9ybWFsLCAkbGluZS1oZWlnaHQgOiAzMi8yMik7IC8vIEJvbGRcblxuXG5AbWl4aW4gZm9udC1zdHlsZS01ICgkZm9udDogJGZvbnQtcmVndWxhciwgJHdlaWdodCA6IDgwMCwgJHN0eWxlOiBub3JtYWwsICRsaW5lLWhlaWdodCA6IDcwLzYwKXsgXG4gIGZvbnQ6e1xuICAgIGZhbWlseTogJGZvbnQ7XG4gICAgICBzdHlsZTogJHN0eWxlO1xuICAgIHNpemU6IDQ1cHg7XG4gICAgc2l6ZTogNC41cmVtO1xuICAgIHdlaWdodDogJHdlaWdodDtcbiAgfVxuICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQ7XG5cbiAgICBAaW5jbHVkZSBtcSgkZnJvbTogdGFibGV0KXtcbiAgICAgIGZvbnQtc2l6ZTogNjBweDtcbiAgICAgIGZvbnQtc2l6ZTogNnJlbTtcbiAgICB9XG59XG5cblxuQG1peGluIGZvbnQtc3R5bGUtNiAoJGZvbnQ6ICRmb250LXJlZ3VsYXIsICR3ZWlnaHQgOiA3MDAsICRzdHlsZTogbm9ybWFsLCAkbGluZS1oZWlnaHQgOiAxKXsgXG4gIGZvbnQ6e1xuICAgIGZhbWlseTogJGZvbnQ7XG4gICAgICBzdHlsZTogJHN0eWxlO1xuICAgIHNpemU6IDYwcHg7XG4gICAgc2l6ZTogNnJlbTtcbiAgICB3ZWlnaHQ6ICR3ZWlnaHQ7XG4gIH1cbiAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0O1xuICBcbiAgIEBpbmNsdWRlIG1xKCRmcm9tOiB0YWJsZXQpe1xuICAgICAgZm9udC1zaXplOiAxMDBweDtcbiAgICAgIGZvbnQtc2l6ZTogMTByZW07XG4gICAgfVxufVxuXG5AbWl4aW4gZm9udC1zdHlsZS03ICgkZm9udDogJGZvbnQtcmVndWxhciwgJHdlaWdodCA6IDcwMCwgJHN0eWxlOiBub3JtYWwsICRsaW5lLWhlaWdodCA6IDEpeyAvL0FOSU1BVElPTlxuICBmb250OntcbiAgICBmYW1pbHk6ICRmb250O1xuICAgICAgc3R5bGU6ICRzdHlsZTtcbiAgICBzaXplOiA2MHB4O1xuICAgIHNpemU6IDZyZW07XG4gICAgd2VpZ2h0OiAkd2VpZ2h0O1xuICB9XG4gICAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodDtcblxuICAgIEBpbmNsdWRlIG1xKCRmcm9tOiB0YWJsZXQpe1xuICAgICAgZm9udC1zaXplOiAxMDBweDtcbiAgICAgIGZvbnQtc2l6ZTogMTByZW07XG4gICAgfVxuXG59XG5cblxuXG5cblxuIiwiLyoqKioqKioqKioqKioqKioqL1xuLyoqKioqKiBMaW5rcyBjbGFzc2VzICoqKioqL1xuLyoqKioqKioqKioqKioqKioqL1xuXG4mLWxpbmt7XHRcblxuXHRAaW5jbHVkZSBidXR0b24oJHRoZW1lLWNvbG9yLCRkYXJrLCRsaW5lOiBmYWxzZSk7XG5cblx0Ji0tYWx0e1xuXG5cdFx0QGluY2x1ZGUgYnV0dG9uKCRkYXJrLCR0aGVtZS1jb2xvciwkbGluZTogZmFsc2UpO1xuXHRcdGRpc3BsYXk6IGlubGluZTtcblx0fVxuXG59XG4iLCIvKioqKioqKioqKioqKioqKiovXG4vKioqKioqIFdvcmQgc2xpZGVyICoqKioqL1xuLyoqKioqKioqKioqKioqKioqL1xuXG4mLWhlYWRlcntcblxuXHQmX193b3JkLWFuaW1hdGlvbntcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdCAgICB3aWR0aDogMTAwdnc7XG5cdCAgICBoZWlnaHQ6IDZyZW07XG5cdCAgICBtYXJnaW4tdG9wOiAzcmVtO1xuXHQgICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuXHQgICAgQGluY2x1ZGUgbXEoJGZyb206IHRhYmxldCl7XG5cdCAgICBcdGhlaWdodDogMTByZW07XG5cdCAgICB9XG5cblx0ICAgICZfX3dyYXBwZXJ7XG5cdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRsZWZ0OiAwO1xuXHRcdFx0dG9wOiAwO1xuXHRcdFx0d2lkdGg6IDUwMDBweDtcblx0XHRcdGhlaWdodDogMTAwJTtcblx0ICAgIH1cblxuXHQgICAgJl9fZ3JvdXB7XG5cdFx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0XHRcdGZsb2F0OiBsZWZ0O1xuXHRcdFx0bWFyZ2luOiAwO1xuXHRcdFx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcblx0XHRcdGZvbnQtc2l6ZTogMDtcblxuXHRcdFx0LXdlYmtpdC1hbmltYXRpb246IHRyYW5zbGF0ZS1rZXl3b3JkcyBsaW5lYXIgOHMgaW5maW5pdGU7XG5cdFx0ICBcdC1tb3otYW5pbWF0aW9uOiB0cmFuc2xhdGUta2V5d29yZHMgbGluZWFyIDhzIGluZmluaXRlO1xuXHRcdCAgXHRhbmltYXRpb246IHRyYW5zbGF0ZS1rZXl3b3JkcyBsaW5lYXIgOHMgaW5maW5pdGU7XG5cblx0XHQgIFx0c3Bhbixcblx0XHQgIFx0aDJ7XG5cdFx0ICAgIFx0cGFkZGluZy1yaWdodDoxMHJlbTtcblx0XHQgICAgXHRAaW5jbHVkZSBmb250LXN0eWxlLTc7XG5cdCAgICAgICAgICAgIGNvbG9yOiAkdGhlbWUtY29sb3I7XG5cdFx0ICAgIH1cblxuXHQgICAgfVxuXG4gICAgfVxuXG59XG5cblxuXG5AaW5jbHVkZSBrZXlmcmFtZXModHJhbnNsYXRlLWtleXdvcmRzKSB7XG5cbiAgIDAlIHtcblx0ICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IC8qIElFIDkgKi9cbiAgICBcdC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyAvKiBDaHJvbWUsIFNhZmFyaSwgT3BlcmEgKi9cblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG5cdH1cblxuXHQxMDAlIHtcblx0ICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpOyAvKiBJRSA5ICovXG4gICAgXHQtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7IC8qIENocm9tZSwgU2FmYXJpLCBPcGVyYSAqL1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XG5cdH1cblxufVxuIiwiXG4vKioqKioqKioqKioqKioqKiovXG4vKioqKioqIFRpdGxlcyAqKioqKi9cbi8qKioqKioqKioqKioqKioqKi9cblxuQGF0LXJvb3R7XG5cblx0LnRpdGxlLWFscGhhXG5cdHtcblx0XHRAaW5jbHVkZSBmb250LXN0eWxlLTIgKCRmb250OiAkZm9udC1yZWd1bGFyLCAkd2VpZ2h0IDogNzAwLCAkc3R5bGU6IG5vcm1hbCwgJGxpbmUtaGVpZ2h0IDogMTcgLyAxNyk7XG5cblx0fVxuXG5cblx0LnRpdGxlLWJldGFcblx0e1xuXHRcdEBpbmNsdWRlIGZvbnQtc3R5bGUtNTtcblx0fVxuXG5cblx0LnRpdGxlLWdhbW1hXG5cdHtcblx0XHRAaW5jbHVkZSBmb250LXN0eWxlLTY7XG5cdH1cblxuXG59XG5cblxuXG4vKioqKioqKioqKioqKioqKiovXG4vKioqKioqIFRleHQgKioqKiovXG4vKioqKioqKioqKioqKioqKiovXG5cbkBhdC1yb290e1xuXG5cdC50ZXh0LWFscGhhXG5cdHtcblx0XHRAaW5jbHVkZSBmb250LXN0eWxlLTE7XG5cdH1cblxuXG5cdC50ZXh0LWJldGFcblx0e1xuXHRcdEBpbmNsdWRlIGZvbnQtc3R5bGUtMjtcblx0fVxuXG5cblx0LnRleHQtZ2FtbWFcblx0e1xuXHRcdEBpbmNsdWRlIGZvbnQtc3R5bGUtMztcblx0fVxuXG5cblx0LnRleHQtZGVsdGFcblx0e1xuXHRcdEBpbmNsdWRlIGZvbnQtc3R5bGUtNDtcblx0fVxuXG59XG4iLCIvKioqKioqKioqKioqKioqKiovXG4vKioqKioqIFdyYXBwZXIgUHJvamVjdHMgKioqKiovXG4vKioqKioqKioqKioqKioqKiovXG5cbiYtd29ya3N7XG5cblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRjb2xvcjogJGRhcms7XG5cblx0Ly8gQmx1ZSBSZWN0IGluIGJhY2tncm91bmRcblx0JjpiZWZvcmV7XG5cdFx0Y29udGVudDonJztcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0cmlnaHQ6IC0gJGd1dHRlcjtcblx0XHRib3R0b206IGNhbGMoMTAwJSAtIDEwcmVtKTsgLy8gMTAwJSAtIEZpcnN0IEFydGljbGUgSW1hZ2UgaGVpZ2h0XG5cdFx0ei1pbmRleDogLTE7XG5cdFx0d2lkdGg6IDk5OTlweDtcblx0XHRoZWlnaHQ6IDk5OTlweDtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkYWx0LXRoZW1lLWNvbG9yO1xuXHR9XG5cblxuXHRAaW5jbHVkZSBtcSgkZnJvbTogdGFibGV0KXtcblx0XHRjb2xvcjogJGNsZWFyO1xuXG5cdFx0Ly8gQmx1ZSBSZWN0IGluIGJhY2tncm91bmRcblx0XHQmOmJlZm9yZXtcblx0XHRcdHJpZ2h0OiA4cmVtO1xuXHRcdFx0Ym90dG9tOiBjYWxjKDEwMCUgLSA0NXJlbSAvIDIpOyAvLyBGaXJzdCBhcnRpY2xlIGhlaWdodCAvIDIgXG5cdFx0fVxuXHR9XG5cdFxuXG5cdEBpbmNsdWRlIG1xKCRmcm9tOiBkZXNrdG9wKXtcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0dG9wOiAwO1xuXHRcdGxlZnQ6IDA7XG5cdFx0XG5cdFx0Ly8gQmx1ZSBSZWN0IGluIGJhY2tncm91bmRcblx0XHQmOmJlZm9yZXtcblx0XHRcdGJvdHRvbTogY2FsYyg1MnJlbSAvIDIpOyAvLyBTbGlkZXIgaGVpZ2h0IC8gMlxuXHRcdH1cblx0fVxuXG5cdFxuXG5cdC8qKioqKioqKioqKioqKioqKi9cblx0LyoqKioqKiBQcm9qZWN0IGxpc3QgKHVsKSAqKioqKi9cblx0LyoqKioqKioqKioqKioqKioqL1xuXG5cdCZfX2xpc3R7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdGhlaWdodDogMTAwJTtcblxuXHRcdEBpbmNsdWRlIG1xKCRmcm9tOiBkZXNrdG9wKXtcblx0XHRcdGhlaWdodDogNTJyZW07XG5cdFx0fVxuXG5cblxuXHQvKioqKioqKioqKioqKioqKiovXG5cdC8qKioqKiogUHJvamVjdCBsaXN0IGl0ZW1zIChsaSkgKioqKiovXG5cdC8qKioqKioqKioqKioqKioqKi9cblxuXHRcdCZfX2l0ZW1ze1xuXHRcdFx0XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0XHR3aWR0aDogMTAwJTtcblx0XHRcdG1hcmdpbi1ib3R0b206IDZyZW07XG5cblx0XHRcdCY6bGFzdC1jaGlsZHtcblx0XHRcdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHRcdH1cblxuXHRcdFx0QGluY2x1ZGUgbXEoJGZyb206IHRhYmxldCl7XG5cdFx0XHRcdGhlaWdodDogNDVyZW07XG5cdFx0XHRcdG1hcmdpbi1ib3R0b206ICRkZXNrdG9wLWd1dHRlcjtcblx0XHRcdH1cblx0XHRcdFxuXG5cdFx0XHRAaW5jbHVkZSBtcSgkZnJvbTogZGVza3RvcCl7XG5cdFx0XHRcdEBpbmNsdWRlIHN0cmV0Y2goJGxlbmd0aDogMCk7XG5cdFx0XHRcdGhlaWdodDogMTAwJTtcblx0XHRcdFx0bWFyZ2luOiAwO1xuXHRcdFx0fVxuXG5cdFx0fVxuXG5cdH1cblxuXG5cdC8qKioqKioqKioqKioqKioqKi9cblx0LyoqKioqKiBQcm9qZWN0cyAoQXJ0aWNsZSkgKioqKiovXG5cdC8qKioqKioqKioqKioqKioqKi9cblxuXHQmX19pdGVte1xuXHRcblx0XHR3aWR0aDogMTAwJTtcblx0XHRoZWlnaHQ6IDEwMCU7XG5cblx0XHQmX19pbWFnZXtcblx0XHRcdHdpZHRoOiAxMDAlO1xuXHRcdFx0aGVpZ2h0OiAyMHJlbTtcblx0XHRcdGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG5cdFx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3A7XG5cblx0XHRcdEBpbmNsdWRlIG1xKCRmcm9tOiB0YWJsZXQpe1xuXHRcdFx0XHRoZWlnaHQ6IDEwMCU7XG5cdFx0XHR9XG5cblx0XHR9XG5cblx0XHQmX19jb250ZW50e1xuXHRcdFx0XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cblx0XHRcdEBpbmNsdWRlIG1xKCRmcm9tOiB0YWJsZXQpe1xuXHRcdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRcdGxlZnQ6ICRkZXNrdG9wLWd1dHRlcjtcblx0XHRcdFx0cmlnaHQ6ICRkZXNrdG9wLWd1dHRlcjtcblx0XHRcdFx0Ym90dG9tOiAkZGVza3RvcC1ndXR0ZXI7XG5cdFx0XHRcdG1heC13aWR0aDogNjYuNjYlO1xuXHRcdFx0fVxuXHRcdFx0XG5cdFx0fVxuXG5cdFx0Jl9fcm9sZXtcblx0XHRcdFxuXHRcdFx0ZGlzcGxheTogbm9uZTtcblx0XHRcdEBpbmNsdWRlIG1xKCRmcm9tOiB0YWJsZXQpe1xuXHRcdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdFx0dG9wOiAzcmVtO1xuXHRcdFx0XHRyaWdodDogNHJlbTtcblx0XHRcdFx0dHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgYm90dG9tO1xuXHRcdFx0XHR0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpIHRyYW5zbGF0ZVkoNTAlKTtcblx0XHRcdH1cblx0XHRcdFxuXHRcdH1cblx0XHRcblx0XHQmX190aXRsZXtcblx0XHRcdG92ZXJmbG93OiBoaWRkZW47XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0XHRtYXJnaW4tdG9wOiAycmVtO1xuXHRcdFx0bWFyZ2luLWJvdHRvbTogMXJlbTsgXG5cblx0XHRcdCZfX2NvbnRlbnR7XG5cdFx0XHRcdGRpc3BsYXk6IHRhYmxlO1xuXHRcdFx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEuOHJlbSk7XG5cblx0XHRcdFx0QGluY2x1ZGUgbXEoJGZyb206IHRhYmxldCl7XG5cdFx0XHRcdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zcmVtKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdCYtLW51bWJlcntcblx0XHRcdFx0XHRkaXNwbGF5OiB0YWJsZS1jZWxsO1xuXHRcdFx0XHRcdHZlcnRpY2FsLWFsaWduOiBib3R0b207XG5cdFx0XHRcdFx0cGFkZGluZy1yaWdodDogMXJlbTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdCYtLW5hbWV7XG5cdFx0XHRcdFx0ZGlzcGxheTogdGFibGUtY2VsbDtcblx0XHRcdFx0XHR2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuXHRcdFx0XHR9XG5cdFx0XHRcdFxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdCZfX3ByZXNlbnRhdGlvbntcblx0XHRcdHBhZGRpbmc6IDFyZW0gMDtcblx0XHR9XG5cblx0XHQmX19saW5re1xuXHRcdFx0QGluY2x1ZGUgZm9udC1zdHlsZS0yO1xuXHRcdFx0QGluY2x1ZGUgYnV0dG9uKCR0aGVtZS1jb2xvciwkZGFyayx0cnVlKTtcblxuXHRcdFx0QGluY2x1ZGUgbXEoJGZyb206IHRhYmxldCl7XG5cdFx0XHRcdEBpbmNsdWRlIGJ1dHRvbigkY2xlYXIsJHRoZW1lLWNvbG9yLHRydWUpO1xuXHRcdFx0fVxuXHRcdFx0XG5cdFx0fVxuXG5cdH1cblxufSIsIkBhdC1yb290e1xuXHRcblx0LyoqKioqKioqKioqKioqKioqL1xuXHQvKioqKioqIFNsaWRlciBCdXR0b24gKioqKiovXG5cdC8qKioqKioqKioqKioqKioqKi9cblxuXHQubmV4dC1zbGlkZS1idXR0b257XG5cblx0XHRkaXNwbGF5OiBub25lO1xuXG5cdFx0QGluY2x1ZGUgbXEoJGZyb206IGRlc2t0b3Ape1xuXHRcdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRyaWdodDogJGRlc2t0b3AtZ3V0dGVyO1xuXHRcdFx0Ym90dG9tOiAzcmVtO1xuXHRcdFx0cGFkZGluZzogMXJlbSAycmVtO1xuXHRcdFx0Ym9yZGVyOiAycHggc29saWQgJGNsZWFyO1xuXHRcdFx0QGluY2x1ZGUgZm9udC1zdHlsZS0xO1xuICAgIFx0XHRiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcblxuICAgIFx0XHR0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGVhc2UtaW4sIGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlLWluO1xuXHRcdFx0XG5cdFx0XHQmOmhvdmVye1xuXHRcdFx0XHRjb2xvcjogJHRoZW1lLWNvbG9yO1xuXHRcdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkY2xlYXI7XG5cdFx0XHRcdHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZS1pbiwgYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2UtaW47XG5cdFx0XHR9XG5cblx0XHR9XG5cblx0fVxuXG59IiwiLyoqKioqKioqKioqKioqKioqL1xuLyoqKioqKiBJbnRyb2R1Y3Rpb24gc2VjdGlvbiAqKioqKi9cbi8qKioqKioqKioqKioqKioqKi9cblxuJi1pbnRyb2R1Y3Rpb257XG5cdHBhZGRpbmctYm90dG9tOiA0cmVtO1xuXG5cdEBpbmNsdWRlIG1xKCRmcm9tOiBkZXNrdG9wKXtcblx0XHRwYWRkaW5nLWJvdHRvbTogMDtcblx0XG5cdH1cbn1cblxuXG5cbi8qKioqKioqKioqKioqKioqKi9cbi8qKioqKiogUmVmZXJlbmNlcyBzZWN0aW9uICoqKioqL1xuLyoqKioqKioqKioqKioqKioqL1xuXG4mLXJlZmVyZW5jZXN7XG5cdFxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdG1hcmdpbjogMTByZW0gMCA2cmVtO1xuXG5cdCY6YmVmb3Jle1xuXHRcdGNvbnRlbnQ6Jyc7XG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdGxlZnQ6IC0kZ3V0dGVyO1xuXHRcdHJpZ2h0OiAtJGd1dHRlcjtcblx0XHR0b3A6IC0gJGd1dHRlciAqIDI7IFxuXHRcdGJvdHRvbTogLSAkZ3V0dGVyICogMjtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkYWx0LXRoZW1lLWNvbG9yO1xuXHR9XG5cblx0QGluY2x1ZGUgbXEoJGZyb206IHRhYmxldCl7XG5cdFx0bWFyZ2luOiA4cmVtIDAgMnJlbTtcblxuXHRcdCY6YmVmb3Jle1xuXHRcdFx0bGVmdDogLSAkZGVza3RvcC1ndXR0ZXI7XG5cdFx0XHRyaWdodDogOHJlbTtcblx0XHRcdGJhY2tncm91bmQtY29sb3I6ICRhbHQtdGhlbWUtY29sb3I7XG5cdFx0fVxuXHR9XG5cblx0QGluY2x1ZGUgbXEoJGZyb206IGRlc2t0b3Ape1xuXHRcdG1hcmdpbjogMDtcblxuXHRcdCY6YmVmb3Jle1xuXHRcdFx0Y29udGVudDonJztcblx0XHRcdGRpc3BsYXk6IG5vbmU7XG5cdFx0fVxuXHR9XG5cblx0Jl9fdGl0bGV7XG5cdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0XHRtYXJnaW4tYm90dG9tOiAycmVtO1xuXHRcdFxuXHRcdCY6YWZ0ZXJ7XG5cdFx0XHRjb250ZW50OicnO1xuXHRcdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRib3R0b206IC0xcmVtO1xuXHRcdFx0bGVmdDogMDtcblx0XHRcdHdpZHRoOiA0MCU7XG5cdFx0XHRoZWlnaHQ6IDAuMnJlbTtcblx0XHRcdGJhY2tncm91bmQtY29sb3I6ICRkYXJrO1xuXHRcdH1cblx0fVxuXG5cdCZfX2xpc3R7XG5cdFx0XG5cdFx0QGluY2x1ZGUgZm9udC1zdHlsZS00O1xuXG5cdFx0QGluY2x1ZGUgbXEoJGZyb206IGRlc2t0b3Ape1xuXHRcdFx0QGluY2x1ZGUgZm9udC1zdHlsZS0yO1xuXHRcdFxuXHRcdH1cblxuXHRcdCZfX2l0ZW17XG5cblx0XHRcdEBpbmNsdWRlIG1xKCRmcm9tOiB0YWJsZXQpe1xuXHRcdFx0XHRkaXNwbGF5OiBpbmxpbmU7XG5cdFx0XHR9XG5cblx0XHRcdGRpc3BsYXk6IGJsb2NrO1xuXG5cdFx0XHQmOmFmdGVye1xuXHRcdFx0XHRjb250ZW50OiBcIi5cIjtcblx0XHRcdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdFx0XHRjb2xvcjogJGRhcms7XG5cdFx0XHR9XG5cblx0XHRcdCY6bGFzdC1jaGlsZCgpe1xuXG5cdFx0XHRcdCY6YWZ0ZXJ7XG5cdFx0XHRcdFx0Y29udGVudDonJztcblx0XHRcdFx0fVxuXG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59ICAgIFxuXG5cblxuLyoqKioqKioqKioqKioqKioqL1xuLyoqKioqKiBJbnRyb2R1Y3Rpb24gJiBSZWZlcmVuY2UgbGF5b3V0IGZvciBkZXNrdG9wICoqKioqL1xuLyoqKioqKioqKioqKioqKioqL1xuXG4mLWludHJvZHVjdGlvbixcbiYtcmVmZXJlbmNlc3tcblxuXHRAaW5jbHVkZSBtcSgkZnJvbTogZGVza3RvcCl7XG5cdFx0cGFkZGluZy10b3A6IDZyZW07XG5cdFxuXHR9XG5cblx0XHQmX19jb250ZW50e1xuXG5cdFx0XHRAaW5jbHVkZSBtcSgkZnJvbTogdGFibGV0KXtcblx0XHRcdFx0bWF4LXdpZHRoOiA2Ni42NiU7XG5cdFx0ICAgIH1cblxuXHRcdFx0QGluY2x1ZGUgbXEoJGZyb206IGRlc2t0b3Ape1xuXHRcdFx0XHRtYXgtd2lkdGg6IDM0NXB4O1xuXHRcdFx0ICAgIG1hcmdpbi1yaWdodDogMDtcblx0XHRcdCAgICBtYXJnaW4tbGVmdDogYXV0bztcblx0XHRcdCAgICBkaXNwbGF5OiBibG9jaztcblx0XHQgICAgfVxuXHRcdH1cblxuXHRcdFxuXG59ICAgICIsIi8qICMgRXNwYWNlIHRlbXBvcmFpcmUgZGUgdHJhdmFpbCAoaG9udGV1eCkgKi9cblxuLyogaHR0cDovL2Nzc3dpemFyZHJ5LmNvbS8yMDEzLzA0L3NoYW1lLWNzcy8gKi9cblxuQGF0LXJvb3R7XG5cbn0iLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbi8vIFRvIGVuYWJsZSBzdXBwb3J0IGZvciBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEBtZWRpYSBxdWVyaWVzLFxuLy8gKElFIDw9IDgsIEZpcmVmb3ggPD0gMywgT3BlcmEgPD0gOSkgc2V0ICRtcS1yZXNwb25zaXZlIHRvIGZhbHNlXG4vLyBDcmVhdGUgYSBzZXBhcmF0ZSBzdHlsZXNoZWV0IHNlcnZlZCBleGNsdXNpdmVseSB0byB0aGVzZSBicm93c2Vycyxcbi8vIG1lYW5pbmcgQG1lZGlhIHF1ZXJpZXMgd2lsbCBiZSByYXN0ZXJpemVkLCByZWx5aW5nIG9uIHRoZSBjYXNjYWRlIGl0c2VsZlxuJG1xLXJlc3BvbnNpdmU6IHRydWUgIWRlZmF1bHQ7XG5cbi8vIE5hbWUgeW91ciBicmVha3BvaW50cyBpbiBhIHdheSB0aGF0IGNyZWF0ZXMgYSB1YmlxdWl0b3VzIGxhbmd1YWdlXG4vLyBhY3Jvc3MgdGVhbSBtZW1iZXJzLiBJdCB3aWxsIGltcHJvdmUgY29tbXVuaWNhdGlvbiBiZXR3ZWVuXG4vLyBzdGFrZWhvbGRlcnMsIGRlc2lnbmVycywgZGV2ZWxvcGVycywgYW5kIHRlc3RlcnMuXG4vLyAkbXEtYnJlYWtwb2ludHM6IChcbi8vICAgICBtb2JpbGU6ICA0MDBweCxcbi8vICAgICB0YWJsZXQ6ICA2MDBweCxcbi8vICAgICBkZXNrdG9wOiA5ODBweCxcbi8vICAgICB3aWRlOiAgICAxMzI1cHhcbi8vICkgIWRlZmF1bHQ7XG5cbi8vIERlZmluZSB0aGUgYnJlYWtwb2ludCBmcm9tIHRoZSAkbXEtYnJlYWtwb2ludHMgbGlzdCB0aGF0IHNob3VsZFxuLy8gYmUgdXNlZCBhcyB0aGUgdGFyZ2V0IHdpZHRoIHdoZW4gb3V0cHV0dGluZyBhIHN0YXRpYyBzdHlsZXNoZWV0XG4vLyAoaS5lLiB3aGVuICRtcS1yZXNwb25zaXZlIGlzIHNldCB0byAnZmFsc2UnKS5cbiRtcS1zdGF0aWMtYnJlYWtwb2ludDogZGVza3RvcCAhZGVmYXVsdDtcblxuLy8gSWYgeW91IHdhbnQgdG8gZGlzcGxheSB0aGUgY3VycmVudGx5IGFjdGl2ZSBicmVha3BvaW50IGluIHRoZSB0b3Bcbi8vIHJpZ2h0IGNvcm5lciBvZiB5b3VyIHNpdGUgZHVyaW5nIGRldmVsb3BtZW50LCBhZGQgdGhlIGJyZWFrcG9pbnRzXG4vLyB0byB0aGlzIGxpc3QsIG9yZGVyZWQgYnkgd2lkdGgsIGUuZy4gKG1vYmlsZSwgdGFibGV0LCBkZXNrdG9wKS5cbiRtcS1zaG93LWJyZWFrcG9pbnRzOiAoKSAhZGVmYXVsdDtcblxuQGZ1bmN0aW9uIG1xLXB4MmVtKCRweCwgJGJhc2UtZm9udC1zaXplOiAxNnB4KSB7XG4gICAgQGlmICh1bml0bGVzcygkcHgpKSB7XG4gICAgICAgIEB3YXJuIFwiQXNzdW1pbmcgI3skcHh9IHRvIGJlIGluIHBpeGVscywgYXR0ZW1wdGluZyB0byBjb252ZXJ0IGl0IGludG8gcGl4ZWxzIGZvciB5b3VcIjtcbiAgICAgICAgQHJldHVybiBtcS1weDJlbSgkcHggKyAwcHgpOyAvLyBUaGF0IG1heSBmYWlsLlxuICAgIH0gQGVsc2UgaWYgKHVuaXQoJHB4KSA9PSBlbSkge1xuICAgICAgICBAcmV0dXJuICRweDtcbiAgICB9XG4gICAgQHJldHVybiAoJHB4IC8gJGJhc2UtZm9udC1zaXplKSAqIDFlbTtcbn1cblxuQGZ1bmN0aW9uIG1xLWdldC1icmVha3BvaW50LXdpZHRoKCRuYW1lKSB7XG4gICAgQGlmKG1hcC1oYXMta2V5KCRtcS1icmVha3BvaW50cywgJG5hbWUpKSB7XG4gICAgICAgIEByZXR1cm4gbWFwLWdldCgkbXEtYnJlYWtwb2ludHMsICRuYW1lKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICAgQHdhcm4gXCJCcmVha3BvaW50ICN7JG5hbWV9IGRvZXMgbm90IGV4aXN0XCI7XG4gICAgfVxufVxuXG5cblxuQG1peGluIG1xKCRmcm9tOiBmYWxzZSwgJHVudGlsOiBmYWxzZSwgJGFuZDogZmFsc2UsICR0bzogbnVsbCkge1xuXG4gICAgLy8gRGVwcmVjYXRlIHVzZSBvZiAkdG8gZm9yICR1bnRpbCwgYmVjYXVzZSAkdW50aWwgaW1wbGllcyB0aGUgZXhjbHVzaXZlXG4gICAgLy8gYm91bmRhcnkgdGhhdCBpcyBpbiBwbGFjZSwgd2hlcmVhcyAkdG8gaXMgdW5jbGVhci5cbiAgICBAaWYgJHRvIHtcbiAgICAgICAgQGlmIG5vdCAkdW50aWwge1xuICAgICAgICAgICAgQHdhcm4gJyR0byBpcyBkZXByZWNhdGVkLCB5b3Ugc2hvdWxkIHVzZSAkdW50aWwgaW5zdGVhZCc7XG4gICAgICAgICAgICAkdW50aWw6ICR0bztcbiAgICAgICAgfSBAZWxzZSB7XG4gICAgICAgICAgICBAd2FybiAnWW91IGFyZSB1c2luZyAkdW50aWwgYW5kICR0byB0b2dldGhlci4gJHRvIGlzIGRlcHJlY2F0ZWQgYW5kIGhhcyBiZWVuIGlnbm9yZWQuIFlvdSBzaG91bGQgcmVtb3ZlIGl0Lic7XG4gICAgICAgIH1cbiAgICB9XG5cblxuICAgIC8vIEluaXRpYWxpemUgdmFyaWFibGVzXG4gICAgJG1pbi13aWR0aDogMDtcbiAgICAkbWF4LXdpZHRoOiAwO1xuICAgICRtZWRpYVF1ZXJ5OiAnJztcblxuICAgIC8vIEZyb206IHRoaXMgYnJlYWtwb2ludCAoaW5jbHVzaXZlKVxuICAgIEBpZiAkZnJvbSB7XG4gICAgICAgIEBpZiB0eXBlLW9mKCRmcm9tKSA9PSBudW1iZXIge1xuICAgICAgICAgICAgJG1pbi13aWR0aDogbXEtcHgyZW0oJGZyb20pO1xuICAgICAgICB9IEBlbHNlIHtcbiAgICAgICAgICAgICRtaW4td2lkdGg6IG1xLXB4MmVtKG1xLWdldC1icmVha3BvaW50LXdpZHRoKCRmcm9tKSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBVbnRpbDogdGhhdCBicmVha3BvaW50IChleGNsdXNpdmUpXG4gICAgQGlmICR1bnRpbCB7XG4gICAgICAgIEBpZiB0eXBlLW9mKCR1bnRpbCkgPT0gbnVtYmVyIHtcbiAgICAgICAgICAgICRtYXgtd2lkdGg6IG1xLXB4MmVtKCR1bnRpbCk7XG4gICAgICAgIH0gQGVsc2Uge1xuICAgICAgICAgICAgJG1heC13aWR0aDogbXEtcHgyZW0obXEtZ2V0LWJyZWFrcG9pbnQtd2lkdGgoJHVudGlsKSkgLSAuMDFlbTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIFJlc3BvbnNpdmUgc3VwcG9ydCBpcyBkaXNhYmxlZCwgcmFzdGVyaXplIHRoZSBvdXRwdXQgb3V0c2lkZSBAbWVkaWEgYmxvY2tzXG4gICAgLy8gVGhlIGJyb3dzZXIgd2lsbCByZWx5IG9uIHRoZSBjYXNjYWRlIGl0c2VsZi5cbiAgICBAaWYgKCRtcS1yZXNwb25zaXZlID09IGZhbHNlKSB7XG4gICAgICAgICRzdGF0aWMtYnJlYWtwb2ludC13aWR0aDogbXEtZ2V0LWJyZWFrcG9pbnQtd2lkdGgoJG1xLXN0YXRpYy1icmVha3BvaW50KTtcbiAgICAgICAgQGlmIHR5cGUtb2YoJHN0YXRpYy1icmVha3BvaW50LXdpZHRoKSA9PSBudW1iZXIge1xuICAgICAgICAgICAgJHRhcmdldC13aWR0aDogbXEtcHgyZW0oJHN0YXRpYy1icmVha3BvaW50LXdpZHRoKTtcbiAgICAgICAgICAgIC8vIE91dHB1dCBvbmx5IHJ1bGVzIHRoYXQgc3RhcnQgYXQgb3Igc3BhbiBvdXIgdGFyZ2V0IHdpZHRoXG4gICAgICAgICAgICBAaWYgKCRhbmQgPT0gZmFsc2UgYW5kICgkbWluLXdpZHRoIDw9ICR0YXJnZXQtd2lkdGgpIGFuZCAoKCR1bnRpbCA9PSBmYWxzZSkgb3IgKCRtYXgtd2lkdGggPj0gJHRhcmdldC13aWR0aCkpKSB7XG4gICAgICAgICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gQGVsc2Uge1xuICAgICAgICAgICAgLy8gVGhyb3cgYSB3YXJuaW5nIGlmICRtcS1zdGF0aWMtYnJlYWtwb2ludCBpcyBub3QgaW4gdGhlICRtcS1icmVha3BvaW50cyBsaXN0XG4gICAgICAgICAgICBAd2FybiBcIk5vIHN0YXRpYyBzdHlsZXMgd2lsbCBiZSBvdXRwdXQ6ICN7JHN0YXRpYy1icmVha3BvaW50LXdpZHRofVwiO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmVzcG9uc2l2ZSBzdXBwb3J0IGlzIGVuYWJsZWQsIG91dHB1dCBydWxlcyBpbnNpZGUgQG1lZGlhIHF1ZXJpZXNcbiAgICBAZWxzZSB7XG4gICAgICAgIEBpZiAkbWluLXdpZHRoICE9IDAgeyAkbWVkaWFRdWVyeTogJyN7JG1lZGlhUXVlcnl9IGFuZCAobWluLXdpZHRoOiAjeyRtaW4td2lkdGh9KSc7IH1cbiAgICAgICAgQGlmICRtYXgtd2lkdGggIT0gMCB7ICRtZWRpYVF1ZXJ5OiAnI3skbWVkaWFRdWVyeX0gYW5kIChtYXgtd2lkdGg6ICN7JG1heC13aWR0aH0pJzsgfVxuICAgICAgICBAaWYgJGFuZCAgICAgICAgICAgIHsgJG1lZGlhUXVlcnk6ICcjeyRtZWRpYVF1ZXJ5fSBhbmQgI3skYW5kfSc7IH1cblxuICAgICAgICAkbWVkaWFRdWVyeTogdW5xdW90ZSgjeyRtZWRpYVF1ZXJ5fSk7XG5cbiAgICAgICAgQG1lZGlhICN7YWxsKyRtZWRpYVF1ZXJ5fSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gQWRkIGEgYnJlYWtwb2ludFxuLy8gVXNhZ2U6ICRtcS1icmVha3BvaW50czogbXEtYWRkLWJyZWFrcG9pbnQodHZzY3JlZW4sIDE5MjBweCk7XG5AZnVuY3Rpb24gbXEtYWRkLWJyZWFrcG9pbnQoJG5hbWUsICRicmVha3BvaW50KSB7XG4gICAgJG5ldy1icmVha3BvaW50OiAoJG5hbWU6ICRicmVha3BvaW50KTtcbiAgICBAcmV0dXJuIG1hcC1tZXJnZSgkbXEtYnJlYWtwb2ludHMsICRuZXctYnJlYWtwb2ludCk7XG59XG5cbi8vIFNob3cgdGhlIGFjdGl2ZSBicmVha3BvaW50IGluIHRoZSB0b3AgcmlnaHQgY29ybmVyIG9mIHRoZSB2aWV3cG9ydFxuQGlmIChsZW5ndGgoJG1xLXNob3ctYnJlYWtwb2ludHMpID4gMCkge1xuICAgIGJvZHk6YmVmb3JlIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0ZDRjhFMztcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNGQkVFRDU7XG4gICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI0ZCRUVENTtcbiAgICAgICAgY29sb3I6ICNDMDk4NTM7XG4gICAgICAgIGZvbnQ6IHNtYWxsLWNhcHRpb247XG4gICAgICAgIHBhZGRpbmc6IDNweCA2cHg7XG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgei1pbmRleDogMTAwO1xuXG4gICAgICAgIC8vIExvb3AgdGhyb3VnaCB0aGUgYnJlYWtwb2ludHMgdGhhdCBzaG91bGQgYmUgc2hvd25cbiAgICAgICAgQGVhY2ggJHNob3ctYnJlYWtwb2ludCBpbiAkbXEtc2hvdy1icmVha3BvaW50cyB7XG4gICAgICAgICAgICAkd2lkdGg6IG1xLWdldC1icmVha3BvaW50LXdpZHRoKCRzaG93LWJyZWFrcG9pbnQpO1xuICAgICAgICAgICAgQGluY2x1ZGUgbXEoJHNob3ctYnJlYWtwb2ludCkge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiI3skc2hvdy1icmVha3BvaW50fSDiiaUgI3skd2lkdGh9ICgje21xLXB4MmVtKCR3aWR0aCl9KVwiO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */
