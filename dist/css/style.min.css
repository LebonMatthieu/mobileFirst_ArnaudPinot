/*!
Theme Name: mobileFirst_PinotArnaud
Theme URI: http://arnaudpinot.fr
Author: Arnaud Pinot
Author URI: 
Version: 1.0
Text Domain: ap
*//*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto}input[type="search"]{-webkit-appearance:textfield;box-sizing:content-box}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:bold}table{border-collapse:collapse;border-spacing:0}th,td{padding:0}body:before{background-color:#FCF8E3;border-bottom:1px solid #FBEED5;border-left:1px solid #FBEED5;color:#C09853;font:small-caption;padding:3px 6px;position:fixed;right:0;top:0;z-index:100}.no-touchevents .js-clickbox.is-hover{cursor:pointer}*{box-sizing:border-box}html{font-size:62.5%;position:relative;color:#000;background-color:#fff;height:100%;-webkit-font-smoothing:antialiased}body{height:100%}*,*::before,*::after{background-repeat:no-repeat}h1,h2,h3,h4{margin:0}p{margin:0}svg,img{width:100%;max-width:100%}ul{margin:0;padding:0}li{list-style:none}a{text-decoration:none;color:inherit}blockquote{padding:0;margin:0}.overflow{overflow:hidden}.uppercase{text-transform:uppercase}.hide-for-viewer{position:absolute;height:1px;width:1px;padding:0;border:0;overflow:hidden;clip:rect(1px 1px 1px 1px);clip:rect(1px, 1px, 1px, 1px)}.ap-footer{padding:2rem 0 2rem;text-align:left}.ap-footer__list{display:inline-block;width:100%}.ap-footer__list__item{display:inline-block;padding-right:3rem;padding-bottom:1rem}.ap-footer__list__item:nth-child(odd){width:50%;margin-right:-0.25em}.ap-footer__list__item:nth-child(even){width:50%;margin-right:-0.25em}.ap-footer__link{display:inline-block;position:relative;color:#000}.ap-footer__link:hover{color:#3142FF}.ap-header{padding-top:2rem;padding-bottom:4rem}.ap-header__logo{display:block;width:8rem;height:8rem}.ap-header__logo svg path{fill:#3142FF}.ap-header__logo svg rect{fill:#3142FF}.ap-centered,.ap-main-layout{margin:auto;padding:0 2rem;max-width:136rem}.ap-main-layout__col--small{width:100%;padding-left:0}.ap-navigation{display:none;position:fixed;top:0;left:0;z-index:1;width:100%;height:100%;overflow:auto;background-color:#C7EAFF}.ap-navigation:before{content:'';position:fixed;left:0;top:0;display:block;width:100%;height:8rem;background-color:#C7EAFF}.ap-navigation.is-open{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;resize:vertical}.ap-navigation__list{padding:8rem 2rem 8rem 0;text-align:right}.ap-navigation__list__item{display:inline-block;width:100%;font-family:"Work Sans",sans-serif;font-style:normal;font-size:45px;font-size:4.5rem;font-weight:800;line-height:1.16667}.ap-navigation__list__item__link{display:inline-block;position:relative;color:#fff;margin:1rem 0}.ap-navigation__list__item__link:hover{color:#3142FF}.ap-navigation__list__item__link:hover{color:#3142FF}.ap-navigation__list__item__link:hover:after{content:'';position:absolute;left:0;bottom:-1rem;width:100%;height:0.2rem;background-color:#3142FF}.ap-navigation__icon__wrapper{position:absolute;top:calc( (8rem / 2) + 2rem - 2.2rem);right:2rem;padding:2rem;width:2.2rem;z-index:3}.ap-navigation__icon__wrapper:hover{cursor:pointer}.ap-navigation__icon__wrapper.is-open{position:fixed}.ap-navigation__icon{display:inline-block;position:absolute;top:50%;left:50%;width:2.2rem;height:0.2rem;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);background-color:#000;-webkit-transition:background-color 0.3s ease 0s;transition:background-color 0.3s ease 0s;cursor:pointer}.ap-navigation__icon:before,.ap-navigation__icon:after{content:'';display:inline-block;position:absolute;right:0;width:100%;height:100%;-webkit-transition:top 0.3s ease 0.3s, background-color 0s ease 0.4s, -webkit-transform 0.3s ease 0s;transition:top 0.3s ease 0.3s, background-color 0s ease 0.4s, -webkit-transform 0.3s ease 0s;transition:transform 0.3s ease 0s, top 0.3s ease 0.3s, background-color 0s ease 0.4s;transition:transform 0.3s ease 0s, top 0.3s ease 0.3s, background-color 0s ease 0.4s, -webkit-transform 0.3s ease 0s;background-color:#000}.ap-navigation__icon:before{top:-0.8rem}.ap-navigation__icon:after{top:0.8rem}.ap-navigation__icon__wrapper.is-open .ap-navigation__icon{background-color:transparent}.ap-navigation__icon__wrapper.is-open .ap-navigation__icon:before,.ap-navigation__icon__wrapper.is-open .ap-navigation__icon:after{top:0;-webkit-transition:top 0.3s ease 0s, background-color 0.2s ease 0s, -webkit-transform 0.3s ease 0.3s;transition:top 0.3s ease 0s, background-color 0.2s ease 0s, -webkit-transform 0.3s ease 0.3s;transition:transform 0.3s ease 0.3s, top 0.3s ease 0s, background-color 0.2s ease 0s;transition:transform 0.3s ease 0.3s, top 0.3s ease 0s, background-color 0.2s ease 0s, -webkit-transform 0.3s ease 0.3s;background-color:#fff}.ap-navigation__icon__wrapper.is-open .ap-navigation__icon:before{-webkit-transform:rotate(135deg);-ms-transform:rotate(135deg);transform:rotate(135deg)}.ap-navigation__icon__wrapper.is-open .ap-navigation__icon:after{-webkit-transform:rotate(225deg);-ms-transform:rotate(225deg);transform:rotate(225deg)}.ap-link{display:inline-block;position:relative;color:#3142FF}.ap-link:hover{color:#000}.ap-link--alt{display:inline-block;position:relative;color:#000;display:inline}.ap-link--alt:hover{color:#3142FF}.ap-header__word-animation{position:relative;width:100vw;height:6rem;margin-top:3rem;overflow:hidden}.ap-header__word-animation__wrapper{position:absolute;left:0;top:0;width:5000px;height:100%}.ap-header__word-animation__group{display:block;position:relative;float:left;margin:0;white-space:nowrap;font-size:0;-webkit-animation:translate-keywords linear 8s infinite;animation:translate-keywords linear 8s infinite}.ap-header__word-animation__group span,.ap-header__word-animation__group h2{padding-right:10rem;font-family:"Work Sans",sans-serif;font-style:normal;font-size:60px;font-size:6rem;font-weight:700;line-height:1;color:#3142FF}@-webkit-keyframes translate-keywords{0%{-ms-transform:translateX(0);-webkit-transform:translateX(0);transform:translateX(0)}100%{-ms-transform:translateX(-100%);-webkit-transform:translateX(-100%);transform:translateX(-100%)}}@keyframes translate-keywords{0%{-ms-transform:translateX(0);-webkit-transform:translateX(0);transform:translateX(0)}100%{-ms-transform:translateX(-100%);-webkit-transform:translateX(-100%);transform:translateX(-100%)}}.title-alpha{font-family:"Work Sans",sans-serif;font-style:normal;font-size:17px;font-size:1.7rem;font-weight:700;line-height:1}.title-beta{font-family:"Work Sans",sans-serif;font-style:normal;font-size:45px;font-size:4.5rem;font-weight:800;line-height:1.16667}.title-gamma{font-family:"Work Sans",sans-serif;font-style:normal;font-size:60px;font-size:6rem;font-weight:700;line-height:1}.text-alpha{font-family:"Work Sans",sans-serif;font-style:normal;font-size:16px;font-size:1.6rem;font-weight:500;line-height:1}.text-beta{font-family:"Work Sans",sans-serif;font-style:normal;font-size:17px;font-size:1.7rem;font-weight:500;line-height:1.58824}.text-gamma{font-family:"Work Sans",sans-serif;font-style:normal;font-size:18px;font-size:1.8rem;font-weight:500;line-height:1.4}.text-delta{font-family:"Work Sans",sans-serif;font-style:normal;font-size:20px;font-size:2.0rem;font-weight:500;line-height:1.45455}.ap-works{position:relative;color:#000}.ap-works:before{content:'';display:block;position:absolute;right:-2rem;bottom:calc(100% - 10rem);z-index:-1;width:9999px;height:9999px;background-color:#C7EAFF}.ap-works__list{position:relative;height:100%}.ap-works__list__items{position:relative;width:100%;margin-bottom:6rem}.ap-works__list__items:last-child{margin-bottom:0}.ap-works__item{width:100%;height:100%}.ap-works__item__image{width:100%;height:20rem;background-size:cover;background-position:top}.ap-works__item__content{position:relative}.ap-works__item__role{display:none}.ap-works__item__title{overflow:hidden;position:relative;margin-top:2rem;margin-bottom:1rem}.ap-works__item__title__content{display:table;-webkit-transform:translateX(-1.8rem);-ms-transform:translateX(-1.8rem);transform:translateX(-1.8rem)}.ap-works__item__title__content--number{display:table-cell;vertical-align:bottom;padding-right:1rem}.ap-works__item__title__content--name{display:table-cell;vertical-align:bottom}.ap-works__item__presentation{padding:1rem 0}.ap-works__item__link{font-family:"Work Sans",sans-serif;font-style:normal;font-size:17px;font-size:1.7rem;font-weight:500;line-height:1.58824;display:inline-block;position:relative;color:#3142FF}.ap-works__item__link:hover{color:#000}.ap-works__item__link:after{content:'';position:absolute;left:0;bottom:-1rem;width:100%;height:0.2rem;background-color:#3142FF}.ap-works__item__link:hover{color:#000}.ap-works__item__link:hover:after{background-color:#000}.ap-introduction{padding-bottom:4rem}.ap-references{position:relative;margin:10rem 0 6rem}.ap-references:before{content:'';display:block;position:absolute;left:-2rem;right:-2rem;top:-4rem;bottom:-4rem;background-color:#C7EAFF}.ap-references__title{display:inline-block;position:relative;margin-bottom:2rem}.ap-references__title:after{content:'';display:block;position:absolute;bottom:-1rem;left:0;width:40%;height:0.2rem;background-color:#000}.ap-references__list{font-family:"Work Sans",sans-serif;font-style:normal;font-size:20px;font-size:2.0rem;font-weight:500;line-height:1.45455}.ap-references__list__item{display:block}.ap-references__list__item:after{content:".";position:relative;color:#000}.ap-references__list__item:last-child:after{content:''}@media all and (min-width: 20em){body:before{content:"mobile ≥ 320px (20em)"}}@media all and (min-width: 37.5em){body:before{content:"tablet ≥ 600px (37.5em)"}.ap-footer{padding:6rem 0 2rem 0;text-align:center}.ap-footer__list__item{width:auto;margin-right:5rem;padding-right:0}.ap-footer__list__item:nth-child(odd){width:auto;margin-right:5rem}.ap-footer__list__item:nth-child(even){width:auto;margin-right:5rem}.ap-footer__list__item:last-child{margin-right:0}.ap-header__logo{width:10rem;height:10rem}.ap-centered,.ap-main-layout{padding:0 4rem}.ap-navigation__list__item{font-size:60px;font-size:6rem}.ap-navigation__list__item__link{margin:2rem 0}.ap-navigation__icon__wrapper{right:4rem;top:4rem}.ap-header__word-animation{height:10rem}.ap-header__word-animation__group span,.ap-header__word-animation__group h2{font-size:100px;font-size:10rem}.title-beta{font-size:60px;font-size:6rem}.title-gamma{font-size:100px;font-size:10rem}.ap-works{color:#fff}.ap-works:before{right:8rem;bottom:calc(100% - 45rem / 2)}.ap-works__list__items{height:45rem;margin-bottom:4rem}.ap-works__item__image{height:100%}.ap-works__item__content{position:absolute;left:4rem;right:4rem;bottom:4rem;max-width:66.66%}.ap-works__item__role{display:inline-block;position:absolute;top:3rem;right:4rem;-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:rotate(-90deg) translateY(50%);-ms-transform:rotate(-90deg) translateY(50%);transform:rotate(-90deg) translateY(50%)}.ap-works__item__title__content{-webkit-transform:translateX(-3rem);-ms-transform:translateX(-3rem);transform:translateX(-3rem)}.ap-works__item__link{display:inline-block;position:relative;color:#fff}.ap-works__item__link:hover{color:#3142FF}.ap-works__item__link:after{content:'';position:absolute;left:0;bottom:-1rem;width:100%;height:0.2rem;background-color:#fff}.ap-works__item__link:hover{color:#3142FF}.ap-works__item__link:hover:after{background-color:#3142FF}.ap-references{margin:8rem 0 2rem}.ap-references:before{left:-4rem;right:8rem;background-color:#C7EAFF}.ap-references__list__item{display:inline}.ap-introduction__content,.ap-references__content{max-width:66.66%}}@media all and (min-width: 64em){body:before{content:"desktop ≥ 1024px (64em)"}.ap-footer{padding:6rem 0}.ap-main-layout{position:relative;width:100%;min-height:52rem}.ap-main-layout__col--wide{width:66.66%;padding-left:4rem}.ap-main-layout__col--small{width:100%;padding-left:calc(66.66% + 4rem)}.ap-navigation{display:block;position:absolute;left:50%;right:0;top:6rem;height:auto;max-width:136rem;padding:0 4rem;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:inherit;flex-direction:inherit;-webkit-box-pack:inheritr;-ms-flex-pack:inheritr;justify-content:inheritr;resize:inherit;overflow-y:inherit;text-align:right;color:#000;background-color:transparent;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.ap-navigation:before{content:'';display:none}.ap-navigation__list{padding:0;text-align:center;display:inline-block}.ap-navigation__list__item{display:inline-block;width:auto}.ap-navigation__list__item:after{content:'';display:inline-block;vertical-align:middle;width:3rem;height:0.1rem;margin:0 1rem;background-color:#000}.ap-navigation__list__item:last-child:after{content:'';display:none}.ap-navigation__list__item__link{display:inline-block;position:relative;color:#000;font-family:"Work Sans",sans-serif;font-style:normal;font-size:17px;font-size:1.7rem;font-weight:500;line-height:1.58824;vertical-align:middle;margin:0}.ap-navigation__list__item__link:hover{color:#3142FF}.ap-navigation__list__item__link:hover{color:#3142FF}.ap-navigation__list__item__link:hover:after{content:'';position:absolute;left:0;bottom:-1rem;width:100%;height:0.2rem;background-color:#3142FF}.ap-navigation__list__item__link.is-active{display:inline-block;position:relative;color:#3142FF}.ap-navigation__list__item__link.is-active:after{content:'';position:absolute;left:0;bottom:-1rem;width:100%;height:0.2rem;background-color:#3142FF}.ap-navigation__icon{display:none}.text-gamma{font-size:20px;font-size:2rem}.text-delta{font-size:22px;font-size:2.2rem}.ap-works{position:absolute;top:0;left:0}.ap-works:before{bottom:calc(52rem / 2)}.ap-works__list{height:52rem}.ap-works__list__items{position:absolute;left:0;top:0;bottom:0;right:0;height:100%;margin:0}.ap-introduction{padding-bottom:0}.ap-references{margin:0}.ap-references:before{content:'';display:none}.ap-references__list{font-size:22px;font-size:2.2rem}.ap-references__list{font-family:"Work Sans",sans-serif;font-style:normal;font-size:17px;font-size:1.7rem;font-weight:500;line-height:1.58824}.ap-introduction,.ap-references{padding-top:6rem}.ap-introduction__content,.ap-references__content{max-width:345px;margin-right:0;margin-left:auto;display:block}}@media all and (min-width: 87.5em){body:before{content:"wide ≥ 1400px (87.5em)"}}

/*# sourceMappingURL=data:application/json;base64, */
